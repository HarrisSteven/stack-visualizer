{"version":3,"sources":["Components/Compile Components/RunTab.js","Components/Compile Components/StepTab.js","Components/Compile Components/Timer.js","Components/Compile Components/Slider.js","Components/Compile Components/VisualizeTab.js","Components/Compile Components/RunOptions.js","Components/ArmInfo.js","Components/Compile Components/Parser.js","Components/Push Components/PushReg.js","Components/Push Components/PushVar.js","Components/Push Components/PushOutParam.js","Components/Push Components/PushInParam.js","Components/Push Components/PushFunc.js","Components/Push Components/Push.js","Components/StackOperations.js","Components/Tab.js","Components/Frame.js","Components/Stack.js","Components/RegisterFileConfig.js","Components/RegisterFile.js","App.js","serviceWorker.js","index.js"],"names":["RunTab","className","Button","style","fontSize","variant","color","onClick","this","props","handleRun","React","Component","StepTab","step","startStep","handleStep","handleReset","Timer","state","instructions","parseInt","startTimeInSeconds","run","setState","resetTimer","interval","setInterval","tick","speed","clearInterval","useStyles","makeStyles","root","width","ContinuousSlider","classes","useState","value","setValue","Grid","container","spacing","item","Typography","id","gutterBottom","xs","Slider","min","max","defaultValue","valueLabelDisplay","onChange","event","newValue","changeSpeed","aria-labelledby","VisualizeTab","visualize","startVisualize","handleVisualize","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","theme","flexGrow","backgroundColor","palette","background","paper","RunOptions","AppBar","position","Tabs","minHeight","centered","aria-label","Tab","label","ArmInfo","open","setOpen","handleClose","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Dialog","onClose","scroll","aria-describedby","maxWidth","DialogTitle","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","Parser","handleChange","e","target","hexToInt","hex","console","log","length","num","maxVal","Math","pow","code","pointCurInstruction","parse","handleCompile","compile","checkErrors","errorInfo","line","status","lines","error","visualDisplay","nextInstruction","instructionCount","clear","newSpeed","getLines","instructionData","getInstructions","newInfo","instruction","type","push","debugCode","addStart","branch","branchData","arg1","labels","bx","i","curLine","getRegister","reg","register","R0","R1","R2","R3","R4","R5","R6","R7","R8","R9","R10","fp","R12","sp","lr","pc","executeInstructions","instructionLines","begin","substring","test","splice","newLines","j","arg2","arg3","replace","arg4","arg5","arg6","elem","newInstructions","add","slice","setPc","sub","mul","mov","ldr","str","cmp","bl","pop","bitwise","newInstructionCount","alert","data","movData","handleSp","addData","subData","multData","mult","name","isNaN","existsLabel","String","pushData","popData","offset","ldrData","strData","func","bitData","noValidate","autoComplete","search","TextField","InputProps","fullWidth","multiline","rows","rowsMax","PushReg","pushR0","pushReg","close","pushR1","pushR2","pushR3","pushR4","pushR5","pushR6","pushR7","pushR8","pushR9","pushR10","pushFp","pushR12","pushSp","pushLr","pushPc","ButtonGroup","size","PushVar","pushVar","variable","PushOutParam","pushOutParam","parameter","arg","PushInParam","pushInParam","PushFunc","incVar","newNum","numVar","incParIn","numParIn","incParOut","numParOut","pushFunc","variables","inParams","outParams","variable1","variable2","variable3","variable4","variable5","variable6","parIn1","parIn2","parIn3","parIn4","parIn5","parIn6","parOut1","parOut2","parOut3","parOut4","parOut5","parOut6","reverseInParams","funcData","registers","sortRegisters","vars","numReg","newReg","sort","a","b","addRegister","removed","newArr","FormControlLabel","control","Checkbox","checked","disabled","class","Push","openRegister","setRegister","openVariable","setVariable","openOutParameter","setOutParameter","openInParameter","setInParameter","openFunction","setFunction","StackOperations","SelectTab","pushFunction","Frame","address","params","pos","Container","abs","Stack","scrollToBottom","messagesEnd","scrollIntoView","behavior","decimalToHex","decimalNumber","hexNum","temp","fromCharCode","reverse","setFrames","lowAddress","frames","pushEmpty","loadByAddress","newFrames","frame","setReg","storeByAddress","handleFuction","pushByInParam","pushByOutParam","pushByVar","inParam","pushByReg","outParam","newFp","newSp","decSp","curFrames","incSp","popRegister","removeFrames","newRegister","clearRegister","bind","setPush","setPopReg","setPop","setLdr","setStr","setSp","setClear","setRemoveFrames","map","char","float","el","RegisterFileConfig","number","toString","toUpperCase","decimal","RegisterFile","toggleHex","newPc","handleSpChild","removeFramesChild","sum","difference","product","ldrChild","strChild","pushChild","pushArray","functionChild","clearStack","clearChild","popArray","popRegChild","popChild","result","backwards","operation","destination","src1","src2","immediate","justifyContent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.4515c803.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport './../../App.css';\r\n\r\nclass RunTab extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"RunTab\">\r\n                <Button style = {{fontSize: \"1.5vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.props.handleRun}>Run</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RunTab;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nclass StepTab extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"RunTab\">\r\n                {this.props.step ? null: <Button style = {{fontSize: \"1.5vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.props.startStep}>Start</Button>}\r\n                {this.props.step ? <Button style = {{fontSize: \"1.5vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.props.handleStep}>Step <ArrowForwardIcon></ArrowForwardIcon></Button>: null} \r\n                {this.props.step ? <Button style = {{fontSize: \"1.5vh\"}} variant=\"contained\" color=\"primary\" onClick={this.props.handleReset}>Terminate</Button>: null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StepTab;","import React from 'react';\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        instructions: parseInt(props.startTimeInSeconds, 10) || 0\r\n      };\r\n    }\r\n  \r\n    tick() {\r\n      if(this.props.run) {\r\n        this.setState(state => ({\r\n          instructions: state.instructions + 1\r\n        }));\r\n        this.props.step();\r\n      }\r\n      else {\r\n        this.props.resetTimer();\r\n      }\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), (1000 / this.props.speed));\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n  \r\n    // formatTime(secs) {\r\n    //   let hours   = Math.floor(secs / 3600);\r\n    //   let minutes = Math.floor(secs / 60) % 60;\r\n    //   let seconds = secs % 60;\r\n    //   return [hours, minutes, seconds]\r\n    //       .map(v => ('' + v).padStart(2, '0'))\r\n    //       .filter((v,i) => v !== '00' || i > 0)\r\n    //       .join(':');\r\n    // }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3><pre style = {{fontSize: \"2vh\"}}>   Instructions Executed: {this.state.instructions}</pre></h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Timer;\r\n  ","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"13vw\",\r\n  },\r\n});\r\n\r\nexport default function ContinuousSlider(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(props.speed);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeSpeed(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n            <Typography style = {{fontSize: \"1.5vh\"}} id=\"continuous-slider\" gutterBottom>\r\n                Instructions / sec\r\n            </Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider min={1} step={1} max={6} defaultValue={props.speed} valueLabelDisplay=\"on\" value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n        <Grid item>\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Timer from './Timer.js';\r\nimport Slider from './Slider.js';\r\nimport './../../App.css';\r\n\r\nclass VisualizeTab extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"RowTable\">\r\n\r\n                <div className=\"ColumnTable\">\r\n                    {this.props.visualize ? null: <Button style = {{fontSize: \"1.5vh\"}} variant=\"contained\" color=\"primary\" onClick={this.props.startVisualize}>Start</Button>}\r\n                    {this.props.visualize ? <Button style = {{fontSize: \"1.5vh\"}} variant=\"contained\" color=\"primary\" onClick={this.props.handleReset}>Terminate</Button>: null}\r\n                </div>\r\n\r\n                <div className=\"ColumnTable\">       \r\n                    <h3><pre>{this.props.visualize ? <Timer style = {{fontSize: \"1.5vh\"}} startTimeInSeconds=\"0\" step={this.props.handleVisualize} speed={this.props.speed} run={this.props.visualize}/>: null}</pre></h3>\r\n                    {this.props.visualize ? null: <Slider style = {{fontSize: \"1.5vh\"}} changeSpeed={this.props.changeSpeed} speed={this.props.speed}/>}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VisualizeTab;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport RunTab from './RunTab.js';\r\nimport StepTab from './StepTab.js';\r\nimport VisualizeTab from './VisualizeTab.js';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"40vh\",\r\n  },\r\n}));\r\n\r\nexport default function RunOptions(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs style={{minHeight: \"0vh\"}} centered value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab style = {{fontSize: \"1.3vh\", minHeight: \"0vh\"}} label=\"Run\" {...a11yProps(0)} />\r\n          <Tab style = {{fontSize: \"1.3vh\", minHeight: \"0vh\"}} label=\"Visualize\" {...a11yProps(1)} />\r\n          <Tab style = {{fontSize: \"1.3vh\", minHeight: \"0vh\"}} label=\"Step\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <RunTab handleRun={props.handleRun}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <VisualizeTab visualize={props.visualize} startVisualize={props.startVisualize} handleReset={props.handleReset} handleVisualize={props.handleVisualize} speed={props.speed} changeSpeed={props.changeSpeed}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <StepTab handleStep={props.handleStep} startStep={props.startStep} step={props.step} handleReset={props.handleReset}/>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport './../App.css';\r\n\r\nexport default function ArmInfo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const handleClickOpen = () => () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen()}><InfoIcon style={{fontSize: \"2vh\"}}></InfoIcon></Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        //fullWidth={true}\r\n        maxWidth={true}\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">ARM Compiler Info</DialogTitle>\r\n        <DialogContent dividers={true}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n              <h1>\r\n              <pre>\r\n            {\r\n            'Syntax \\n \\n' + \r\n            'Registers should be specified as they appear in the register file \\'R0\\', \\'R1\\', ..., \\'fp\\', \\'sp\\', \\'lr\\', \\'pc\\' \\n' + \r\n            'Immediates should be specified with a \\'#\\' prefix, e.g. #15 or #0xF \\n \\n \\n' + \r\n            'Supported Instructions \\n \\n' +\r\n            'AND <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'ORR <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'EOR <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'ASR <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'LSR <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'LSL <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'MOV <Register>, <Register/Immediate> \\n' + \r\n            'ADD <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'SUB <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'MUL <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'push {<Register>, <Register>}  (from 1-6 registers) \\n' + \r\n            'pop {<Register>, <Register>}  (from 1-6 registers) \\n' + \r\n            'LDR <Register>, [<Register>, <ImmediateOffset>] OR LDR <Register>, [<Address>] \\n' + \r\n            'STR <Register>, [<Register>, <ImmediateOffset>] OR STR <Register>, [<Address>] \\n' + \r\n            'CMP <Register>, <Register/Immediate> \\n' + \r\n            'B <LabelName> \\n' + \r\n            'BEQ <LabelName> \\n' + \r\n            'BNE <LabelName> \\n' + \r\n            'BGT <LabelName> \\n' + \r\n            'BLT <LabelName> \\n' + \r\n            'BGE <LabelName> \\n' + \r\n            'BLE <LabelName> \\n' + \r\n            'BL <Register> \\n' + \r\n            'To add a label use \\'<LabelName>: <Instruction>\\' \\n \\n \\n' +\r\n            'Sample Code \\n \\n' + \r\n            'FACTORIAL \\n' +\r\n            'MOV R0, #5 \\n' +\r\n            'BL fact \\n' +\r\n            'B finish \\n' +\r\n            'fact: push {R4, fp, lr} \\n' +\r\n            'CMP R0, #1 \\n' +\r\n            'BLE ret_one \\n' +\r\n            'MOV R4, R0 \\n' +\r\n            'SUB R0, R0, #1 \\n' +\r\n            'BL fact \\n' +\r\n            'MUL R0, R0, R4 \\n' +\r\n            'B end \\n' +\r\n            'ret_one: MOV R0, #1 \\n' +\r\n            'end: pop {R4, fp, lr} \\n' +\r\n            'BX lr \\n' +\r\n            'MOV R0, #3 \\n' +\r\n            'BL fact \\n' +\r\n            'MOV R2, R0\t\\n' +\t\t\t\t\r\n            'finish: \\n' \r\n\r\n\r\n              }\r\n                          </pre></h1>\r\n\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Quit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Highlight from 'react-highlighter';\r\nimport RunOptions from './RunOptions.js';\r\nimport ArmInfo from './../ArmInfo.js';\r\nimport './../../App.css';\r\n\r\nclass Parser extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            code: \"\",\r\n            line: 0,\r\n            status: 0,\r\n            step: false,\r\n            visualize: false,\r\n            speed: 3,\r\n            lines: [],\r\n            debugCode: \"\",\r\n            nextInstruction: \"\",\r\n            compile: false,\r\n            error: false,\r\n            errorInfo: [],\r\n            instructionCount: 0\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    hexToInt = (hex) => {\r\n        console.log(\"HEXNUM: \" + hex);\r\n        while(hex.length < 8) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        var num = parseInt(hex, 16);\r\n        var maxVal = Math.pow(2, hex.length / 2 * 8);\r\n        if (num > maxVal / 2 - 1) {\r\n            num = num - maxVal;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    startStep = ()  => {\r\n        this.setState({\r\n            step: true\r\n        })\r\n        if(this.state.code === \"\") {\r\n            this.handleReset();\r\n        }\r\n        this.pointCurInstruction();\r\n    }\r\n\r\n    handleStep = () => {\r\n        this.parse(true);\r\n        this.pointCurInstruction();\r\n    }\r\n\r\n    handleRun = () => {\r\n        this.parse(false);\r\n    }\r\n\r\n    handleVisualize = () => {\r\n        this.pointCurInstruction();\r\n        this.parse(true);\r\n    }\r\n\r\n    startVisualize = () => {\r\n        this.setState({\r\n            visualize: true\r\n        })\r\n        if(this.state.code === \"\") {\r\n            this.handleReset();\r\n        }\r\n        this.pointCurInstruction();\r\n    }\r\n\r\n    handleCompile = () => {\r\n        this.setState({\r\n            compile: true\r\n        })\r\n        this.checkErrors();\r\n    }\r\n\r\n    handleReset = () => {\r\n        console.log(\"RESETTING\");\r\n        let errorInfo;\r\n        if(this.state.compile) {\r\n            errorInfo = this.state.errorInfo;\r\n        }\r\n        else {\r\n            errorInfo = [];\r\n        }\r\n        this.setState({\r\n            line: 0,\r\n            status: 0,\r\n            step: false,\r\n            speed: 3,\r\n            lines: [],\r\n            error: false,\r\n            errorInfo: errorInfo,\r\n            visualize: false,\r\n            visualDisplay: false,\r\n            nextInstruction: \"\",\r\n            instructionCount: 0\r\n        })\r\n        this.props.clear();\r\n    }\r\n\r\n    changeSpeed = (newSpeed) => {\r\n        this.setState({\r\n            speed: newSpeed\r\n        })\r\n    }\r\n\r\n    checkErrors = () => {\r\n        let lines = this.getLines();\r\n        let instructionData = this.getInstructions(lines).instructions;\r\n        let newInfo = this.state.errorInfo;\r\n\r\n        for(const instruction of instructionData) {\r\n            if(instruction.instruction !== null) {\r\n                let type = instruction.instruction;\r\n                if(type !== \"MOV\" && type !== \"ADD\" && type !== \"SUB\" && type !== \"MUL\" && type !== \"LDR\" && type !== \"STR\" && type !== \"push\" && type !== \"pop\" && type !== \"B\" && type !== \"BNE\" && type !== \"BEQ\" && type !== \"BGT\" && type !== \"BLT\" && type !== \"BGE\" && type !== \"BLE\" && type !== \"CMP\" && type !== \"BX\" && type !== \"BL\") {\r\n                    newInfo.push({instruction: type, line: instruction.line+1});\r\n                }\r\n            }\r\n        }\r\n        this.setState({\r\n            error: true,\r\n            errorInfo: newInfo\r\n        })\r\n    }\r\n\r\n    pointCurInstruction = () => {\r\n        let debugCode = \"\";\r\n        let nextInstruction = \"\";\r\n        let addStart = false;\r\n        let branch = false;\r\n        let lines = this.getLines();\r\n        let instructionData = this.getInstructions(lines);\r\n\r\n        let branchData = [{label: null, instruction: null, arg1: null}];\r\n\r\n        for(const instruction of instructionData.instructions) {\r\n            if(instruction.line === this.state.line) {\r\n                if(instruction.instruction !== null) {\r\n                    branchData[0].instruction = instruction.instruction;\r\n                }\r\n                if(instruction.arg1 !== null) {\r\n                    branchData[0].arg1 = instruction.arg1;\r\n                }\r\n            }\r\n        }\r\n        console.log(branchData[0]);\r\n        console.log(instructionData.labels);\r\n\r\n        // If the instruction is a branch, we must highlight where it will branch to\r\n        let instruction = branchData[0].instruction;\r\n        if(instruction === \"B\" || (instruction === \"BNE\" && this.state.status !== 0) || (instruction === \"BEQ\" && this.state.status === 0) || (instruction === \"BGT\" && this.state.status === 1) || (instruction === \"BLT\" && this.state.status === -1) || (instruction === \"BGE\" && this.state.status !== -1) || (instruction === \"BLE\" && this.state.status !== 1) || instruction === \"BL\" || instruction === \"BX\") {\r\n            branch = true;\r\n            let line;\r\n            if(instruction === \"BX\") {\r\n                line = this.bx(branchData[0].arg1) - 1;\r\n            }\r\n            else {\r\n                line = this.branch(branchData, instructionData.labels);\r\n            }\r\n            console.log(line);\r\n            for(let i = 0; i < lines.length; i++) {\r\n                let curLine = lines[i];\r\n                if(i === line) {\r\n                    nextInstruction = (i+1) + \". \" + curLine + \"\\n\";\r\n                    debugCode += (i+1) + \". \" + curLine + \"\\n\";\r\n                }\r\n                else {\r\n                    debugCode += (i+1) + \" \" + curLine + \"\\n\";\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!(this.state.line === lines.length - 1) && !branch) {\r\n            for(let i = 0; i < lines.length; i++) {\r\n                let curLine = lines[i];\r\n                if(this.state.nextInstruction === \"\" && i === 0) {\r\n                    nextInstruction = (i+1) + \". \" + curLine + \"\\n\";\r\n                    debugCode += (i+1) + \". \" + curLine + \"\\n\";\r\n                    addStart = true;\r\n                }\r\n                else if(i === this.state.line + 1 && !addStart) {\r\n                    nextInstruction = (i+1) + \". \" + curLine + \"\\n\";\r\n                    debugCode += (i+1) + \". \" + curLine + \"\\n\";\r\n                }\r\n                else {\r\n                    debugCode += (i+1) + \" \" + curLine + \"\\n\";\r\n                }\r\n            }\r\n        }\r\n\r\n        console.log(nextInstruction);\r\n        \r\n        this.setState({\r\n            debugCode: debugCode,\r\n            nextInstruction: nextInstruction\r\n        })\r\n    }\r\n\r\n    getRegister = (reg) => {\r\n        switch(reg) {\r\n            case \"R0\": {return(this.props.register.R0);}\r\n            case \"R1\": {return(this.props.register.R1);}\r\n            case \"R2\": {return(this.props.register.R2);}\r\n            case \"R3\": {return(this.props.register.R3);}\r\n            case \"R4\": {return(this.props.register.R4);}\r\n            case \"R5\": {return(this.props.register.R5);}\r\n            case \"R6\": {return(this.props.register.R6);}\r\n            case \"R7\": {return(this.props.register.R7);}\r\n            case \"R8\": {return(this.props.register.R8);}\r\n            case \"R9\": {return(this.props.register.R9);}\r\n            case \"R10\": {return(this.props.register.R10);}\r\n            case \"fp\": {return(this.props.register.fp);}\r\n            case \"R12\": {return(this.props.register.R12);}\r\n            case \"sp\": {return(this.props.register.sp);}\r\n            case \"lr\": {return(this.props.register.lr);}\r\n            case \"pc\": {return(this.props.register.pc);}\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    parse = (step) => {\r\n        let lines = this.getLines();\r\n        let instructionData = this.getInstructions(lines);\r\n        this.executeInstructions(instructionData.instructions, instructionData.instructionLines, instructionData.labels, step);\r\n    }\r\n\r\n    getLines = () => {\r\n        let lines = [];\r\n        let code = this.state.code;\r\n        console.log(this.state.code);\r\n        let begin = 0;\r\n\r\n        for(let i = 0; i < code.length; i++) {\r\n            if(code.substring(i, i+1) === '\\n') {\r\n                lines.push(code.substring(begin, i) + \" \");\r\n                begin = i+1;\r\n            }\r\n        }\r\n        lines.push(code.substring(begin, code.length) + \" \");\r\n        \r\n        for(let i = 0; i < lines.length; i++) {\r\n            let line = lines[i];\r\n            if(!(/\\S/.test(line))) {\r\n                lines.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        console.log(lines);\r\n        let newLines = this.state.lines;\r\n        newLines = lines;\r\n        this.setState({\r\n            lines: newLines\r\n        })\r\n\r\n        return(lines);\r\n    }\r\n\r\n    getInstructions = (lines) => {\r\n        let instructions = [];\r\n        let instructionCount = 0;\r\n        let begin = 0;\r\n        for(let i = 0; i < lines.length; i++) {\r\n            begin = 0;\r\n            instructionCount = 0;\r\n            let line = lines[i];\r\n            for(let j = 0; j < line.length; j++) {\r\n                //console.log(line.substring(j, j+1));\r\n                //if(line.substring(j, j+1) === ' ') {\r\n                if(/\\s/.test(line.substring(j, j+1))) {\r\n                    //console.log(line.substring(begin, j));\r\n                    //console.log(\"begin: \" + begin + \" end: \" + j);\r\n                    //console.log(line.substring(j-1, j));\r\n                    switch(instructionCount) {\r\n                        case 0: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, instruction: line.substring(begin, j-1).replace(/\\s/g, \"\"), label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(j-1, j) === \":\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: line.substring(begin, j-1).replace(/\\s/g, \"\")});\r\n                                begin = j+1;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: null, arg6: null, instruction: line.substring(begin, j).replace(/\\s/g, \"\"), label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 1: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg2: null, arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: line.substring(begin, j).replace(/\\s/g, \"\"), arg2: null, arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 2: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: line.substring(begin, j).replace(/\\s/g, \"\"), arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 3: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: line.substring(begin, j).replace(/\\s/g, \"\"), arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 4: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: line.substring(begin, j).replace(/\\s/g, \"\"), arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 5: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: line.substring(begin, j).replace(/\\s/g, \"\"), arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 6: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: null, arg6: line.substring(begin, j-1).replace(/\\s/g, \"\"), instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: null, arg6: line.substring(begin, j).replace(/\\s/g, \"\"), instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        default: {}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let curLine = 0;\r\n        let instructionLines = [0];\r\n        let labels = [];\r\n        for(let i = 0; i < instructions.length; i++) {\r\n            let elem = instructions[i];\r\n            if(elem.line !== curLine) {\r\n                instructionLines.push(i);\r\n                curLine++;\r\n            }\r\n            if(elem.label !== null) {\r\n                labels.push(elem);\r\n            }\r\n        }\r\n\r\n        console.log(labels);\r\n        //console.log(instructionLines);\r\n        console.log(instructions);\r\n\r\n        let returnData = {instructions: instructions, instructionLines: instructionLines, labels: labels};\r\n        return(returnData);\r\n    }\r\n\r\n    executeInstructions = (instructions, instructionLines, labels, step) => {\r\n        let line = 0;\r\n        let begin = 0;\r\n        let type = \"\";\r\n        let status = 0;\r\n        let newInstructions = [];\r\n        console.log(\"Step State: \" + step);\r\n\r\n        if(step) {\r\n            let curLine = this.state.line;\r\n            console.log(\"line: \" + curLine);\r\n            for(let i = 0; i < instructions.length; i++) {\r\n                let elem = instructions[i];\r\n                if(elem.line === curLine) {\r\n                    newInstructions.push(elem);\r\n                }\r\n            }\r\n            instructions = newInstructions;\r\n            line = curLine;\r\n        }\r\n        console.log(instructions);\r\n\r\n        for(let i = 0; i < instructions.length; i++) {\r\n            let elem = instructions[i];\r\n            console.log(elem);\r\n\r\n            if((elem.line !== line) || (i === instructions.length - 1)) {\r\n                if(i === instructions.length - 1) {\r\n                    i++;\r\n                    console.log(\"Incrementing i\");\r\n                }\r\n        \r\n                // When stepping/visualizing, if there is a label on a line by itself, move to the next line\r\n                if(type === \"\") {\r\n                    line++;\r\n                }\r\n                switch(type) {\r\n                    case \"ADD\": {\r\n                        this.add(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"SUB\": {\r\n                        this.sub(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"MUL\": {\r\n                        this.mul(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"MOV\": {\r\n                        this.mov(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"LDR\": {\r\n                        this.ldr(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"STR\": {\r\n                        this.str(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"B\": {\r\n                        console.log(\"Branch\");\r\n                        line = this.branch(instructions.slice(begin, i), labels);\r\n                        i = instructionLines[line];\r\n                        begin = i;\r\n                        this.props.setPc(line+3);\r\n                        console.log(line);\r\n                        console.log(i);\r\n                        break;\r\n                    }\r\n                    case \"CMP\": {\r\n                        this.props.setPc(line+3);\r\n                        status = this.cmp(instructions.slice(begin, i));\r\n                        this.setState({\r\n                            status: status\r\n                        })\r\n                        console.log(\"Status: \" + status);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"BGT\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        console.log(\"status: \" + status);\r\n                        if(status === 1) {\r\n                            console.log(\"BGT Branching\");\r\n                            line = this.branch(instructions.slice(begin, i), labels);\r\n                            i = instructionLines[line];\r\n                            console.log(line);\r\n                            console.log(i);\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BLT\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(status === -1) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);\r\n                            i = instructionLines[line];\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BEQ\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(status === 0) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);                      \r\n                            i = instructionLines[line];\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BNE\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(!(status === 0)) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);                   \r\n                            i = instructionLines[line];\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BGE\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(!(status === -1)) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);                     \r\n                            i = instructionLines[line];\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BLE\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(!(status === 1)) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);                   \r\n                            i = instructionLines[line];\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BL\": {\r\n                        this.bl(line+2);\r\n                        line = this.branch(instructions.slice(begin, i), labels);                 \r\n                        this.props.setPc(line+3);\r\n                        i = instructionLines[line];\r\n                        begin = i;\r\n                        break;\r\n                    }\r\n                    case \"BX\": {\r\n                        line = this.bx(instructions.slice(begin, i)[1].arg1) - 1;\r\n                        this.props.setPc(line+3);\r\n                        i = instructionLines[line];\r\n                        begin = i;\r\n                        break;\r\n                    }\r\n                    case \"push\": {\r\n                        this.push(instructions.slice(begin, i));\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"pop\": {\r\n                        this.pop(instructions.slice(begin, i));\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"AND\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"AND\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"ORR\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"ORR\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"EOR\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"EOR\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"ASR\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"ASR\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"LSR\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"LSR\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"LSL\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"LSL\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    default: {}\r\n                }\r\n            }\r\n\r\n            let newInstructionCount = this.state.instructionCount;\r\n            this.setState({\r\n                line: line,\r\n                instructionCount: newInstructionCount++\r\n            })\r\n            console.log(\"TOTALINSTRUCTIONS: \" + this.state.instructionCount)\r\n            if(this.state.instructionCount > 50000) {\r\n                this.handleReset();\r\n                alert(\"Infinite loop or running took too long\");\r\n                break;\r\n            }\r\n\r\n            if(i <= instructions.length - 1) {\r\n                elem = instructions[i];\r\n            }\r\n\r\n            // When running, if there is a label on a line by itself, meaning the next instruction is a label/instruction, move to the next line\r\n            if(elem.label !== null && !(i === instructions.length) && !(this.state.step) && !(this.state.visualize) && i+1 < instructions.length && instructions[i+1].arg1 === null) {\r\n                console.log(\"SETTING TYPE TO NULL\");\r\n                type = \"\";\r\n            }\r\n\r\n            if(elem.instruction !== null) {\r\n                console.log(\"SETTING TYPE TO: \" + elem.instruction);\r\n                type = elem.instruction;\r\n            }\r\n        }\r\n        \r\n        if(line === this.state.lines.length) {\r\n            this.handleReset();\r\n        }\r\n        if(!(this.state.step) && !(this.state.visualize)) {\r\n            this.handleReset();\r\n        }\r\n\r\n    }\r\n\r\n    mov = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        console.log(\"move\");\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n        }\r\n        if(arg2.substring(0, 1) === \"#\") {\r\n            if (arg2.substring(1, 3) === \"0x\") {\r\n                arg2 = this.hexToInt(arg2.substring(3, arg2.length));\r\n            }\r\n            else { \r\n                arg2 = parseInt(arg2.substring(1, arg2.length));\r\n            }\r\n        }\r\n        console.log(arg2);\r\n\r\n        let movData = {arg1: arg1, arg2: arg2, handleSp: false};\r\n\r\n        if(arg1 === \"sp\" || arg1 === \"SP\" || arg1 === \"Sp\") {\r\n            movData = {arg1: arg1, arg2: arg2, handleSp: true};\r\n        }\r\n        console.log(movData);\r\n        this.props.mov(movData);\r\n    }\r\n\r\n    add = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                arg3 = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg3.substring(0, 1) === \"#\") {\r\n            if (arg3.substring(1, 3) === \"0x\") {\r\n                arg3 = this.hexToInt(arg3.substring(3, arg3.length));\r\n            }\r\n            else { \r\n                arg3 = parseInt(arg3.substring(1, arg3.length));\r\n            }\r\n        }\r\n\r\n        let addData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: false};\r\n\r\n        if(arg1 === \"sp\" || arg1 === \"SP\" || arg1 === \"Sp\") {\r\n            addData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: true};\r\n        }\r\n        //console.log(\"ADD: \" + \"arg1: \" + arg1 + \" arg2 : \" + arg2 + \" arg3: \" + arg3);\r\n        this.props.add(addData);\r\n    }\r\n\r\n    sub = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        console.log(\"sub\");\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                arg3 = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg3.substring(0, 1) === \"#\") {\r\n            if (arg3.substring(1, 3) === \"0x\") {\r\n                arg3 = this.hexToInt(arg3.substring(3, arg3.length));\r\n            }\r\n            else { \r\n                arg3 = parseInt(arg3.substring(1, arg3.length));\r\n            }\r\n        }\r\n        console.log(arg3);\r\n\r\n        let subData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: false};\r\n\r\n        if(arg1 === \"sp\" || arg1 === \"SP\" || arg1 === \"Sp\") {\r\n            subData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: true};\r\n        }        \r\n        console.log(subData);\r\n        this.props.sub(subData);\r\n\r\n    }\r\n\r\n    mul = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        console.log(\"mul\");\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                arg3 = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg3.substring(0, 1) === \"#\") {\r\n            if (arg3.substring(1, 3) === \"0x\") {\r\n                arg3 = this.hexToInt(arg3.substring(3, arg3.length));\r\n            }\r\n            else { \r\n                arg3 = parseInt(arg3.substring(1, arg3.length));\r\n            }\r\n        }\r\n        let multData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: false};\r\n\r\n        if(arg1 === \"sp\" || arg1 === \"SP\" || arg1 === \"Sp\") {\r\n            multData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: true};\r\n        }     \r\n        this.props.mult(multData);\r\n    }\r\n\r\n    cmp = (data) => {\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n        }    \r\n        if(arg2.substring(0, 1) === \"#\") {\r\n            if (arg2.substring(1, 3) === \"0x\") {\r\n                arg2 = this.hexToInt(arg2.substring(3, arg2.length));\r\n            }\r\n            else { \r\n                arg2 = parseInt(arg2.substring(1, arg2.length));\r\n            }\r\n        }\r\n        else {\r\n            arg2 = this.getRegister(arg2);\r\n        }\r\n\r\n        arg1 = this.getRegister(arg1);\r\n\r\n        console.log(\"CMP: arg1: \" + arg1 + \" arg2: \" + arg2);\r\n        \r\n        let newStatus = 0;\r\n        if(arg1 > arg2) {\r\n            newStatus = 1;\r\n        }\r\n        else if(arg1 === arg2) {\r\n            newStatus = 0;\r\n        }\r\n        else {\r\n            newStatus = -1;\r\n        }\r\n        \r\n        return(newStatus);\r\n    }\r\n\r\n    branch = (data, labels) => {\r\n        let name;\r\n        let line;\r\n\r\n        for(let j = 0; j < data.length; j++) {\r\n            let instruction = data[j];\r\n            if(instruction.arg1 !== null) {\r\n                name = data[j].arg1;\r\n            }\r\n        }\r\n        console.log(name);\r\n        console.log(labels);\r\n\r\n        if(isNaN(name)) {\r\n            for(const label of labels) {\r\n                if(name === label.label) {\r\n                    line = label.line;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // if there is a label that is this number, use the label instead of the line number\r\n            let existsLabel = false;\r\n            for(const label of labels) {\r\n                if(name === label.label) {\r\n                    line = label.line;\r\n                    existsLabel = true;\r\n                }\r\n            }\r\n            if(!existsLabel) {\r\n                line = (parseInt(name)) - 1;\r\n            }\r\n        }\r\n        return(line);\r\n    }\r\n\r\n    bl = (line) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        this.props.bl(line);\r\n    }\r\n    \r\n    bx = (reg) => {\r\n        return(this.getRegister(reg));\r\n    }\r\n\r\n    push = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        let arg4 = \"\";\r\n        let arg5 = \"\";\r\n        let arg6 = \"\";\r\n        console.log(data);\r\n\r\n        for(const elem of data) {\r\n            if(typeof elem.arg1 === 'string' || data.arg1 instanceof String) {\r\n                arg1 = elem.arg1;\r\n                arg1 = arg1.replace(\"{\", \"\");\r\n                arg1 = arg1.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg2 === 'string' || data.arg1 instanceof String) {\r\n                arg2 = elem.arg2;\r\n                arg2 = arg2.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg3 === 'string' || data.arg1 instanceof String) {\r\n                arg3 = elem.arg3;\r\n                arg3 = arg3.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg4 === 'string' || data.arg1 instanceof String) {\r\n                arg4 = elem.arg4;\r\n                arg4 = arg4.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg5 === 'string' || data.arg1 instanceof String) {\r\n                arg5 = elem.arg5;\r\n                arg5 = arg5.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg6 === 'string' || data.arg1 instanceof String) {\r\n                arg6 = elem.arg6;\r\n                arg6 = arg6.replace(\"}\", \"\");\r\n            }\r\n        }\r\n        let pushData = {arg1: arg1, arg2: arg2, arg3: arg3, arg4: arg4, arg5: arg5, arg6: arg6};\r\n\r\n        this.props.push(pushData);\r\n    }\r\n\r\n    pop = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        let arg4 = \"\";\r\n        let arg5 = \"\";\r\n        let arg6 = \"\";\r\n        console.log(data);\r\n\r\n        for(const elem of data) {\r\n            if(typeof elem.arg1 === 'string' || data.arg1 instanceof String) {\r\n                arg1 = elem.arg1;\r\n                arg1 = arg1.replace(\"{\", \"\");\r\n                arg1 = arg1.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg2 === 'string' || data.arg1 instanceof String) {\r\n                arg2 = elem.arg2;\r\n                arg2 = arg2.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg3 === 'string' || data.arg1 instanceof String) {\r\n                arg3 = elem.arg3;\r\n                arg3 = arg3.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg4 === 'string' || data.arg1 instanceof String) {\r\n                arg4 = elem.arg4;\r\n                arg4 = arg4.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg5 === 'string' || data.arg1 instanceof String) {\r\n                arg5 = elem.arg5;\r\n                arg5 = arg5.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg6 === 'string' || data.arg1 instanceof String) {\r\n                arg6 = elem.arg6;\r\n                arg6 = arg6.replace(\"}\", \"\");\r\n            }\r\n        }\r\n        let popData = {arg1: arg1, arg2: arg2, arg3: arg3, arg4: arg4, arg5: arg5, arg6: arg6};\r\n        \r\n        this.props.pop(popData);\r\n    }\r\n\r\n    ldr = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        console.log(\"load\");\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let offset = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                offset = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg2.substring(0, 1) === \"[\") {\r\n            arg2 = arg2.substring(1, arg2.length);\r\n        }\r\n        if(arg2.substring(arg2.length - 1, arg2.length) === \"]\") {\r\n            arg2 = arg2.substring(0, arg2.length - 1);\r\n        }\r\n        if(offset.substring(offset.length - 1, offset.length) === \"]\") {\r\n            offset = offset.substring(0, offset.length - 1);\r\n        }\r\n        if(offset.substring(0, 1) === \"#\") {\r\n            if (offset.substring(1, 3) === \"0x\") {\r\n                offset = this.hexToInt(offset.substring(3, offset.length));\r\n            }\r\n            else { \r\n                offset = parseInt(offset.substring(1, offset.length));\r\n            }\r\n        }\r\n        if(arg2.substring(0, 1) === \"#\") {\r\n            if (arg2.substring(1, 3) === \"0x\") {\r\n                arg2 = this.hexToInt(arg2.substring(3, arg2.length));\r\n            }\r\n            else { \r\n                arg2 = parseInt(arg2.substring(1, arg2.length));\r\n            }\r\n        }\r\n        if(offset === \"\") {\r\n            offset = null;\r\n        }\r\n        let ldrData = {arg1: arg1, arg2: arg2, arg3: offset};\r\n        this.props.ldr(ldrData);    \r\n    }\r\n\r\n    str = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let offset = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                offset = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg2.substring(0, 1) === \"[\") {\r\n            arg2 = arg2.substring(1, arg2.length);\r\n        }\r\n        if(arg2.substring(arg2.length - 1, arg2.length) === \"]\") {\r\n            arg2 = arg2.substring(0, arg2.length - 1);\r\n        }\r\n        if(offset.substring(offset.length - 1, offset.length) === \"]\") {\r\n            offset = offset.substring(0, offset.length - 1);\r\n        }\r\n        if(offset.substring(0, 1) === \"#\") {\r\n            if (offset.substring(1, 3) === \"0x\") {\r\n                offset = this.hexToInt(offset.substring(3, offset.length));\r\n            }\r\n            else { \r\n                offset = parseInt(offset.substring(1, offset.length));\r\n            }\r\n        }\r\n        if(arg2.substring(0, 1) === \"#\") {\r\n            if (arg2.substring(1, 3) === \"0x\") {\r\n                arg2 = this.hexToInt(arg2.substring(3, arg2.length));\r\n            }\r\n            else { \r\n                arg2 = parseInt(arg2.substring(1, arg2.length));\r\n            }\r\n        }\r\n        if(offset === \"\") {\r\n            offset = null;\r\n        }\r\n        let strData = {arg1: arg1, arg2: arg2, arg3: offset};\r\n        this.props.str(strData);        \r\n    }\r\n\r\n    bitwise = (data, func) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                arg3 = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg3.substring(0, 1) === \"#\") {\r\n            if (arg3.substring(1, 3) === \"0x\") {\r\n                arg3 = this.hexToInt(arg3.substring(3, arg3.length));\r\n            }\r\n            else { \r\n                arg3 = parseInt(arg3.substring(1, arg3.length));\r\n            }\r\n        }\r\n\r\n        let bitData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: false};\r\n        this.props.bitwise(bitData, func);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={2} className=\"Debug\">\r\n\r\n                <Grid item>\r\n                    {this.state.step || this.state.visualize ? null: <ArmInfo/>}\r\n                </Grid>\r\n\r\n                <Grid item>\r\n\r\n                    <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                        <div className=\"ArmText\">\r\n                            {this.state.visualize || this.state.step ? \r\n                            <h3>\r\n                            <pre style={{fontSize: \"2vh\"}}>\r\n                                <Highlight search={this.state.nextInstruction}>{this.state.debugCode}</Highlight>\r\n                            </pre></h3>\r\n                            :\r\n                            <TextField InputProps={{\r\n                                // startAdornment: <InputAdornment position=\"start\"><pre>1     <br></br>2<br></br>3<br></br>4<br></br>5<br></br>6<br></br>7<br></br>8<br></br>9<br></br>10<br></br>11<br></br>12<br></br>13<br></br>14<br></br>15<br></br>16<br></br>17<br></br>18<br></br>19<br></br>20<br></br>21<br></br>22<br></br>23<br></br>24<br></br>25<br></br>26<br></br>27<br></br>28<br></br>29<br></br>30<br></br>31<br></br>32<br></br>33<br></br>34<br></br>35<br></br>36<br></br>37<br></br>38<br></br>39<br></br>40<br></br>41<br></br>42<br></br>43<br></br>44<br></br>45<br></br>46<br></br>47<br></br>48<br></br>49<br></br>50</pre></InputAdornment>,  \r\n                                style: {fontSize: \"2vh\"}\r\n                            }} defaultValue={this.state.code} fullWidth=\"true\" id=\"code\" label=\"Insert ARM Assembly Code\" variant=\"outlined\" multiline rows={10} rowsMax={70}></TextField>}\r\n                        </div>\r\n\r\n                        {/* {this.state.error ? <h3>Compile Error: Instruction: {this.state.errorInfo.instruction}, line: {this.state.errorInfo.line}</h3> : null} */}\r\n                    </form>\r\n\r\n                </Grid>\r\n                {/* <Button onClick={this.handleCompile}>Check for Errors</Button>\r\n                {this.state.compile ? this.state.errorInfo.map(error =>\r\n                    <h4>Do not recognize: '{error.instruction}' on line: {error.line}</h4>): null}\r\n                {this.state.compile ? this.state.errorInfo.length === 0 ? <h4>No errors</h4>: null: null} */}\r\n\r\n                <RunOptions handleRun={this.handleRun} visualize={this.state.visualize} startVisualize={this.startVisualize} handleReset={this.handleReset} handleVisualize={this.handleVisualize} speed={this.state.speed} changeSpeed={this.changeSpeed} handleStep={this.handleStep} startStep={this.startStep} step={this.state.step}/>\r\n\r\n            </Grid>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default Parser;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './../../App.css';\r\n\r\nclass PushReg extends Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  pushR0 = () => {\r\n    this.props.pushReg(\"R0\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR1 = () => {\r\n    this.props.pushReg(\"R1\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR2 = () => {\r\n    this.props.pushReg(\"R2\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR3 = () => {\r\n    this.props.pushReg(\"R3\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR4 = () => {\r\n    this.props.pushReg(\"R4\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR5 = () => {\r\n    this.props.pushReg(\"R5\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR6 = () => {\r\n    this.props.pushReg(\"R6\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR7 = () => {\r\n    this.props.pushReg(\"R7\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR8 = () => {\r\n    this.props.pushReg(\"R8\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR9 = () => {\r\n    this.props.pushReg(\"R9\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR10 = () => {\r\n    this.props.pushReg(\"R10\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushFp = () => {\r\n    this.props.pushReg(\"fp\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR12 = () => {\r\n    this.props.pushReg(\"R12\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushSp = () => {\r\n    this.props.pushReg(\"sp\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushLr = () => {\r\n    this.props.pushReg(\"lr\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushPc = () => {\r\n    this.props.pushReg(\"pc\");\r\n    this.props.close()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <Grid container className=\"Column\">\r\n\r\n                <Grid item>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                        <Button onClick={this.pushR0} size=\"large\">R0</Button>\r\n                        <Button onClick={this.pushR1} size=\"large\">R1</Button>\r\n                        <Button onClick={this.pushR2} size=\"large\">R2</Button>\r\n                        <Button onClick={this.pushR3} size=\"large\">R3</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                        <Button onClick={this.pushR4} size=\"large\">R4</Button>\r\n                        <Button onClick={this.pushR5} size=\"large\">R5</Button>\r\n                        <Button onClick={this.pushR6} size=\"large\">R6</Button>\r\n                        <Button onClick={this.pushR7} size=\"large\">R7</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">                        \r\n                        <Button onClick={this.pushR8} size=\"large\">R8</Button>\r\n                        <Button onClick={this.pushR9} size=\"large\">R9</Button>\r\n                        <Button onClick={this.pushR10} size=\"large\">R10</Button>\r\n                        <Button onClick={this.pushFp} size=\"large\">fp</Button>\r\n                    </ButtonGroup>\r\n                </Grid> \r\n\r\n                <Grid item>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">                        \r\n                        <Button onClick={this.pushR12} size=\"large\">R12</Button>\r\n                        <Button onClick={this.pushSp} size=\"large\">sp</Button>\r\n                        <Button onClick={this.pushLr} size=\"large\">lr</Button>\r\n                        <Button onClick={this.pushPc} size=\"large\">pc</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default PushReg;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './../../App.css';\r\n\r\nclass PushVar extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            variable: 0\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    pushVar = () => {\r\n        this.props.pushVar({value: this.state.variable, type: \"variable\"});\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                    <TextField id = \"variable\" label = \"Enter Variable\" variant = \"outlined\" />\r\n                    <Button onClick={this.pushVar}>Push</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PushVar;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './../../App.css';\r\n\r\nclass PushOutParam extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            parameter: 0,\r\n            arg: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    pushOutParam = () => {\r\n        this.props.pushOutParam({value: this.state.parameter, arg: this.state.arg, type: \"outParam\"});\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                    <div className=\"Column\">\r\n                        <div>\r\n                            <TextField id = \"parameter\" label = \"Enter Parameter\" variant = \"outlined\" />\r\n                        </div>                        \r\n                        <div>\r\n                            <TextField id = \"arg\" label = \"Enter Argument Number\" variant = \"outlined\" />\r\n                        </div>                        \r\n                    </div>\r\n                    <Button onClick={this.pushOutParam}>Push</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PushOutParam;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './../../App.css';\r\n\r\nclass PushInParam extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            parameter: 0,\r\n            arg: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    pushInParam = () => {\r\n        this.props.pushInParam({value: this.state.parameter, arg: this.state.arg, type: \"inParam\"});\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                    <div className=\"Column\">\r\n                        <div>\r\n                            <TextField id = \"parameter\" label = \"Enter Parameter\" variant = \"outlined\" />\r\n                        </div>                        \r\n                        <div>\r\n                            <TextField id = \"arg\" label = \"Enter Argument Number\" variant = \"outlined\" />\r\n                        </div>                        \r\n                    </div>\r\n                    <Button onClick={this.pushInParam}>Push</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PushInParam;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './../../App.css';\r\n\r\nclass PushFunc extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            registers: [\"fp\"],\r\n            variable1: \"\",\r\n            variable2: \"\",\r\n            variable3: \"\",\r\n            variable4: \"\",\r\n            variable5: \"\",\r\n            variable6: \"\",\r\n\r\n            parIn1: \"\",\r\n            parIn2: \"\",\r\n            parIn3: \"\",\r\n            parIn4: \"\",\r\n            parIn5: \"\",\r\n            parIn6: \"\",\r\n\r\n            parOut1: \"\",\r\n            parOut2: \"\",\r\n            parOut3: \"\",\r\n            parOut4: \"\",\r\n            parOut5: \"\",\r\n            parOut6: \"\",\r\n\r\n            numVar: 1,\r\n            numParIn: 1,\r\n            numParOut: 1,\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    incVar = () => {\r\n        let newNum = this.state.numVar;\r\n        newNum++;\r\n        this.setState({\r\n            numVar: newNum\r\n        })\r\n    }\r\n\r\n    incParIn = () => {\r\n        let newNum = this.state.numParIn;\r\n        newNum++;\r\n        this.setState({\r\n            numParIn: newNum\r\n        })\r\n    }\r\n\r\n    incParOut = () => {\r\n        let newNum = this.state.numParOut;\r\n        newNum++;\r\n        this.setState({\r\n            numParOut: newNum\r\n        })\r\n    }\r\n\r\n    pushFunc = () => {\r\n        let variables = [];\r\n        let inParams = [];\r\n        let outParams = [];\r\n\r\n        if(!(this.state.variable1 === \"\")) {\r\n            variables.push(this.state.variable1);\r\n        }\r\n        if(!(this.state.variable2 === \"\")) {\r\n            variables.push(this.state.variable2);\r\n        }\r\n        if(!(this.state.variable3 === \"\")) {\r\n            variables.push(this.state.variable3);\r\n        }\r\n        if(!(this.state.variable4 === \"\")) {\r\n            variables.push(this.state.variable4);\r\n        }\r\n        if(!(this.state.variable5 === \"\")) {\r\n            variables.push(this.state.variable5);\r\n        }\r\n        if(!(this.state.variable6 === \"\")) {\r\n            variables.push(this.state.variable6);\r\n        }\r\n\r\n        if(!(this.state.parIn1 === \"\")) {\r\n            inParams.push({arg: 4, value: this.state.parIn1});\r\n        }\r\n        if(!(this.state.parIn2 === \"\")) {\r\n            inParams.push({arg: 5, value: this.state.parIn2});\r\n        }\r\n        if(!(this.state.parIn3 === \"\")) {\r\n            inParams.push({arg: 6, value: this.state.parIn3});\r\n        }\r\n        if(!(this.state.parIn4 === \"\")) {\r\n            inParams.push({arg: 7, value: this.state.parIn4});\r\n        }\r\n        if(!(this.state.parIn5 === \"\")) {\r\n            inParams.push({arg: 8, value: this.state.parIn5});\r\n        }\r\n        if(!(this.state.parIn6 === \"\")) {\r\n            inParams.push({arg: 9, value: this.state.parIn6});\r\n        }\r\n\r\n        if(!(this.state.parOut1 === \"\")) {\r\n            outParams.push({arg: 4, value: this.state.parOut1});\r\n        }\r\n        if(!(this.state.parOut2 === \"\")) {\r\n            outParams.push({arg: 5, value: this.state.parOut2});\r\n        }\r\n        if(!(this.state.parOut3 === \"\")) {\r\n            outParams.push({arg: 6, value: this.state.parOut3});\r\n        }\r\n        if(!(this.state.parOut4 === \"\")) {\r\n            outParams.push({arg: 7, value: this.state.parOut4});\r\n        }\r\n        if(!(this.state.parOut5 === \"\")) {\r\n            outParams.push({arg: 8, value: this.state.parOut5});\r\n        }\r\n        if(!(this.state.parOut6 === \"\")) {\r\n            outParams.push({arg: 9, value: this.state.parOut6});\r\n        }\r\n        let reverseInParams = [];\r\n        let index = inParams.length - 1;\r\n        for(let i = 0; i < inParams.length; i++) {\r\n            reverseInParams[i] = inParams[index];\r\n            index--;\r\n        }\r\n        let registers = this.sortRegisters(this.state.registers);\r\n        let funcData = {registers: registers, vars: variables, inParams: reverseInParams, outParams: outParams, type: \"function\"}\r\n        this.props.pushFunc(funcData);\r\n        this.props.close();\r\n    }\r\n\r\n    sortRegisters = (registers) => {\r\n        let numReg = [];\r\n        let newReg = [];\r\n        console.log(registers);\r\n        for(const register of registers) {\r\n            switch(register) {\r\n                case \"R0\": {numReg.push(0); break;}\r\n                case \"R1\": {numReg.push(1); break;}\r\n                case \"R2\": {numReg.push(2); break;}\r\n                case \"R3\": {numReg.push(3); break;}\r\n                case \"R4\": {numReg.push(4); break;}\r\n                case \"R5\": {numReg.push(5); break;}\r\n                case \"R6\": {numReg.push(6); break;}\r\n                case \"R7\": {numReg.push(7); break;}\r\n                case \"R8\": {numReg.push(8); break;}\r\n                case \"R9\": {numReg.push(9); break;}\r\n                case \"R10\": {numReg.push(10); break;}\r\n                case \"fp\": {numReg.push(11); break;}\r\n                case \"R12\": {numReg.push(12); break;}\r\n                case \"sp\": {numReg.push(13); break;}\r\n                case \"lr\": {numReg.push(14); break;}\r\n                case \"pc\": {numReg.push(15); break;}\r\n                default: {}\r\n            }\r\n        }\r\n        console.log(numReg);\r\n        numReg.sort((a,b)=>b-a)\r\n        console.log(numReg);\r\n        for(const num of numReg) {\r\n            switch(num) {\r\n                case 0: {newReg.push(\"R0\"); break;}\r\n                case 1: {newReg.push(\"R1\"); break;}\r\n                case 2: {newReg.push(\"R2\"); break;}\r\n                case 3: {newReg.push(\"R3\"); break;}\r\n                case 4: {newReg.push(\"R4\"); break;}\r\n                case 5: {newReg.push(\"R5\"); break;}\r\n                case 6: {newReg.push(\"R6\"); break;}\r\n                case 7: {newReg.push(\"R7\"); break;}\r\n                case 8: {newReg.push(\"R8\"); break;}\r\n                case 9: {newReg.push(\"R9\"); break;}\r\n                case 10: {newReg.push(\"R10\"); break;}\r\n                case 11: {newReg.push(\"fp\"); break;}\r\n                case 12: {newReg.push(\"R12\"); break;}\r\n                case 13: {newReg.push(\"sp\"); break;}\r\n                case 14: {newReg.push(\"lr\"); break;}\r\n                case 15: {newReg.push(\"pc\"); break;}\r\n                default: {}\r\n            }\r\n        }\r\n        console.log(newReg);\r\n        return(newReg);\r\n    }\r\n\r\n    addRegister = (e) => {\r\n        let removed = false;\r\n        let newArr = this.state.registers;\r\n\r\n        if(this.state.registers.length === 0) {\r\n            let newReg = this.state.registers;\r\n            newReg.push(e.target.id);\r\n            this.setState({\r\n                registers: newReg\r\n            })\r\n        }\r\n\r\n        else {\r\n            for(const register of this.state.registers) {\r\n                if(e.target.id === register) {\r\n                    removed = true;\r\n                    let i = 0;\r\n                    while (i < newArr.length) {\r\n                        if(newArr[i] === e.target.id) {\r\n                            newArr.splice(i, 1);\r\n                        } else {\r\n                            ++i;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(!removed) {\r\n                newArr.push(e.target.id);\r\n                this.setState({\r\n                    registers: newArr,\r\n                })\r\n            }\r\n        }\r\n        console.log(this.state.registers);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                    <h3>\r\n                        Select Saved Registers\r\n                    </h3>\r\n\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R0\" />} label=\"R0\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R1\" />} label=\"R1\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R2\" />} label=\"R2\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R3\" />} label=\"R3\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R4\" />} label=\"R4\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R5\" />} label=\"R5\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R6\" />} label=\"R6\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R7\" />} label=\"R7\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R8\" />} label=\"R8\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R9\" />} label=\"R9\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R10\" />} label=\"R10\" />\r\n                    <FormControlLabel control={<Checkbox checked={true} id=\"fp\" />} label=\"fp\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R12\" />} label=\"R12\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"sp\" />} label=\"sp\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"lr\" />} label=\"lr\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"pc\" />} label=\"pc\" />\r\n\r\n                    <h3>Add Local Variables {this.state.numVar > 5 ? <Button disabled>Add<AddIcon></AddIcon></Button> : <Button onClick={this.incVar}>Add<AddIcon></AddIcon></Button>}</h3>\r\n                   \r\n                    {this.state.numVar === 1 ?\r\n                    <Grid item>\r\n                        <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" /></Grid>\r\n                    :\r\n                    this.state.numVar === 2 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField defaultValue={this.state.variable1} id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" />  \r\n                            </Grid>\r\n                        </Grid>        \r\n                    : this.state.numVar === 3 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" />  \r\n                            </Grid>       \r\n                            <Grid item>            \r\n                                <TextField id = \"variable3\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>      \r\n                        </Grid>\r\n                    : this.state.numVar === 4 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" /> \r\n                            </Grid>                    \r\n                            <Grid item>\r\n                                <TextField id = \"variable3\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable4\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    : this.state.numVar === 5 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"variable3\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable4\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable5\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>\r\n                    : \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"variable3\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable4\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable5\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable6\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>}\r\n\r\n                    <h3>Add Incoming Parameters {this.state.numParIn > 5 ? <Button disabled>Add<AddIcon></AddIcon></Button> : <Button onClick={this.incParIn}>Add<AddIcon></AddIcon></Button>}</h3>\r\n                   \r\n                    {this.state.numParIn === 1 ?\r\n                        <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                    :\r\n                    this.state.numParIn === 2 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField defaultValue={this.state.parIn1} id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />  \r\n                            </Grid>\r\n                        </Grid>                   \r\n                    : this.state.numParIn === 3 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />  \r\n                            </Grid>       \r\n                            <Grid item>            \r\n                                <TextField id = \"parIn3\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>      \r\n                        </Grid>\r\n                    : this.state.numParIn === 4 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" /> \r\n                            </Grid>                    \r\n                            <Grid item>\r\n                                <TextField id = \"parIn3\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn4\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    : this.state.numParIn === 5 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"parIn3\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn4\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn5\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>\r\n                    : \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"parIn3\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn4\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn5\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn6\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>}\r\n\r\n\r\n                    <h3>Add Outgoing Parameters {this.state.numParOut > 5 ? <Button disabled>Add<AddIcon></AddIcon></Button> : <Button onClick={this.incParOut}>Add<AddIcon></AddIcon></Button>}</h3>\r\n\r\n                    {this.state.numParOut === 1 ?\r\n                    <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                    :\r\n                    this.state.numParOut === 2 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField defaultValue={this.state.parOut1} id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />  \r\n                            </Grid>\r\n                        </Grid>                   \r\n                    : this.state.numParOut === 3 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />  \r\n                            </Grid>       \r\n                            <Grid item>            \r\n                                <TextField id = \"parOut3\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>      \r\n                        </Grid>\r\n                    : this.state.numParOut === 4 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" /> \r\n                            </Grid>                    \r\n                            <Grid item>\r\n                                <TextField id = \"parOut3\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut4\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    : this.state.numParOut === 5 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"parOut3\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut4\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut5\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>\r\n                    : \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"parOut3\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut4\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut5\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut6\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>}\r\n\r\n                    <br></br>\r\n                    <Button onClick={this.pushFunc}>Push</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PushFunc;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PushReg from './PushReg';\r\nimport PushVar from './PushVar';\r\nimport PushOutParam from './PushOutParam';\r\nimport PushInParam from './PushInParam';\r\nimport PushFunc from './PushFunc';\r\nimport './../../App.css';\r\n\r\nexport default function Push(props) {\r\n  const [openRegister, setRegister] = React.useState(false);\r\n  const [openVariable, setVariable] = React.useState(false);\r\n  const [openOutParameter, setOutParameter] = React.useState(false);\r\n  const [openInParameter, setInParameter] = React.useState(false);\r\n  const [openFunction, setFunction] = React.useState(false);\r\n  //const [anchorEl, setAnchorEl] = React.useState(null);\r\n\r\n  // const handleClick = (event) => {\r\n  //   setAnchorEl(event.currentTarget);\r\n  // }\r\n\r\n  const handleClose = () => {\r\n    setRegister(false);\r\n    setVariable(false);\r\n    setOutParameter(false);\r\n    setInParameter(false);\r\n    setFunction(false);\r\n    //setAnchorEl(null);\r\n  }\r\n\r\n  const handleRegister = () => {\r\n    setRegister(true);\r\n  }\r\n\r\n  // const handleVariable = () => {\r\n  //   setVariable(true);\r\n  // }\r\n\r\n  // const handleOutParameter = () => {\r\n  //   setOutParameter(true);\r\n  // }\r\n\r\n  // const handleInParameter = () => {\r\n  //   setInParameter(true);\r\n  // }\r\n\r\n  const handleFunction = () => {\r\n    setFunction(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {/* <Button aria-controls=\"push-menu\" aria-haspopup=\"true\" size=\"large\" variant=\"outlined\" color=\"primary\" onClick={handleClick}>\r\n        Push\r\n      </Button> */}\r\n      {/* <Menu\r\n        id=\"push-menu\"\r\n        anchorEl={anchorEl}\r\n        keepMounted\r\n        open={Boolean(anchorEl)}\r\n        onClose={handleClose}\r\n      >\r\n        <MenuItem onClick={handleRegister}>Register</MenuItem>\r\n        <MenuItem onClick={handleVariable}>Local Variable</MenuItem>\r\n        <MenuItem onClick={handleOutParameter}>Outgoing Parameter</MenuItem>\r\n        <MenuItem onClick={handleInParameter}>Incoming Parameter</MenuItem>\r\n        <MenuItem onClick={handleFunction}>Function</MenuItem>\r\n      </Menu> */}\r\n\r\n\r\n      <Grid item>\r\n        <Grid container className=\"Row\" spacing={3}>\r\n          \r\n          <Grid item>\r\n            <Button style = {{fontSize: \"1.3vh\"}} onClick={handleRegister} size=\"large\" variant=\"outlined\" color=\"primary\" >Push Register</Button>\r\n          </Grid>\r\n              \r\n          <Grid item>\r\n            <Button style = {{fontSize: \"1.3vh\"}} onClick={handleFunction} size=\"large\" variant=\"outlined\" color=\"primary\" >Push Function</Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n      <Dialog\r\n        fullWidth={true}\r\n        open={openRegister}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"upload-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"upload-dialog-title\">Push Register</DialogTitle>\r\n        <DialogContent className=\"Center\">\r\n          <PushReg close={handleClose} pushReg={props.pushReg}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={openVariable}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"upload-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"upload-dialog-title\">Push Variable</DialogTitle>\r\n            <DialogContent>\r\n              <PushVar close={handleClose} pushVar={props.pushFunc}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={openOutParameter}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"upload-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"upload-dialog-title\">Push Parameter</DialogTitle>\r\n            <DialogContent>\r\n              <PushOutParam close={handleClose} pushOutParam={props.pushFunc}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={openInParameter}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"upload-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"upload-dialog-title\">Push Parameter</DialogTitle>\r\n            <DialogContent>\r\n              <PushInParam close={handleClose} pushInParam={props.pushFunc}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={openFunction}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"upload-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"upload-dialog-title\">Push Function</DialogTitle>\r\n            <DialogContent>\r\n              <PushFunc close={handleClose} pushFunc={props.pushFunc}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Push from './Push Components/Push.js';\r\nimport './../App.css';\r\n\r\nclass StackOperations extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <br></br>\r\n\r\n                <Grid container className=\"ColumnCenter\" spacing={6}>\r\n                    <Grid item>\r\n                        <Push pushReg={this.props.pushReg} pushFunc = {this.props.pushFunc}/>\r\n                    </Grid>\r\n                    <Grid item>\r\n                    <Grid container spacing={6} className=\"Row\">\r\n                    <Grid item>\r\n                        <Button style = {{fontSize: \"1.3vh\"}} size=\"large\" variant=\"outlined\" color=\"secondary\" onClick={this.props.pop}>Pop</Button>\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Button style = {{fontSize: \"1.3vh\"}} size=\"large\" variant=\"outlined\" color=\"secondary\" onClick={this.props.clear}>Clear</Button>\r\n                    </Grid>\r\n                    </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StackOperations;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Parser from './Compile Components/Parser.js'\r\nimport StackOperations from './StackOperations.js';\r\nimport './../App.css';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"25vw\",\r\n  },\r\n}));\r\n\r\nexport default function SelectTab(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar position=\"static\">\r\n        <Tabs style={{minHeight: \"0vh\"}} centered value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab style = {{fontSize: \"1.4vh\", minHeight: \"0vh\"}} label=\"ARM Text Editor\" {...a11yProps(0)} />\r\n          <Tab style = {{fontSize: \"1.4vh\", minHeight: \"0vh\"}} label=\"Stack Visualizer\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Grid container className=\"Row\">\r\n\r\n            {/* <Grid item>\r\n              <ArmInfo/>\r\n            </Grid> */}\r\n          \r\n            <Grid item>\r\n              <Parser register={props.register} mov={props.mov} add={props.add} sub={props.sub} mult={props.mult} push={props.push} pop={props.pop} bitwise={props.bitwise} ldr={props.ldr} str={props.str} bl={props.bl} setPc={props.setPc} clear={props.clear}/>\r\n            </Grid>\r\n            \r\n            {/* <Grid item>\r\n                <Commands/>\r\n            </Grid> */}\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <StackOperations pushReg={props.push} pushVar={props.pushFunction} pushOutParam={props.pushFunction} pushFunc={props.pushFunction} pushInParam={props.pushFunction} pop={props.pop} clear={props.clear}/>\r\n      </TabPanel>\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './../App.css';\r\nimport './../styles/Frames.css';\r\n\r\nclass Frame extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            address: props.params.address,\r\n            data: {\r\n                type: props.params.data.type,\r\n                reg: props.params.data.reg,\r\n                value: props.params.data.value,\r\n                arg: props.params.data.arg,\r\n                pos: props.params.data.pos,\r\n            },\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {(this.props.params.data.type === \"reg\") ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container className=\"Text\">\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"RegisterOutline\" : \"Register\"}>\r\n                                <h2 className=\"Text\">Register: {this.props.params.data.reg} = {this.props.params.data.value} </h2>\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                :\r\n                this.props.params.data.type === \"var\" ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"VariableOutline\" : \"Variable\"}>\r\n                                {this.props.params.address - this.props.register.fp > 0 ? \r\n                                <h2 className=\"Text\"> Local Variable: (fp + {this.props.params.address - this.props.register.fp}) &nbsp; value: {this.props.params.data.value} </h2> \r\n                                : \r\n                                <h2 className=\"Text\"> Local Variable: (fp - {Math.abs(this.props.params.address - this.props.register.fp)}) &nbsp; value: {this.props.params.data.value} </h2>}\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                :\r\n                this.props.params.data.type === \"outParam\" ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"OutParameterOutline\" : \"OutParameter\"}>\r\n                                {this.props.params.address - this.props.register.fp > 0 ? \r\n                                    <h2 className=\"Text\"> Outgoing Parameter: (arg {this.props.params.data.arg}) &nbsp; (fp + {this.props.params.address - this.props.register.fp}) &nbsp; value: {this.props.params.data.value} </h2> \r\n                                    : \r\n                                    <h2 className=\"Text\"> Outgoing Parameter: (arg {this.props.params.data.arg}) &nbsp; (fp - {Math.abs(this.props.params.address - this.props.register.fp)}) &nbsp; value: {this.props.params.data.value} </h2>}\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                : \r\n                this.props.params.data.type === \"empty\" ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"EmptyOutline\" : \"Empty\"}>\r\n                                {this.props.params.address - this.props.register.fp > 0 ? \r\n                                    <h2 className=\"Text\"> (fp + {this.props.params.address - this.props.register.fp}) &nbsp; value: {this.props.params.data.value} </h2> \r\n                                    : \r\n                                    <h2 className=\"Text\"> (fp - {Math.abs(this.props.params.address - this.props.register.fp)}) &nbsp; value: {this.props.params.data.value} </h2>}\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                :\r\n                this.props.params.data.type === \"inParam\" ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"InParameterOutline\" : \"InParameter\"}>\r\n                                {this.props.params.address - this.props.register.fp > 0 ? \r\n                                    <h2 className=\"Text\"> Incoming Parameter: (arg {this.props.params.data.arg}) &nbsp; (fp + {this.props.params.address - this.props.register.fp}) &nbsp; value: {this.props.params.data.value} </h2> \r\n                                    : \r\n                                    <h2 className=\"Text\"> Incoming Parameter: (arg {this.props.params.data.arg}) &nbsp; (fp - {Math.abs(this.props.params.address - this.props.register.fp)}) &nbsp; value: {this.props.params.data.value} </h2>}\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                :\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"TopOutline\" : \"Top\"}>\r\n                                    <h2 className=\"Text\">Bottom of Stack</h2> \r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Frame;","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport Frame from './Frame.js'\r\nimport './../App.css'\r\n\r\nclass Stack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.pushByReg = this.pushByReg.bind(this);\r\n        this.state = {\r\n            frames: [{\r\n                address: 4096, \r\n                data: {\r\n                    type: \"top\",\r\n                }\r\n            }],\r\n            register: {\r\n                R0: props.register.R0,\r\n                R1: props.register.R1,\r\n                R2: props.register.R2,\r\n                R3: props.register.R3,\r\n                R4: props.register.R4,\r\n                R5: props.register.R5,\r\n                R6: props.register.R6,\r\n                R7: props.register.R7,\r\n                R8: props.register.R8,\r\n                R9: props.register.R9,\r\n                R10: props.register.R10,\r\n                fp: props.register.fp,\r\n                R12: props.register.R12,\r\n                sp: props.register.sp,\r\n                lr: props.register.lr,\r\n                pc: props.register.pc\r\n            },\r\n        }\r\n        this.pushByReg = this.pushByReg.bind(this);\r\n        this.pushByVar = this.pushByVar.bind(this);\r\n        this.pushByOutParam = this.pushByOutParam.bind(this);\r\n        this.pushByInParam = this.pushByInParam.bind(this);\r\n        this.pushFunc = this.pushFunc.bind(this);\r\n        this.push = this.push.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setPush(this.pushByReg);\r\n        this.props.setPopReg(this.popRegister);\r\n        this.props.setPop(this.pop);\r\n        this.props.setLdr(this.loadByAddress);\r\n        this.props.setStr(this.storeByAddress);\r\n        this.props.setSp(this.setFrames);\r\n        this.props.setFunction(this.handleFuction);\r\n        this.props.setClear(this.clear);\r\n        this.props.setRemoveFrames(this.removeFrames);\r\n        this.scrollToBottom();\r\n     }\r\n\r\n     scrollToBottom = () => {\r\n        this.messagesEnd.scrollIntoView({ behavior: \"auto\" });\r\n      }\r\n      \r\n      componentDidUpdate() {\r\n        this.scrollToBottom();\r\n      }\r\n\r\n    decimalToHex = (decimalNumber) => {\r\n        let hexNum = [];\r\n    \r\n        while(decimalNumber!==0) {\r\n            let temp  = 0; \r\n            temp = decimalNumber % 16; \r\n           \r\n            if(temp < 10) {\r\n                hexNum.push(String.fromCharCode(temp + 48)); \r\n            } \r\n            else {\r\n                hexNum.push(String.fromCharCode(temp + 55)); \r\n            } \r\n            decimalNumber = decimalNumber/16; \r\n        } \r\n\r\n        let reverse = []\r\n        let j = 2;\r\n        for(let i = 3; i >= 0; i--) {\r\n            reverse[j] = hexNum[i];\r\n            j++;\r\n        }\r\n        reverse[0] = '0';\r\n        reverse[1] = 'x';\r\n        return(reverse);\r\n    }\r\n\r\n    setFrames = (sp) => {\r\n        let lowAddress = this.state.frames[this.state.frames.length - 1].address;\r\n        console.log(\"low address: \" + lowAddress);\r\n        while(sp < lowAddress) {\r\n            lowAddress -= 4;\r\n            this.pushEmpty(lowAddress);\r\n        }\r\n    }\r\n\r\n    loadByAddress = (data) => {\r\n        let newFrames = this.state.frames;\r\n        for(const frame of newFrames) {\r\n            if(frame.address === data.address) {\r\n                console.log(frame);\r\n                console.log(frame.data.value);\r\n                this.props.setReg({reg: data.reg, value: frame.data.value});\r\n            }\r\n        }\r\n    }\r\n\r\n    storeByAddress = (data) => {\r\n        let newFrames = this.state.frames;\r\n        for(const frame of newFrames) {\r\n            if(frame.address === data.address) {\r\n                frame.data.value = data.value;\r\n            }\r\n        }\r\n        this.setState({\r\n            frames: newFrames\r\n        })\r\n    }\r\n\r\n    handleFuction = (data) => {\r\n        if(data.type === \"function\") {\r\n            this.pushFunc(data);\r\n        }\r\n        if(data.type === \"inParam\") {\r\n            this.pushByInParam(data);\r\n        }\r\n        if(data.type === \"outParam\") {\r\n            this.pushByOutParam(data);\r\n        }\r\n        if(data.type === \"variable\") {\r\n            this.pushByVar(data);\r\n        }\r\n        \r\n    }\r\n\r\n    pushFunc = (data) => {\r\n        for(const inParam of data.inParams) {\r\n            this.pushByInParam(inParam);\r\n        }\r\n        for(const reg of data.registers) {\r\n            this.pushByReg(reg);\r\n        }\r\n        for(const variable of data.vars) {\r\n            this.pushByVar(variable);\r\n        }\r\n        for(const outParam of data.outParams) {\r\n            this.pushByOutParam(outParam);\r\n        }\r\n\r\n        let newFp = this.state.register;\r\n        newFp.fp = this.state.register.sp - 4;\r\n\r\n        for(let i = 0; i < data.outParams.length; i++) {\r\n            newFp.fp += 4;\r\n        }\r\n        for(let i = 0; i < data.registers.length; i++) {\r\n            newFp.fp += 4;\r\n        }\r\n        for(let i = 0; i < data.vars.length; i++) {\r\n            newFp.fp += 4;\r\n        }\r\n        this.setState({\r\n            register: newFp\r\n        })\r\n        this.props.setReg({reg: \"fp\", value: this.state.register.fp});\r\n    }\r\n\r\n    pushByReg = (reg) => {\r\n        console.log(reg);\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        switch(reg) {\r\n            case \"R0\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R0\", value: this.props.register.R0, arg: null}}); break;}\r\n            case \"R1\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R1\", value: this.props.register.R1, arg: null}}); break;}\r\n            case \"R2\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R2\", value: this.props.register.R2, arg: null}}); break;}\r\n            case \"R3\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R3\", value: this.props.register.R2, arg: null}}); break;}\r\n            case \"R4\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R4\", value: this.props.register.R4, arg: null}}); break;}\r\n            case \"R5\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R5\", value: this.props.register.R5, arg: null}}); break;}\r\n            case \"R6\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R6\", value: this.props.register.R6, arg: null}}); break;}\r\n            case \"R7\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R7\", value: this.props.register.R7, arg: null}}); break;}\r\n            case \"R8\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R8\", value: this.props.register.R8, arg: null}}); break;}\r\n            case \"R9\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R9\", value: this.props.register.R9, arg: null}}); break;}\r\n            case \"R10\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R10\", value: this.props.register.R10, arg: null}}); break;}\r\n            case \"fp\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"fp\", value: this.props.register.fp, arg: null}}); break;}\r\n            case \"R12\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R12\", value: this.props.register.R12, arg: null}}); break;}\r\n            case \"sp\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"sp\", value: this.props.register.sp, arg: null}}); break;}\r\n            case \"lr\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"lr\", value: this.props.register.lr, arg: null}}); break;}\r\n            case \"pc\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"pc\", value: this.props.register.pc, arg: null}}); break;}\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    pushByVar = (variable) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        this.push({address: this.state.register.sp, data: {type: \"var\", value: variable, arg: null}});\r\n    }\r\n\r\n    pushEmpty = (address) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        let newFrames = this.state.frames;\r\n        newFrames.push({address: address, data: {type: \"empty\", value: 0, arg: null}});\r\n\r\n        this.setState({\r\n            frames: newFrames,\r\n        }) \r\n    }\r\n\r\n    pushByOutParam = (parameter) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        this.push({address: this.state.register.sp, data: {type: \"outParam\", value: parameter.value, arg: parameter.arg}});\r\n    }\r\n\r\n    pushByInParam = (parameter) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        this.push({address: this.state.register.sp, data: {type: \"inParam\", value: parameter.value, arg: parameter.arg}});\r\n    }\r\n\r\n    push = (data) => {\r\n        let newFrames = this.state.frames;\r\n        newFrames.push(data);\r\n\r\n        this.setState({\r\n            frames: newFrames,\r\n        }) \r\n        this.props.decSp();\r\n        console.log(this.state.frames);\r\n    }\r\n\r\n    pop = () => {\r\n        if(this.state.frames.length < 2) {\r\n            alert(\"Cannot pop an empty stack\");\r\n            return;\r\n        }\r\n\r\n        let newSp = this.state.register;\r\n        newSp.sp += 4;\r\n\r\n        let curFrames = this.state.frames;\r\n        let frame = curFrames.pop();\r\n        if(frame.data.type === \"reg\") {\r\n            switch(frame.data.reg) {\r\n                case \"R0\": {let newReg = this.state.register; newReg.R0 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R0\", value: newReg.R0}); break;}\r\n                case \"R1\": {let newReg = this.state.register; newReg.R1 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R1\", value: newReg.R1}); break;}\r\n                case \"R2\": {let newReg = this.state.register; newReg.R3 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R3\", value: newReg.R3}); break;}\r\n                case \"R4\": {let newReg = this.state.register; newReg.R4 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R4\", value: newReg.R4}); break;}\r\n                case \"R5\": {let newReg = this.state.register; newReg.R5 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R5\", value: newReg.R5}); break;}\r\n                case \"R6\": {let newReg = this.state.register; newReg.R6 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R6\", value: newReg.R6}); break;}\r\n                case \"R7\": {let newReg = this.state.register; newReg.R7 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R7\", value: newReg.R7}); break;}\r\n                case \"R8\": {let newReg = this.state.register; newReg.R8 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R8\", value: newReg.R8}); break;}\r\n                case \"R9\": {let newReg = this.state.register; newReg.R9 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R9\", value: newReg.R9}); break;}\r\n                case \"R10\": {let newReg = this.state.register; newReg.R10 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R10\", value: newReg.R10}); break;}\r\n                case \"fp\": {let newReg = this.state.register; newReg.fp = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"fp\", value: newReg.fp}); break;}\r\n                case \"R12\": {let newReg = this.state.register; newReg.R12 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R12\", value: newReg.R12}); break;}\r\n                case \"sp\": {let newReg = this.state.register; newReg.sp = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"sp\", value: newReg.sp}); break;}\r\n                case \"lr\": {let newReg = this.state.register; newReg.lr = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"lr\", value: newReg.lr}); break;}\r\n                case \"pc\": {let newReg = this.state.register; newReg.pc = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"pc\", value: newReg.pc}); break;}\r\n                default: {}\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            frames: curFrames,\r\n            register: newSp,\r\n        })\r\n        if(frame.data.reg !== \"sp\") {\r\n            this.props.incSp();\r\n        }\r\n    }\r\n\r\n    popRegister = (reg) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp += 4;\r\n\r\n        console.log(\"reg: \" + reg);\r\n\r\n        let curFrames = this.state.frames;\r\n        let frame = curFrames.pop();\r\n\r\n        console.log(\"DATA: \" + frame.data.value);\r\n\r\n        switch(reg) {\r\n            case \"R0\": {this.props.setReg({reg: \"R0\", value: frame.data.value}); break;}\r\n            case \"R1\": {this.props.setReg({reg: \"R1\", value: frame.data.value}); break;}\r\n            case \"R2\": {this.props.setReg({reg: \"R3\", value: frame.data.value}); break;}\r\n            case \"R4\": {this.props.setReg({reg: \"R4\", value: frame.data.value}); break;}\r\n            case \"R5\": {this.props.setReg({reg: \"R5\", value: frame.data.value}); break;}\r\n            case \"R6\": {this.props.setReg({reg: \"R6\", value: frame.data.value}); break;}\r\n            case \"R7\": {this.props.setReg({reg: \"R7\", value: frame.data.value}); break;}\r\n            case \"R8\": {this.props.setReg({reg: \"R8\", value: frame.data.value}); break;}\r\n            case \"R9\": {this.props.setReg({reg: \"R9\", value: frame.data.value}); break;}\r\n            case \"R10\": {this.props.setReg({reg: \"R10\", value: frame.data.value}); break;}\r\n            case \"fp\": {this.props.setReg({reg: \"fp\", value: frame.data.value}); break;}\r\n            case \"R12\": {this.props.setReg({reg: \"R12\", value: frame.data.value}); break;}\r\n            case \"sp\": {this.props.setReg({reg: \"sp\", value: frame.data.value}); break;}\r\n            case \"lr\": {this.props.setReg({reg: \"lr\", value: frame.data.value}); break;}\r\n            case \"pc\": {this.props.setReg({reg: \"pc\", value: frame.data.value}); break;}\r\n            default: {}\r\n        }\r\n\r\n        this.setState({\r\n            frames: curFrames,\r\n            register: newSp,\r\n        })\r\n        this.props.incSp();\r\n    }\r\n\r\n    removeFrames = () => {\r\n        let newFrames = this.state.frames;\r\n        let newRegister = this.state.register;\r\n        for(let i = newFrames.length - 1; i >= 0; i--) {\r\n            let frame = newFrames[i];\r\n            if(frame.address < this.props.register.sp) {\r\n                newFrames.pop();\r\n                newRegister.sp += 4;\r\n            }\r\n        }\r\n        this.setState({\r\n            frames: newFrames,\r\n            register: newRegister\r\n        })\r\n    }\r\n\r\n    clear = () => {\r\n        let clearFrames = [{address: 4096, data: {type: \"top\"}}];\r\n        let clearRegister = this.state.register;\r\n        clearRegister.fp = 4096;\r\n        clearRegister.sp = 4096;\r\n        this.setState({\r\n            frames: clearFrames,\r\n            register: clearRegister\r\n        })\r\n        this.props.setReg({reg: \"fp\", value: 4096});\r\n        this.props.setReg({reg: \"sp\", value: 4096});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Stack\">\r\n\r\n                <Grid container spacing={8} className=\"StackHeader\">\r\n\r\n                    <Grid item>\r\n                        {this.state.frames.length === 1 ? <h2>Stack ({this.state.frames.length} frame)</h2> :<h2>Stack ({this.state.frames.length} frames)</h2>} \r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Button style = {{fontSize: \"1.7vh\"}} variant=\"outlined\" color=\"secondary\" onClick={this.clear}>Clear</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                <br></br>\r\n\r\n                {\r\n                    this.state.frames.map(frame =>\r\n                        <div>\r\n                            <Grid container className=\"Container\"> \r\n                                {(this.props.register.sp === frame.address && this.props.register.fp === frame.address) ? \r\n                                    <div>\r\n                                        <Grid item>\r\n                                            {this.decimalToHex(frame.address).map(char => char)}\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            fp <ArrowRightAltIcon style = {{fontSize: \"2vh\"}}></ArrowRightAltIcon>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            sp <ArrowRightAltIcon style = {{fontSize: \"2vh\"}}></ArrowRightAltIcon>\r\n                                        </Grid>\r\n                                    </div>\r\n                                :    \r\n                                this.props.register.sp === frame.address ?\r\n                                    <div>\r\n                                        <Grid item>\r\n                                            {this.decimalToHex(frame.address).map(char => char)}\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            sp <ArrowRightAltIcon style = {{fontSize: \"2vh\"}}></ArrowRightAltIcon>\r\n                                        </Grid>\r\n                                    </div>\r\n                                :      \r\n                                this.props.register.fp === frame.address ?\r\n                                <div>\r\n                                    <Grid item>\r\n                                        {this.decimalToHex(frame.address).map(char => char)}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        fp <ArrowRightAltIcon style = {{fontSize: \"2vh\"}}></ArrowRightAltIcon>\r\n                                    </Grid>\r\n                                </div>\r\n                                : \r\n                                <Grid>\r\n                                    {this.decimalToHex(frame.address).map(char => char)}\r\n                                </Grid>}\r\n                                \r\n                                <Frame params={frame} register={this.props.register}></Frame>\r\n\r\n                            </Grid>\r\n\r\n                            <div style={{ float:\"left\", clear: \"both\" }}\r\n                                ref={(el) => { this.messagesEnd = el; }}>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )   \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stack;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass RegisterFileConfig extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        // this.state = {\r\n        //     register: {\r\n        //         r0: props.register.r0,\r\n        //         r1: props.register.r1,\r\n        //         r2: props.register.r2,\r\n        //         r3: props.register.r3,\r\n        //         r4: props.register.r4,\r\n        //         r5: props.register.r5,\r\n        //         r6: props.register.r6,\r\n        //         r7: props.register.r7,\r\n        //         r8: props.register.r8,\r\n        //         r9: props.register.r9,\r\n        //         r10: props.register.r10,\r\n        //         fp: props.register.fp,\r\n        //         r12: props.register.r12,\r\n        //         sp: props.register.sp,\r\n        //         lr: props.register.lr,\r\n        //         pc: props.register.pc\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    decimalToHex = (number) => {\r\n        if (number < 0) {\r\n            number = 0xFFFFFFFF + number + 1;\r\n        }\r\n        let hexNum = number.toString(16).toUpperCase();\r\n        while(hexNum.length < 8) {\r\n            hexNum = 0 + hexNum;\r\n        }\r\n\r\n        return \"0x\" + hexNum;\r\n    }\r\n\r\n    // decimalToHex = (decimalNumber) => {\r\n    //     let hexNum = [];\r\n    \r\n    //     while(decimalNumber!==0) {\r\n    //         let temp  = 0; \r\n    //         temp = decimalNumber % 16; \r\n           \r\n    //         if(temp < 10) {\r\n    //             hexNum.push(String.fromCharCode(temp + 48)); \r\n    //         } \r\n    //         else {\r\n    //             hexNum.push(String.fromCharCode(temp + 55)); \r\n    //         } \r\n    //         decimalNumber = decimalNumber/16; \r\n    //     } \r\n\r\n    //     if(decimalNumber === 0) {\r\n    //         for(let i = 0; i < 8; i++) {\r\n    //             hexNum.push(0);\r\n    //         }\r\n    //     }\r\n\r\n    //     let reverse = []\r\n    //     let j = 2;\r\n    //     for(let i = 7; i >= 0; i--) {\r\n    //         reverse[j] = hexNum[i];\r\n    //         j++;\r\n    //     }\r\n    //     reverse[0] = '0';\r\n    //     reverse[1] = 'x';\r\n    //     return(reverse);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item>\r\n\r\n                <Grid container spacing={6} className=\"Row\">\r\n\r\n                    <Grid item>\r\n                        <Grid container className=\"Column\">\r\n                            <Grid item>\r\n                                <h2>R0: {this.props.decimal ? this.props.register.R0: this.decimalToHex(this.props.register.R0)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R1: {this.props.decimal ? this.props.register.R1: this.decimalToHex(this.props.register.R1)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R2: {this.props.decimal ? this.props.register.R2: this.decimalToHex(this.props.register.R2)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R3: {this.props.decimal ? this.props.register.R3: this.decimalToHex(this.props.register.R3)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R4: {this.props.decimal ? this.props.register.R4: this.decimalToHex(this.props.register.R4)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R5: {this.props.decimal ? this.props.register.R5: this.decimalToHex(this.props.register.R5)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R6: {this.props.decimal ? this.props.register.R6: this.decimalToHex(this.props.register.R6)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R7: {this.props.decimal ? this.props.register.R7: this.decimalToHex(this.props.register.R7)}</h2> \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid item>\r\n                        <Grid container className=\"Column\">\r\n                            <Grid item>\r\n                                <h2>R8: {this.props.decimal ? this.props.register.R8: this.decimalToHex(this.props.register.R8)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R9: {this.props.decimal ? this.props.register.R9: this.decimalToHex(this.props.register.R9)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R10: {this.props.decimal ? this.props.register.R10: this.decimalToHex(this.props.register.R10)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>fp: {this.props.decimal ? this.props.register.fp: this.decimalToHex(this.props.register.fp)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R12: {this.props.decimal ? this.props.register.R12: this.decimalToHex(this.props.register.R12)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>sp: {this.props.decimal ? this.props.register.sp: this.decimalToHex(this.props.register.sp)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>lr: {this.props.decimal ? this.props.register.lr: this.decimalToHex(this.props.register.lr)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>pc: {this.props.decimal ? this.props.register.pc: this.decimalToHex(this.props.register.pc)}</h2> \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterFileConfig;","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tab from './Tab.js';\r\nimport Stack from './Stack';\r\nimport RegisterFileConfig from './RegisterFileConfig.js';\r\nimport './../App.css';\r\n\r\nclass RegisterFile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            register: {\r\n                R0: 0,\r\n                R1: 1,\r\n                R2: 2,\r\n                R3: 3,\r\n                R4: 4,\r\n                R5: 5,\r\n                R6: 6,\r\n                R7: 7,\r\n                R8: 8,\r\n                R9: 9,\r\n                R10: 10,\r\n                fp: 4096,\r\n                R12: 12,\r\n                sp: 4096,\r\n                lr: 1,\r\n                pc: 0\r\n            },\r\n            decimal: true,\r\n            operation: \"\",\r\n            destination: \"\",\r\n            src1: \"\",\r\n            src2: \"\",\r\n            immediate: 0,\r\n        }\r\n        this.incSp = this.incSp.bind(this);\r\n        this.decSp = this.decSp.bind(this);\r\n        this.setReg = this.setReg.bind(this);\r\n        this.push = this.push.bind(this);\r\n        this.pop = this.pop.bind(this);\r\n        //this.getRegister = this.getRegister.bind(this);\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    incSp = () => {\r\n        let newReg = this.state.register;\r\n        newReg.sp += 4;\r\n        this.setState({\r\n            register: newReg\r\n        })\r\n    }\r\n\r\n    decSp = () => {\r\n        let newReg = this.state.register;\r\n        newReg.sp -= 4;\r\n        this.setState({\r\n            register: newReg\r\n        })\r\n    }\r\n\r\n    toggleHex = () => {\r\n        this.setState({\r\n            decimal: !(this.state.decimal)\r\n        })\r\n    }\r\n\r\n    getRegister = (reg) => {\r\n        switch(reg) {\r\n            case \"R0\": {return(this.state.register.R0);}\r\n            case \"R1\": {return(this.state.register.R1);}\r\n            case \"R2\": {return(this.state.register.R2);}\r\n            case \"R3\": {return(this.state.register.R3);}\r\n            case \"R4\": {return(this.state.register.R4);}\r\n            case \"R5\": {return(this.state.register.R5);}\r\n            case \"R6\": {return(this.state.register.R6);}\r\n            case \"R7\": {return(this.state.register.R7);}\r\n            case \"R8\": {return(this.state.register.R8);}\r\n            case \"R9\": {return(this.state.register.R9);}\r\n            case \"R10\": {return(this.state.register.R10);}\r\n            case \"fp\": {return(this.state.register.fp);}\r\n            case \"R12\": {return(this.state.register.R12);}\r\n            case \"sp\": {return(this.state.register.sp);}\r\n            case \"lr\": {return(this.state.register.lr);}\r\n            case \"pc\": {return(this.state.register.pc);}\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    setRegister = (reg, data, newReg) => {\r\n        switch(reg) {\r\n            case \"R0\": {newReg.R0 = data; break;}\r\n            case \"R1\": {newReg.R1 = data; break;}\r\n            case \"R2\": {newReg.R2 = data; break;}\r\n            case \"R3\": {newReg.R3 = data; break;}\r\n            case \"R4\": {newReg.R4 = data; break;}\r\n            case \"R5\": {newReg.R5 = data; break;}\r\n            case \"R6\": {newReg.R6 = data; break;}\r\n            case \"R7\": {newReg.R7 = data; break;}\r\n            case \"R8\": {newReg.R8 = data; break;}\r\n            case \"R9\": {newReg.R9 = data; break;}\r\n            case \"R10\": {newReg.R10 = data; break;}\r\n            case \"fp\": {newReg.fp = data; break;}\r\n            case \"R12\": {newReg.R12 = data; break;}\r\n            case \"sp\": {newReg.sp = data; break;}\r\n            case \"lr\": {newReg.lr = data; break;}\r\n            case \"pc\": {newReg.pc = data; break;}\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    setPc = (line) => {\r\n        let newPc = this.state.register;\r\n        newPc.pc = line;\r\n        this.setState({\r\n            register: newPc\r\n        })\r\n    }\r\n\r\n    mov = (data) => {\r\n        let arg2 = data.arg2;\r\n        if(typeof data.arg2 === 'string' || data.arg2 instanceof String) {\r\n            arg2 = this.getRegister(data.arg2);\r\n        }\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, arg2, newReg);\r\n       \r\n        this.setState({register: newReg});\r\n\r\n        if(data.handleSp) {\r\n            this.handleSpChild(this.state.register.sp);\r\n        }\r\n\r\n        this.removeFramesChild();\r\n        console.log(this.state.register);\r\n    }\r\n\r\n    add = (data) => {\r\n        console.log(data);\r\n        let arg2 = this.getRegister(data.arg2);\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }      \r\n\r\n        console.log(this.state.register);\r\n\r\n        console.log(arg2);\r\n        console.log(arg3);\r\n\r\n        let sum = arg2+arg3;\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, sum, newReg);\r\n\r\n        if(data.handleSp) {\r\n            this.handleSpChild(this.state.register.sp);\r\n        }\r\n        this.setState({register: newReg});\r\n\r\n        this.removeFramesChild();\r\n    }\r\n\r\n    sub = (data) => {\r\n        let arg2 = this.getRegister(data.arg2);\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }   \r\n\r\n        let difference = arg2-arg3;\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, difference, newReg);\r\n\r\n        if(data.handleSp) {\r\n            this.handleSpChild(this.state.register.sp);\r\n        }\r\n        this.setState({register: newReg});\r\n\r\n        this.removeFramesChild();\r\n    }\r\n\r\n    mult = (data) => {\r\n        let arg2 = this.getRegister(data.arg2);\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }   \r\n        let product = arg2*arg3;\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, product, newReg);\r\n\r\n        if(data.handleSp) {\r\n            this.handleSpChild(this.state.register.sp);\r\n        }\r\n        this.setState({register: newReg});\r\n\r\n        this.removeFramesChild();\r\n    }\r\n\r\n    ldr = (data) => {\r\n        let arg2 = data.arg2;\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg2 === 'string' || data.arg2 instanceof String) {\r\n            console.log(\"getting value\");\r\n            arg2 = this.getRegister(data.arg2);\r\n        }  \r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            console.log(\"getting value\");\r\n            arg3 = this.getRegister(data.arg3);\r\n        }   \r\n\r\n        let address;\r\n        if(arg3 === null) {\r\n            address = arg2;\r\n        }\r\n        else {\r\n            address = arg2 + arg3;\r\n        }\r\n        this.ldrChild({address: address, reg: data.arg1})\r\n    }\r\n\r\n    str = (data) => {\r\n        let arg1 = this.getRegister(data.arg1);\r\n        let arg2 = data.arg2;\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg2 === 'string' || data.arg2 instanceof String) {\r\n            arg2 = this.getRegister(data.arg2);\r\n        }  \r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }   \r\n        let address;\r\n        if(arg3 === null) {\r\n            address = arg2;\r\n        }\r\n        else {\r\n            address = arg2 + arg3;\r\n        }\r\n        this.strChild({address: address, value: arg1})\r\n    }\r\n\r\n    bl = (line) => {\r\n        let newRegister = this.state.register;\r\n        newRegister.lr = line;\r\n        this.setRegister(\"lr\", line, newRegister);\r\n    }\r\n\r\n    push = (data) => {\r\n        if(typeof data === 'string' || data instanceof String) {\r\n            this.pushChild(data);\r\n        }\r\n        else {\r\n            let pushArray = [];\r\n            if(data.arg1 !== \"\") {\r\n                pushArray.push(data.arg1);\r\n            }\r\n            if(data.arg2 !== \"\") {\r\n                pushArray.push(data.arg2);\r\n            }\r\n            if(data.arg3 !== \"\") {\r\n                pushArray.push(data.arg3);\r\n            }\r\n            if(data.arg4 !== \"\") {\r\n                pushArray.push(data.arg4);\r\n            }\r\n            if(data.arg5 !== \"\") {\r\n                pushArray.push(data.arg5);\r\n            }\r\n            if(data.arg6 !== \"\") {\r\n                pushArray.push(data.arg6);\r\n            }\r\n            pushArray = this.sort(pushArray, true);\r\n            for(const register of pushArray) {\r\n                this.pushChild(register);\r\n            }\r\n        }\r\n    }\r\n\r\n    pushFunction = (data) => {\r\n        this.functionChild(data);\r\n    }\r\n\r\n    clearStack = () => {\r\n        this.clearChild();\r\n    }\r\n    \r\n    pop = (data) => {\r\n        if(!(typeof data.arg1 === 'string' || data.arg1 instanceof String)) {\r\n            console.log(\"here\");\r\n            this.popChild();\r\n        }\r\n        else {\r\n            console.log(\"POPPING BY REG\");\r\n            let popArray = [];\r\n            if(data.arg1 !== \"\") {\r\n                popArray.push(data.arg1);\r\n            }\r\n            if(data.arg2 !== \"\") {\r\n                popArray.push(data.arg2);\r\n            }\r\n            if(data.arg3 !== \"\") {\r\n                popArray.push(data.arg3);\r\n            }\r\n            if(data.arg4 !== \"\") {\r\n                popArray.push(data.arg4);\r\n            }\r\n            if(data.arg5 !== \"\") {\r\n                popArray.push(data.arg5);\r\n            }\r\n            if(data.arg6 !== \"\") {\r\n                popArray.push(data.arg6);\r\n            }\r\n            popArray = this.sort(popArray, false);\r\n            for(const register of popArray) {\r\n                this.popRegChild(register);\r\n            }\r\n        }\r\n    }\r\n\r\n    bitwise = (data, func) => {\r\n        let arg2 = this.getRegister(data.arg2);\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }      \r\n\r\n        console.log(this.state.register);\r\n\r\n        console.log(arg2);\r\n        console.log(arg3);\r\n        console.log((arg2 >>> 0).toString(2));\r\n        console.log((arg3 >>> 0).toString(2));\r\n        //console.log(arg2);\r\n        //console.log(arg3);\r\n        console.log(func);\r\n        let result;\r\n        switch(func) {\r\n            case \"AND\": {result = arg2&arg3; break}\r\n            case \"ORR\": {result = arg2|arg3; break}\r\n            case \"EOR\": {result = arg2^arg3; break}\r\n            case \"ASR\": {result = arg2>>arg3; break}\r\n            case \"LSR\": {result = arg2>>>arg3; break}\r\n            case \"LSL\": {result = arg2<<arg3; break}\r\n            default: {}\r\n        }\r\n        console.log(result);\r\n        console.log((result >>> 0).toString(2));\r\n\r\n\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, result, newReg);\r\n\r\n        this.setState({register: newReg});\r\n\r\n        this.removeFramesChild();\r\n    }\r\n\r\n    setReg = (data) => {\r\n        let newReg = this.state.register;\r\n        console.log(data);\r\n        \r\n        switch(data.reg) {\r\n            case \"R0\": {newReg.R0 = data.value; break;}\r\n            case \"R1\": {newReg.R1 = data.value; break;}\r\n            case \"R2\": {newReg.R2 = data.value; break;}\r\n            case \"R3\": {newReg.R3 = data.value; break;}\r\n            case \"R4\": {newReg.R4 = data.value; break;}\r\n            case \"R5\": {newReg.R5 = data.value; break;}\r\n            case \"R6\": {newReg.R6 = data.value; break;}\r\n            case \"R7\": {newReg.R7 = data.value; break;}\r\n            case \"R8\": {newReg.R8 = data.value; break;}\r\n            case \"R9\": {newReg.R9 = data.value; break;}\r\n            case \"R10\": {newReg.R10 = data.value; break;}\r\n            case \"fp\": {newReg.fp = data.value; break;}\r\n            case \"R12\": {newReg.R12 = data.value; break;}\r\n            case \"sp\": {newReg.sp = data.value; break;}\r\n            case \"lr\": {newReg.lr = data.value; break;}\r\n            case \"pc\": {newReg.pc = data.value; break;}\r\n            default: {}\r\n        }\r\n\r\n        this.setState({\r\n            register: newReg\r\n        })\r\n        console.log(this.state.register);\r\n    }\r\n\r\n    sort = (registers, backwards) => {\r\n        let numReg = [];\r\n        let newReg = [];\r\n        console.log(registers);\r\n        for(const register of registers) {\r\n            switch(register) {\r\n                case \"R0\": {numReg.push(0); break;}\r\n                case \"R1\": {numReg.push(1); break;}\r\n                case \"R2\": {numReg.push(2); break;}\r\n                case \"R3\": {numReg.push(3); break;}\r\n                case \"R4\": {numReg.push(4); break;}\r\n                case \"R5\": {numReg.push(5); break;}\r\n                case \"R6\": {numReg.push(6); break;}\r\n                case \"R7\": {numReg.push(7); break;}\r\n                case \"R8\": {numReg.push(8); break;}\r\n                case \"R9\": {numReg.push(9); break;}\r\n                case \"R10\": {numReg.push(10); break;}\r\n                case \"fp\": {numReg.push(11); break;}\r\n                case \"R12\": {numReg.push(12); break;}\r\n                case \"sp\": {numReg.push(13); break;}\r\n                case \"lr\": {numReg.push(14); break;}\r\n                case \"pc\": {numReg.push(15); break;}\r\n                default: {}\r\n            }\r\n        }\r\n        console.log(numReg);\r\n        if(backwards) {\r\n            numReg.sort((a,b)=>b-a);\r\n        }\r\n        else {\r\n            numReg.sort((a,b)=>a-b);\r\n        }\r\n\r\n        console.log(numReg);\r\n        for(const num of numReg) {\r\n            switch(num) {\r\n                case 0: {newReg.push(\"R0\"); break;}\r\n                case 1: {newReg.push(\"R1\"); break;}\r\n                case 2: {newReg.push(\"R2\"); break;}\r\n                case 3: {newReg.push(\"R3\"); break;}\r\n                case 4: {newReg.push(\"R4\"); break;}\r\n                case 5: {newReg.push(\"R5\"); break;}\r\n                case 6: {newReg.push(\"R6\"); break;}\r\n                case 7: {newReg.push(\"R7\"); break;}\r\n                case 8: {newReg.push(\"R8\"); break;}\r\n                case 9: {newReg.push(\"R9\"); break;}\r\n                case 10: {newReg.push(\"R10\"); break;}\r\n                case 11: {newReg.push(\"fp\"); break;}\r\n                case 12: {newReg.push(\"R12\"); break;}\r\n                case 13: {newReg.push(\"sp\"); break;}\r\n                case 14: {newReg.push(\"lr\"); break;}\r\n                case 15: {newReg.push(\"pc\"); break;}\r\n                default: {}\r\n            }\r\n        }\r\n        console.log(newReg);\r\n        return(newReg);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container style = {{justifyContent: \"space-between\"}} className=\"AppComponents\">\r\n                \r\n                    <Grid item>\r\n                        <Stack setPush={push => this.pushChild = push} setPop={pop => this.popChild = pop} setPopReg={pop => this.popRegChild = pop} setLdr={ldr => this.ldrChild = ldr} setStr={str => this.strChild = str} setSp={sp => this.handleSpChild = sp} setFunction={func => this.functionChild = func} setClear={clear => this.clearChild = clear} register={this.state.register} setRemoveFrames={frames => this.removeFramesChild = frames} incSp={this.incSp} decSp={this.decSp} setReg={this.setReg} setRegister={this.setRegister}/>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Grid container className=\"RegisterFile\">\r\n\r\n                            <Grid item className=\"Center\">\r\n                                <h1>\r\n                                    Register File\r\n                                </h1>\r\n                            </Grid>\r\n\r\n                            <Grid item className=\"Center\">\r\n                                <Button style = {{fontSize: \"1.3vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.toggleHex}>{this.state.decimal ? <h3>Hex</h3> : <h3>Dec</h3>}</Button>\r\n                            </Grid>\r\n\r\n                            <Grid item className=\"RegisterFileContainer\">\r\n                                <Grid container className=\"RegisterFileContainer\">\r\n                                    <Grid item>\r\n                                        <RegisterFileConfig register={this.state.register} decimal={this.state.decimal}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Tab register={this.state.register} mov={this.mov} add={this.add} sub={this.sub} mult={this.mult} push={this.push} pop={this.pop} ldr={this.ldr} str={this.str} bl={this.bl} setPc={this.setPc}  bitwise={this.bitwise} pushFunction={this.pushFunction} clear={this.clearStack}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterFile;","import React from 'react';\nimport RegisterFile from './Components/RegisterFile';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"App\">\n        <h1>\n          <AppBar>Stack Visualizer</AppBar>\n        </h1>\n      </div>\n\n      <br></br>\n      <br></br>\n      <br></br>\n\n      <Grid container className=\"AppContainer\">\n        <Grid item>\n          <RegisterFile/>\n        </Grid>\n\n      </Grid>\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}