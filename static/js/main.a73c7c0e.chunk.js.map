{"version":3,"sources":["Components/Compile Components/RunTab.js","Components/Compile Components/StepTab.js","Components/Compile Components/Timer.js","Components/Compile Components/Slider.js","Components/Compile Components/VisualizeTab.js","Components/Compile Components/RunOptions.js","Components/ArmInfo.js","Components/Compile Components/Parser.js","Components/Push Components/PushReg.js","Components/Push Components/PushVar.js","Components/Push Components/PushOutParam.js","Components/Push Components/PushInParam.js","Components/Push Components/PushFunc.js","Components/Push Components/Push.js","Components/StackOperations.js","Components/Tab.js","Components/Frame.js","Components/Stack.js","Components/RegisterFileConfig.js","Components/RegisterFile.js","App.js","serviceWorker.js","index.js"],"names":["RunTab","className","this","props","step","Button","style","fontSize","variant","color","onClick","handleRun","handleStep","handleContinue","React","Component","StepTab","startStep","handleReset","Timer","state","instructions","parseInt","startTimeInSeconds","run","setState","resetTimer","interval","setInterval","tick","speed","clearInterval","useStyles","makeStyles","root","width","ContinuousSlider","classes","useState","value","setValue","Grid","container","spacing","item","Typography","id","gutterBottom","xs","Slider","min","max","defaultValue","valueLabelDisplay","onChange","event","newValue","changeSpeed","aria-labelledby","VisualizeTab","visualize","startVisualize","handleVisualize","TabPanel","children","index","other","role","hidden","Box","p","a11yProps","theme","flexGrow","backgroundColor","palette","background","paper","RunOptions","AppBar","position","Tabs","minHeight","centered","aria-label","Tab","label","ArmInfo","open","setOpen","handleClose","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Dialog","onClose","scroll","aria-describedby","maxWidth","DialogTitle","DialogContent","dividers","DialogContentText","ref","tabIndex","DialogActions","Parser","handleChange","e","target","count","i","length","substring","numLines","hexToInt","hex","console","log","num","maxVal","Math","pow","listedLinesCalc","lineArray","push","code","pointCurInstruction","parse","handleCompile","compile","checkErrors","errorInfo","line","status","lines","error","visualDisplay","nextInstruction","instructionCount","newSpeed","curLine","lineNum","passFirst","debugCode","addStart","branch","getLines","instructionData","getInstructions","branchData","instruction","arg1","labels","bx","getRegister","reg","register","R0","R1","R2","R3","R4","R5","R6","R7","R8","R9","R10","fp","R12","sp","lr","pc","executeInstructions","instructionLines","begin","test","splice","newLines","j","arg2","arg3","replace","arg4","arg5","arg6","elem","type","newInstructions","add","slice","setPc","sub","mul","mov","ldr","str","cmp","bl","pop","bitwise","newInstructionCount","alert","data","movData","correctCase","handleSp","addData","subData","multData","mult","name","isNaN","existsLabel","String","includes","start","getNumberByRegister","indexOf","end","getRegisterByNumber","pushData","toString","toLowerCase","popData","offset","ldrData","strData","func","bitData","breakpoints","noValidate","autoComplete","search","TextField","InputProps","startAdornment","InputAdornment","map","fullWidth","multiline","rows","rowsMax","PushReg","pushR0","pushReg","close","pushR1","pushR2","pushR3","pushR4","pushR5","pushR6","pushR7","pushR8","pushR9","pushR10","pushFp","pushR12","pushSp","pushLr","pushPc","ButtonGroup","size","PushVar","pushVar","variable","PushOutParam","pushOutParam","parameter","arg","PushInParam","pushInParam","PushFunc","incVar","newNum","numVar","incParIn","numParIn","incParOut","numParOut","pushFunc","variables","inParams","outParams","variable1","variable2","variable3","variable4","variable5","variable6","parIn1","parIn2","parIn3","parIn4","parIn5","parIn6","parOut1","parOut2","parOut3","parOut4","parOut5","parOut6","reverseInParams","funcData","registers","sortRegisters","vars","numReg","newReg","sort","a","b","addRegister","removed","newArr","FormControlLabel","control","Checkbox","checked","disabled","class","Push","openRegister","setRegister","openVariable","setVariable","openOutParameter","setOutParameter","openInParameter","setInParameter","openFunction","setFunction","height","StackOperations","clear","SelectTab","pushFunction","Frame","address","params","pos","Container","abs","Stack","decimalToHex","decimalNumber","hexNum","temp","fromCharCode","reverse","setFrames","lowAddress","frames","pushEmpty","loadByAddress","newFrames","frame","setReg","storeByAddress","handleFuction","pushByInParam","pushByOutParam","pushByVar","inParam","pushByReg","outParam","newFp","newSp","decSp","curFrames","incSp","popRegister","removeFrames","newRegister","clearRegister","bind","setPush","setPopReg","setPop","setLdr","setStr","setSp","setClear","setRemoveFrames","char","float","el","messagesEnd","RegisterFileConfig","number","toUpperCase","decimal","RegisterFile","toggleHex","newPc","handleSpChild","removeFramesChild","sum","difference","product","ldrChild","strChild","pushChild","pushArray","functionChild","clearStack","clearChild","popArray","popRegChild","popChild","result","backwards","operation","destination","src1","src2","immediate","justifyContent","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.a73c7c0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport './../../App.css';\r\n\r\nclass RunTab extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"RunTab\">\r\n                {this.props.step ? null : <Button style = {{fontSize: \"1.5vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.props.handleRun}>Run</Button>}\r\n                {this.props.step ? <Button style = {{fontSize: \"1.5vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.props.handleStep}>Step <ArrowForwardIcon></ArrowForwardIcon></Button>: null} \r\n                {this.props.step ? <Button style = {{fontSize: \"1.5vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.props.handleContinue}>Continue </Button>: null} \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RunTab;\r\n","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\n\r\nclass StepTab extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"RunTab\">\r\n                {this.props.step ? null: <Button style = {{fontSize: \"1.5vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.props.startStep}>Start</Button>}\r\n                {this.props.step ? <Button style = {{fontSize: \"1.5vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.props.handleStep}>Step <ArrowForwardIcon></ArrowForwardIcon></Button>: null} \r\n                {this.props.step ? <Button style = {{fontSize: \"1.5vh\"}} variant=\"contained\" color=\"primary\" onClick={this.props.handleReset}>Terminate</Button>: null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StepTab;","import React from 'react';\r\n\r\nclass Timer extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        instructions: parseInt(props.startTimeInSeconds, 10) || 0\r\n      };\r\n    }\r\n  \r\n    tick() {\r\n      if(this.props.run) {\r\n        this.setState(state => ({\r\n          instructions: state.instructions + 1\r\n        }));\r\n        this.props.step();\r\n      }\r\n      else {\r\n        this.props.resetTimer();\r\n      }\r\n    }\r\n  \r\n    componentDidMount() {\r\n      this.interval = setInterval(() => this.tick(), (1000 / this.props.speed));\r\n    }\r\n  \r\n    componentWillUnmount() {\r\n      clearInterval(this.interval);\r\n    }\r\n  \r\n    // formatTime(secs) {\r\n    //   let hours   = Math.floor(secs / 3600);\r\n    //   let minutes = Math.floor(secs / 60) % 60;\r\n    //   let seconds = secs % 60;\r\n    //   return [hours, minutes, seconds]\r\n    //       .map(v => ('' + v).padStart(2, '0'))\r\n    //       .filter((v,i) => v !== '00' || i > 0)\r\n    //       .join(':');\r\n    // }\r\n  \r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3><pre style = {{fontSize: \"2vh\"}}>   Instructions Executed: {this.state.instructions}</pre></h3>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  export default Timer;\r\n  ","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"13vw\",\r\n  },\r\n});\r\n\r\nexport default function ContinuousSlider(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(props.speed);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n    props.changeSpeed(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n      <Grid container spacing={2}>\r\n        <Grid item>\r\n            <Typography style = {{fontSize: \"1.5vh\"}} id=\"continuous-slider\" gutterBottom>\r\n                Instructions / sec\r\n            </Typography>\r\n        </Grid>\r\n        <Grid item xs>\r\n          <Slider min={1} step={1} max={6} defaultValue={props.speed} valueLabelDisplay=\"on\" value={value} onChange={handleChange} aria-labelledby=\"continuous-slider\" />\r\n        </Grid>\r\n        <Grid item>\r\n          \r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Timer from './Timer.js';\r\nimport Slider from './Slider.js';\r\nimport './../../App.css';\r\n\r\nclass VisualizeTab extends React.Component {\r\n    render() {\r\n        return(\r\n            <div className=\"RowTable\">\r\n\r\n                <div className=\"ColumnTable\">\r\n                    {this.props.visualize ? null: <Button style = {{fontSize: \"1.5vh\"}} variant=\"contained\" color=\"primary\" onClick={this.props.startVisualize}>Start</Button>}\r\n                    {this.props.visualize ? <Button style = {{fontSize: \"1.5vh\"}} variant=\"contained\" color=\"primary\" onClick={this.props.handleReset}>Terminate</Button>: null}\r\n                </div>\r\n\r\n                <div className=\"ColumnTable\">       \r\n                    <h3><pre>{this.props.visualize ? <Timer style = {{fontSize: \"1.5vh\"}} startTimeInSeconds=\"0\" step={this.props.handleVisualize} speed={this.props.speed} run={this.props.visualize}/>: null}</pre></h3>\r\n                    {this.props.visualize ? null: <Slider style = {{fontSize: \"1.5vh\"}} changeSpeed={this.props.changeSpeed} speed={this.props.speed}/>}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default VisualizeTab;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport RunTab from './RunTab.js';\r\nimport StepTab from './StepTab.js';\r\nimport VisualizeTab from './VisualizeTab.js';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"40vh\",\r\n  },\r\n}));\r\n\r\nexport default function RunOptions(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Tabs style={{minHeight: \"0vh\"}} centered value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab style = {{fontSize: \"1.3vh\", minHeight: \"0vh\"}} label=\"Run\" {...a11yProps(0)} />\r\n          <Tab style = {{fontSize: \"1.3vh\", minHeight: \"0vh\"}} label=\"Visualize\" {...a11yProps(1)} />\r\n          <Tab style = {{fontSize: \"1.3vh\", minHeight: \"0vh\"}} label=\"Step\" {...a11yProps(2)} />\r\n        </Tabs>\r\n      </AppBar>\r\n      <TabPanel value={value} index={0}>\r\n        <RunTab handleRun={props.handleRun} step={props.step} handleStep={props.handleStep} handleContinue={props.handleContinue}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={1}>\r\n        <VisualizeTab visualize={props.visualize} startVisualize={props.startVisualize} handleReset={props.handleReset} handleVisualize={props.handleVisualize} speed={props.speed} changeSpeed={props.changeSpeed}/>\r\n      </TabPanel>\r\n      <TabPanel value={value} index={2}>\r\n        <StepTab handleStep={props.handleStep} startStep={props.startStep} step={props.step} handleReset={props.handleReset}/>\r\n      </TabPanel>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport './../App.css';\r\n\r\nexport default function ArmInfo() {\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const handleClickOpen = () => () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const descriptionElementRef = React.useRef(null);\r\n  React.useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef;\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus();\r\n      }\r\n    }\r\n  }, [open]);\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClickOpen()}><InfoIcon style={{fontSize: \"2vh\"}}></InfoIcon></Button>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n        //fullWidth={true}\r\n        maxWidth={true}\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">ARM Compiler Info</DialogTitle>\r\n        <DialogContent dividers={true}>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n              <h1>\r\n              <pre>\r\n            {\r\n            'Syntax \\n \\n' + \r\n            'Registers should be specified as they appear in the register file \\'R0\\', \\'R1\\', ..., \\'fp\\', \\'sp\\', \\'lr\\', \\'pc\\' \\n' + \r\n            'Immediates should be specified with a \\'#\\' prefix, e.g. #15 or #0xF \\n \\n \\n' + \r\n            'Supported Instructions \\n \\n' +\r\n            'AND <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'ORR <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'EOR <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'ASR <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'LSR <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'LSL <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'MOV <Register>, <Register/Immediate> \\n' + \r\n            'ADD <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'SUB <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'MUL <Register>, <Register>, <Register/Immediate> \\n' + \r\n            'push {<Register>, <Register>}  (from 1-6 registers) \\n' + \r\n            'pop {<Register>, <Register>}  (from 1-6 registers) \\n' + \r\n            'LDR <Register>, [<Register>, <ImmediateOffset>] OR LDR <Register>, [<Address>] \\n' + \r\n            'STR <Register>, [<Register>, <ImmediateOffset>] OR STR <Register>, [<Address>] \\n' + \r\n            'CMP <Register>, <Register/Immediate> \\n' + \r\n            'B <LabelName> \\n' + \r\n            'BEQ <LabelName> \\n' + \r\n            'BNE <LabelName> \\n' + \r\n            'BGT <LabelName> \\n' + \r\n            'BLT <LabelName> \\n' + \r\n            'BGE <LabelName> \\n' + \r\n            'BLE <LabelName> \\n' + \r\n            'BL <Register> \\n' + \r\n            'To add a label use \\'<LabelName>: <Instruction>\\' \\n \\n \\n' +\r\n            'Sample Factorial Code \\n \\n' + \r\n            'MOV R0, #5 \\n' +\r\n            'BL fact \\n' +\r\n            'B finish \\n' +\r\n            'fact: push {R4, fp, lr} \\n' +\r\n            'CMP R0, #1 \\n' +\r\n            'BLE ret_one \\n' +\r\n            'MOV R4, R0 \\n' +\r\n            'SUB R0, R0, #1 \\n' +\r\n            'BL fact \\n' +\r\n            'MUL R0, R0, R4 \\n' +\r\n            'B end \\n' +\r\n            'ret_one: MOV R0, #1 \\n' +\r\n            'end: pop {R4, fp, lr} \\n' +\r\n            'BX lr \\n' +\r\n            'MOV R0, #3 \\n' +\r\n            'BL fact \\n' +\r\n            'MOV R2, R0\t\\n' +\t\t\t\t\r\n            'finish: \\n' \r\n\r\n\r\n              }\r\n                          </pre></h1>\r\n\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleClose} color=\"primary\">\r\n            Quit\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Highlight from 'react-highlighter';\r\nimport RunOptions from './RunOptions.js';\r\nimport ArmInfo from './../ArmInfo.js';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\n// import Button from '@material-ui/core/Button';\r\n// import FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\n// import FiberManualRecordOutlinedIcon from '@material-ui/icons/FiberManualRecordOutlined';\r\nimport './../../App.css';\r\n\r\nclass Parser extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            code: \"\",\r\n            line: 0,\r\n            status: 0,\r\n            step: false,\r\n            visualize: false,\r\n            speed: 3,\r\n            lines: [], \r\n            debugCode: \"\",\r\n            nextInstruction: \"\",\r\n            compile: false,\r\n            error: false,\r\n            errorInfo: [],\r\n            instructionCount: 0,\r\n            numLines: 0,\r\n            breakpoints: []\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n        let count = 0;\r\n        for(let i = 0; i < e.target.value.length; i++) {\r\n            if(e.target.value.substring(i, i+1) === '\\n') {\r\n                count++;\r\n            }\r\n        }\r\n        this.setState({\r\n            numLines: count\r\n        })\r\n    }\r\n\r\n    hexToInt = (hex) => {\r\n        console.log(\"HEXNUM: \" + hex);\r\n        while(hex.length < 8) {\r\n            hex = \"0\" + hex;\r\n        }\r\n        var num = parseInt(hex, 16);\r\n        var maxVal = Math.pow(2, hex.length / 2 * 8);\r\n        if (num > maxVal / 2 - 1) {\r\n            num = num - maxVal;\r\n        }\r\n        return num;\r\n    }\r\n\r\n    listedLinesCalc = (numLines) => {\r\n        let lineArray = [\"1  \\n\",\"2\\n\",\"3\\n\",\"4\\n\",\"5\\n\",\"6\\n\",\"7\\n\",\"8\\n\",\"9\\n\",\"10\\n\"];\r\n        for(let i = 11; i < numLines+2; i++) {\r\n            if(i <= 100) {\r\n                lineArray.push(i + \"\\n\");\r\n            }\r\n        }\r\n        return lineArray;\r\n    }\r\n\r\n    // addBreakpoint = (line, change) => {\r\n    //     let newBreakpoints = this.state.breakpoints;\r\n    //     line = parseInt(line);\r\n    //     console.log(line);\r\n    //     if(change) {\r\n    //         newBreakpoints.push(line);\r\n    //     }\r\n    //     else {\r\n    //         for(let i = 0; i < newBreakpoints.length; i++) {\r\n    //             if(newBreakpoints[i] === line) {\r\n    //                 newBreakpoints.splice(i, i+1);\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     this.setState({\r\n    //         breakpoints: newBreakpoints\r\n    //     })\r\n    //     console.log(newBreakpoints);\r\n    // }\r\n\r\n    startStep = ()  => {\r\n        this.setState({\r\n            step: true\r\n        })\r\n        if(this.state.code === \"\") {\r\n            this.handleReset();\r\n        }\r\n        this.pointCurInstruction();\r\n    }\r\n\r\n    handleStep = () => {\r\n        this.parse(true);\r\n        this.pointCurInstruction();\r\n    }\r\n\r\n    handleRun = () => {\r\n        this.parse(false);\r\n    }\r\n\r\n    handleContinue = () => {\r\n        this.handleStep();\r\n        this.setState({\r\n            step: false\r\n        })\r\n        this.startVisualize();\r\n    }\r\n\r\n    handleVisualize = () => {\r\n        this.pointCurInstruction();\r\n        this.parse(true);\r\n    }\r\n\r\n    startVisualize = () => {\r\n        this.setState({\r\n            visualize: true\r\n        })\r\n        if(this.state.code === \"\") {\r\n            this.handleReset();\r\n        }\r\n        this.pointCurInstruction();\r\n    }\r\n\r\n    handleCompile = () => {\r\n        this.setState({\r\n            compile: true\r\n        })\r\n        this.checkErrors();\r\n    }\r\n\r\n    handleReset = () => {\r\n        console.log(\"RESETTING\");\r\n        let errorInfo;\r\n        if(this.state.compile) {\r\n            errorInfo = this.state.errorInfo;\r\n        }\r\n        else {\r\n            errorInfo = [];\r\n        }\r\n        this.setState({\r\n            line: 0,\r\n            status: 0,\r\n            step: false,\r\n            speed: 3,\r\n            lines: [],\r\n            error: false,\r\n            errorInfo: errorInfo,\r\n            visualize: false,\r\n            visualDisplay: false,\r\n            nextInstruction: \"\",\r\n            instructionCount: 0,\r\n        })\r\n        //this.props.clear();\r\n    }\r\n\r\n    changeSpeed = (newSpeed) => {\r\n        this.setState({\r\n            speed: newSpeed\r\n        })\r\n    }\r\n\r\n    // checkErrors = () => {\r\n    //     let lines = this.getLines();\r\n    //     let instructionData = this.getInstructions(lines).instructions;\r\n    //     let newInfo = this.state.errorInfo;\r\n\r\n    //     for(const instruction of instructionData) {\r\n    //         if(instruction.instruction !== null) {\r\n    //             let type = instruction.instruction;\r\n    //             if(type !== \"MOV\" && type !== \"ADD\" && type !== \"SUB\" && type !== \"MUL\" && type !== \"LDR\" && type !== \"STR\" && type !== \"push\" && type !== \"pop\" && type !== \"B\" && type !== \"BNE\" && type !== \"BEQ\" && type !== \"BGT\" && type !== \"BLT\" && type !== \"BGE\" && type !== \"BLE\" && type !== \"CMP\" && type !== \"BX\" && type !== \"BL\") {\r\n    //                 newInfo.push({instruction: type, line: instruction.line+1});\r\n    //             }\r\n    //         }\r\n    //     }\r\n    //     this.setState({\r\n    //         error: true,\r\n    //         errorInfo: newInfo\r\n    //     })\r\n    // }\r\n\r\n    pointCurInstruction = (curLine) => {\r\n        console.log(curLine);\r\n        let lineNum;\r\n        let passFirst = false;  // If we want to jump to a line to highlight with a breakpoint, skip highlighting the first line\r\n        if (typeof curLine !== 'undefined') {\r\n            lineNum = curLine;\r\n            passFirst = true;\r\n        }\r\n        else {\r\n            lineNum = this.state.line;\r\n        }\r\n        console.log(lineNum);\r\n        let debugCode = \"\";\r\n        let nextInstruction = \"\";\r\n        let addStart = false;\r\n        let branch = false;\r\n        let lines = this.getLines();\r\n        let instructionData = this.getInstructions(lines);\r\n\r\n        let branchData = [{label: null, instruction: null, arg1: null}];\r\n\r\n        for(const instruction of instructionData.instructions) {\r\n            if(instruction.line === lineNum) {\r\n                if(instruction.instruction !== null) {\r\n                    branchData[0].instruction = instruction.instruction;\r\n                }\r\n                if(instruction.arg1 !== null) {\r\n                    branchData[0].arg1 = instruction.arg1;\r\n                }\r\n            }\r\n        }\r\n        console.log(branchData[0]);\r\n        console.log(instructionData.labels);\r\n\r\n        // If the instruction is a branch, we must highlight where it will branch to\r\n        let instruction = branchData[0].instruction;\r\n        if(instruction === \"B\" || (instruction === \"BNE\" && this.state.status !== 0) || (instruction === \"BEQ\" && this.state.status === 0) || (instruction === \"BGT\" && this.state.status === 1) || (instruction === \"BLT\" && this.state.status === -1) || (instruction === \"BGE\" && this.state.status !== -1) || (instruction === \"BLE\" && this.state.status !== 1) || instruction === \"BL\" || instruction === \"BX\") {\r\n            branch = true;\r\n            let line;\r\n            if(instruction === \"BX\") {\r\n                line = this.bx(branchData[0].arg1) - 1;\r\n            }\r\n            else {\r\n                line = this.branch(branchData, instructionData.labels);\r\n            }\r\n            console.log(line);\r\n            for(let i = 0; i < lines.length; i++) {\r\n                let curLine = lines[i];\r\n                if(i === line) {\r\n                    nextInstruction = (i+1) + \". \" + curLine + \"\\n\";\r\n                    debugCode += (i+1) + \". \" + curLine + \"\\n\";\r\n                }\r\n                else {\r\n                    debugCode += (i+1) + \" \" + curLine + \"\\n\";\r\n                }\r\n            }\r\n        }\r\n\r\n        if(!(lineNum === lines.length - 1) && !branch) {\r\n            for(let i = 0; i < lines.length; i++) {\r\n                let curLine = lines[i];\r\n                if(this.state.nextInstruction === \"\" && i === 0 && !passFirst) {\r\n                    if(i+1 < 10) {\r\n                        nextInstruction = \" \" + (i+1) + \". \" + curLine + \"\\n\";\r\n                        debugCode += \" \" + (i+1) + \". \" + curLine + \"\\n\";\r\n                        addStart = true;\r\n                    }\r\n                    else {\r\n                        nextInstruction = (i+1) + \". \" + curLine + \"\\n\";\r\n                        debugCode += (i+1) + \". \" + curLine + \"\\n\";\r\n                        addStart = true;\r\n                    }\r\n                }\r\n                else if(i === lineNum + 1 && !addStart) {\r\n                    if(i+1 < 10) {\r\n                        nextInstruction = \" \" + (i+1) + \". \" + curLine + \"\\n\";\r\n                        debugCode += \" \" + (i+1) + \". \" + curLine + \"\\n\";\r\n                    }\r\n                    else {\r\n                        nextInstruction = (i+1) + \". \" + curLine + \"\\n\";\r\n                        debugCode += (i+1) + \". \" + curLine + \"\\n\";\r\n                    }\r\n                }\r\n                else {\r\n                    debugCode += (i+1) + \" \" + curLine + \"\\n\";\r\n                }\r\n            }\r\n        }\r\n\r\n        // if there is only one instruction, highlight it\r\n        if(lineNum === 0 && lines.length === 1) {\r\n            nextInstruction = \"1. \" + lines[0] + \"\\n\";\r\n            debugCode += \"1. \" + lines[0] + \"\\n\";\r\n        }        \r\n\r\n        console.log(nextInstruction);\r\n        \r\n        this.setState({\r\n            debugCode: debugCode,\r\n            nextInstruction: nextInstruction\r\n        })\r\n    }\r\n\r\n    getRegister = (reg) => {\r\n        switch(reg) {\r\n            case \"R0\": {return(this.props.register.R0);}\r\n            case \"R1\": {return(this.props.register.R1);}\r\n            case \"R2\": {return(this.props.register.R2);}\r\n            case \"R3\": {return(this.props.register.R3);}\r\n            case \"R4\": {return(this.props.register.R4);}\r\n            case \"R5\": {return(this.props.register.R5);}\r\n            case \"R6\": {return(this.props.register.R6);}\r\n            case \"R7\": {return(this.props.register.R7);}\r\n            case \"R8\": {return(this.props.register.R8);}\r\n            case \"R9\": {return(this.props.register.R9);}\r\n            case \"R10\": {return(this.props.register.R10);}\r\n            case \"fp\": {return(this.props.register.fp);}\r\n            case \"R12\": {return(this.props.register.R12);}\r\n            case \"sp\": {return(this.props.register.sp);}\r\n            case \"lr\": {return(this.props.register.lr);}\r\n            case \"pc\": {return(this.props.register.pc);}\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    parse = (step) => {\r\n        let lines = this.getLines();\r\n        let instructionData = this.getInstructions(lines);\r\n        this.executeInstructions(instructionData.instructions, instructionData.instructionLines, instructionData.labels, step);\r\n    }\r\n\r\n    getLines = () => {\r\n        let lines = [];\r\n        let code = this.state.code;\r\n        console.log(this.state.code);\r\n        let begin = 0;\r\n\r\n        for(let i = 0; i < code.length; i++) {\r\n            if(code.substring(i, i+1) === '\\n') {\r\n                lines.push(code.substring(begin, i) + \" \");\r\n                begin = i+1;\r\n            }\r\n        }\r\n        lines.push(code.substring(begin, code.length) + \" \");\r\n        \r\n        for(let i = 0; i < lines.length; i++) {\r\n            let line = lines[i];\r\n            if(!(/\\S/.test(line))) {\r\n                lines.splice(i, 1);\r\n                i--;\r\n            }\r\n        }\r\n\r\n        console.log(lines);\r\n        let newLines = this.state.lines;\r\n        newLines = lines;\r\n        this.setState({\r\n            lines: newLines\r\n        })\r\n\r\n        return(lines);\r\n    }\r\n\r\n    getInstructions = (lines) => {\r\n        let instructions = [];\r\n        let instructionCount = 0;\r\n        let begin = 0;\r\n        for(let i = 0; i < lines.length; i++) {\r\n            begin = 0;\r\n            instructionCount = 0;\r\n            let line = lines[i];\r\n            for(let j = 0; j < line.length; j++) {\r\n                if(/\\s/.test(line.substring(j, j+1))) {\r\n                    switch(instructionCount) {\r\n                        case 0: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, instruction: line.substring(begin, j-1).replace(/\\s/g, \"\"), label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(j-1, j) === \":\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: line.substring(begin, j-1).replace(/\\s/g, \"\")});\r\n                                begin = j+1;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: null, arg6: null, instruction: line.substring(begin, j).replace(/\\s/g, \"\"), label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 1: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg2: null, arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: line.substring(begin, j).replace(/\\s/g, \"\"), arg2: null, arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 2: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: line.substring(begin, j).replace(/\\s/g, \"\"), arg3: null, arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 3: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: line.substring(begin, j).replace(/\\s/g, \"\"), arg4: null, arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 4: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: line.substring(begin, j).replace(/\\s/g, \"\"), arg5: null, arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 5: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: line.substring(begin, j-1).replace(/\\s/g, \"\"), arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: line.substring(begin, j).replace(/\\s/g, \"\"), arg6: null, instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        case 6: {\r\n                            if(line.substring(j-1, j) === \",\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: null, arg6: line.substring(begin, j-1).replace(/\\s/g, \"\"), instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else if(line.substring(begin, j).replace(/\\s/g, \"\") !== \"\") {\r\n                                instructions.push({line: i, arg1: null, arg2: null, arg3: null, arg4: null, arg5: null, arg6: line.substring(begin, j).replace(/\\s/g, \"\"), instruction: null, label: null});\r\n                                begin = j+1;\r\n                                instructionCount++;\r\n                                break;\r\n                            }\r\n                            else {\r\n                                break;\r\n                            }\r\n                        }\r\n                        default: {}\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        let curLine = 0;\r\n        let instructionLines = [0];\r\n        let labels = [];\r\n        for(let i = 0; i < instructions.length; i++) {\r\n            let elem = instructions[i];\r\n            if(elem.line !== curLine) {\r\n                instructionLines.push(i);\r\n                curLine++;\r\n            }\r\n            if(elem.label !== null) {\r\n                labels.push(elem);\r\n            }\r\n        }\r\n\r\n        console.log(labels);\r\n        console.log(instructions);\r\n\r\n        let returnData = {instructions: instructions, instructionLines: instructionLines, labels: labels};\r\n        return(returnData);\r\n    }\r\n\r\n    executeInstructions = (instructions, instructionLines, labels, step) => {\r\n        let line = 0;\r\n        let begin = 0;\r\n        let type = \"\";\r\n        let status = 0;\r\n        let newInstructions = [];\r\n        console.log(\"Step State: \" + step);\r\n\r\n        if(step) {\r\n            let curLine = this.state.line;\r\n            console.log(\"line: \" + curLine);\r\n            for(let i = 0; i < instructions.length; i++) {\r\n                let elem = instructions[i];\r\n                if(elem.line === curLine) {\r\n                    newInstructions.push(elem);\r\n                }\r\n            }\r\n            instructions = newInstructions;\r\n            line = curLine;\r\n        }\r\n        console.log(instructions);\r\n\r\n        for(let i = 0; i < instructions.length; i++) {\r\n            let elem = instructions[i];\r\n            console.log(elem);\r\n\r\n            if((elem.line !== line) || (i === instructions.length - 1)) {\r\n                if(i === instructions.length - 1) {\r\n                    i++;\r\n                    console.log(\"Incrementing i\");\r\n                }\r\n        \r\n                // When stepping/visualizing, if there is a label on a line by itself, move to the next line\r\n                if(type === \"\") {\r\n                    line++;\r\n                }\r\n\r\n                // If there is a breakpoint on the line about to be executed, enter step\r\n                // if(this.state.breakpoints.includes(line+1) && !step) {\r\n                //     this.setState({\r\n                //         step: true\r\n                //     })\r\n                //     this.pointCurInstruction(line-1);  \r\n                //     return;\r\n                // }\r\n\r\n                switch(type) {\r\n                    case \"ADD\": {\r\n                        this.add(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"SUB\": {\r\n                        this.sub(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"MUL\": {\r\n                        this.mul(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"MOV\": {\r\n                        this.mov(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"LDR\": {\r\n                        this.ldr(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"STR\": {\r\n                        this.str(instructions.slice(begin, i))\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"B\": {\r\n                        console.log(\"Branch\");\r\n                        line = this.branch(instructions.slice(begin, i), labels);\r\n                        if(!step) {\r\n                            i = instructionLines[line];\r\n                        }\r\n                        begin = i;\r\n                        this.props.setPc(line+3);\r\n                        console.log(line);\r\n                        console.log(i);\r\n                        break;\r\n                    }\r\n                    case \"CMP\": {\r\n                        this.props.setPc(line+3);\r\n                        status = this.cmp(instructions.slice(begin, i));\r\n                        this.setState({\r\n                            status: status\r\n                        })\r\n                        console.log(\"Status: \" + status);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"BGT\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        console.log(\"status: \" + status);\r\n                        if(status === 1) {\r\n                            console.log(\"BGT Branching\");\r\n                            line = this.branch(instructions.slice(begin, i), labels);\r\n                            if(!step) {\r\n                                i = instructionLines[line];\r\n                            }\r\n                            console.log(line);\r\n                            console.log(i);\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BLT\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(status === -1) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);\r\n                            if(!step) {\r\n                                i = instructionLines[line];\r\n                            }\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BEQ\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(status === 0) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);                      \r\n                            if(!step) {\r\n                                i = instructionLines[line];\r\n                            }\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BNE\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(!(status === 0)) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);                   \r\n                            if(!step) {\r\n                                i = instructionLines[line];\r\n                            }\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BGE\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(!(status === -1)) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);                     \r\n                            if(!step) {\r\n                                i = instructionLines[line];\r\n                            }\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BLE\": {\r\n                        if(step) {\r\n                            status = this.state.status\r\n                        }\r\n                        if(!(status === 1)) {\r\n                            line = this.branch(instructions.slice(begin, i), labels);                   \r\n                            if(!step) {\r\n                                i = instructionLines[line];\r\n                            }\r\n                            begin = i;\r\n                            this.props.setPc(line+3);\r\n                        }\r\n                        else {\r\n                            this.props.setPc(line+3);\r\n                            begin = i;\r\n                            line++;\r\n                        }\r\n                        break;\r\n                    }\r\n                    case \"BL\": {\r\n                        this.bl(line+2);\r\n                        line = this.branch(instructions.slice(begin, i), labels);                 \r\n                        this.props.setPc(line+3);\r\n                        if(!step) {\r\n                            i = instructionLines[line];\r\n                        }\r\n                        begin = i;\r\n                        break;\r\n                    }\r\n                    case \"BX\": {\r\n                        line = this.bx(instructions.slice(begin, i)[1].arg1) - 1;\r\n                        this.props.setPc(line+3);\r\n                        if(!step) {\r\n                            i = instructionLines[line];\r\n                        }\r\n                        begin = i;\r\n                        break;\r\n                    }\r\n                    case \"push\": {\r\n                        this.push(instructions.slice(begin, i));\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"pop\": {\r\n                        this.pop(instructions.slice(begin, i));\r\n                        this.props.setPc(line+3);\r\n                        begin = i;\r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"AND\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"AND\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"ORR\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"ORR\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"EOR\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"EOR\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"ASR\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"ASR\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"LSR\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"LSR\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    case \"LSL\": {\r\n                        this.bitwise(instructions.slice(begin, i), \"LSL\");\r\n                        this.props.setPc(line+3);\r\n                        begin = i; \r\n                        line++;\r\n                        break;\r\n                    }\r\n                    default: {}\r\n                }\r\n            }\r\n\r\n            let newInstructionCount = this.state.instructionCount;\r\n            this.setState({\r\n                line: line,\r\n                instructionCount: ++newInstructionCount\r\n            })\r\n            console.log(\"TOTALINSTRUCTIONS: \" + this.state.instructionCount)\r\n            if(this.state.instructionCount > 50000) {\r\n                this.handleReset();\r\n                alert(\"Infinite loop or running took too long\");\r\n                break;\r\n            }\r\n\r\n            if(i <= instructions.length - 1) {\r\n                elem = instructions[i];\r\n            }\r\n\r\n            // When running, if there is a label on a line by itself, meaning the next instruction is a label/instruction, move to the next line\r\n            if(elem.label !== null && !(i === instructions.length) && !(this.state.step) && !(this.state.visualize) && i+1 < instructions.length && instructions[i+1].arg1 === null) {\r\n                console.log(\"SETTING TYPE TO NULL\");\r\n                type = \"\";\r\n            }\r\n            if(elem.instruction !== null) {\r\n                console.log(\"SETTING TYPE TO: \" + elem.instruction);\r\n                type = elem.instruction;\r\n            }\r\n\r\n        }\r\n        \r\n        if(line === this.state.lines.length) {\r\n            this.handleReset();\r\n        }\r\n\r\n        if(!(this.state.step) && !(this.state.visualize)) {\r\n            this.handleReset();\r\n        }\r\n\r\n    }\r\n\r\n    mov = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        console.log(\"move\");\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n        }\r\n        if(arg2.substring(0, 1) === \"#\") {\r\n            if (arg2.substring(1, 3) === \"0x\") {\r\n                arg2 = this.hexToInt(arg2.substring(3, arg2.length));\r\n            }\r\n            else { \r\n                arg2 = parseInt(arg2.substring(1, arg2.length));\r\n            }\r\n        }\r\n        console.log(arg2);\r\n\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n\r\n        let movData = {arg1: arg1, arg2: arg2, handleSp: false};\r\n\r\n        if(arg1 === \"sp\") {\r\n            movData = {arg1: arg1, arg2: arg2, handleSp: true};\r\n        }\r\n        console.log(movData);\r\n        this.props.mov(movData);\r\n    }\r\n\r\n    add = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                arg3 = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg3.substring(0, 1) === \"#\") {\r\n            if (arg3.substring(1, 3) === \"0x\") {\r\n                arg3 = this.hexToInt(arg3.substring(3, arg3.length));\r\n            }\r\n            else { \r\n                arg3 = parseInt(arg3.substring(1, arg3.length));\r\n            }\r\n        }\r\n\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n        arg3 = this.correctCase(arg3);\r\n\r\n        let addData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: false};\r\n\r\n        if(arg1 === \"sp\") {\r\n            addData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: true};\r\n        }\r\n        //console.log(\"ADD: \" + \"arg1: \" + arg1 + \" arg2 : \" + arg2 + \" arg3: \" + arg3);\r\n        this.props.add(addData);\r\n    }\r\n\r\n    sub = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        console.log(\"sub\");\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                arg3 = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg3.substring(0, 1) === \"#\") {\r\n            if (arg3.substring(1, 3) === \"0x\") {\r\n                arg3 = this.hexToInt(arg3.substring(3, arg3.length));\r\n            }\r\n            else { \r\n                arg3 = parseInt(arg3.substring(1, arg3.length));\r\n            }\r\n        }\r\n        console.log(arg3);\r\n\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n        arg3 = this.correctCase(arg3);\r\n\r\n        let subData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: false};\r\n\r\n        if(arg1 === \"sp\") {\r\n            subData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: true};\r\n        }        \r\n        console.log(subData);\r\n        this.props.sub(subData);\r\n\r\n    }\r\n\r\n    mul = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        console.log(\"mul\");\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                arg3 = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg3.substring(0, 1) === \"#\") {\r\n            if (arg3.substring(1, 3) === \"0x\") {\r\n                arg3 = this.hexToInt(arg3.substring(3, arg3.length));\r\n            }\r\n            else { \r\n                arg3 = parseInt(arg3.substring(1, arg3.length));\r\n            }\r\n        }\r\n\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n        arg3 = this.correctCase(arg3);\r\n\r\n        let multData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: false};\r\n\r\n        if(arg1 === \"sp\") {\r\n            multData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: true};\r\n        }     \r\n        this.props.mult(multData);\r\n    }\r\n\r\n    cmp = (data) => {\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n        }    \r\n        if(arg2.substring(0, 1) === \"#\") {\r\n            if (arg2.substring(1, 3) === \"0x\") {\r\n                arg2 = this.hexToInt(arg2.substring(3, arg2.length));\r\n            }\r\n            else { \r\n                arg2 = parseInt(arg2.substring(1, arg2.length));\r\n            }\r\n        }\r\n        else {\r\n            arg2 = this.getRegister(this.correctCase(arg2));\r\n        }\r\n\r\n        arg1 = this.getRegister(this.correctCase(arg1));\r\n\r\n        console.log(\"CMP: arg1: \" + arg1 + \" arg2: \" + arg2);\r\n        \r\n        let newStatus = 0;\r\n        if(arg1 > arg2) {\r\n            newStatus = 1;\r\n        }\r\n        else if(arg1 === arg2) {\r\n            newStatus = 0;\r\n        }\r\n        else {\r\n            newStatus = -1;\r\n        }\r\n        \r\n        return(newStatus);\r\n    }\r\n\r\n    branch = (data, labels) => {\r\n        let name;\r\n        let line;\r\n\r\n        for(let j = 0; j < data.length; j++) {\r\n            let instruction = data[j];\r\n            if(instruction.arg1 !== null) {\r\n                name = data[j].arg1;\r\n            }\r\n        }\r\n        console.log(name);\r\n        console.log(labels);\r\n\r\n        if(isNaN(name)) {\r\n            for(const label of labels) {\r\n                if(name === label.label) {\r\n                    line = label.line;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // if there is a label that is this number, use the label instead of the line number\r\n            let existsLabel = false;\r\n            for(const label of labels) {\r\n                if(name === label.label) {\r\n                    line = label.line;\r\n                    existsLabel = true;\r\n                }\r\n            }\r\n            if(!existsLabel) {\r\n                line = (parseInt(name)) - 1;\r\n            }\r\n        }\r\n        return(line);\r\n    }\r\n\r\n    bl = (line) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        this.props.bl(line);\r\n    }\r\n    \r\n    bx = (reg) => {\r\n        return(this.getRegister(reg));\r\n    }\r\n\r\n    push = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        let arg4 = \"\";\r\n        let arg5 = \"\";\r\n        let arg6 = \"\";\r\n        console.log(data);\r\n\r\n        for(const elem of data) {\r\n            if(typeof elem.arg1 === 'string' || data.arg1 instanceof String) {\r\n                arg1 = elem.arg1;\r\n                arg1 = arg1.replace(\"{\", \"\");\r\n                arg1 = arg1.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg2 === 'string' || data.arg1 instanceof String) {\r\n                arg2 = elem.arg2;\r\n                arg2 = arg2.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg3 === 'string' || data.arg1 instanceof String) {\r\n                arg3 = elem.arg3;\r\n                arg3 = arg3.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg4 === 'string' || data.arg1 instanceof String) {\r\n                arg4 = elem.arg4;\r\n                arg4 = arg4.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg5 === 'string' || data.arg1 instanceof String) {\r\n                arg5 = elem.arg5;\r\n                arg5 = arg5.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg6 === 'string' || data.arg1 instanceof String) {\r\n                arg6 = elem.arg6;\r\n                arg6 = arg6.replace(\"}\", \"\");\r\n            }\r\n        }\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n        arg3 = this.correctCase(arg3);\r\n        arg4 = this.correctCase(arg4);\r\n        arg5 = this.correctCase(arg5);\r\n        arg6 = this.correctCase(arg6);\r\n        if(arg1.includes(\"-\")) {\r\n            let start = this.getNumberByRegister(this.correctCase(arg1.substring(0, arg1.indexOf(\"-\"))));\r\n            let end = this.getNumberByRegister(this.correctCase(arg1.substring(arg1.indexOf(\"-\") + 1, arg1.length)));\r\n            let count = 1\r\n            for(let i = start; i <= end; i++) {\r\n                switch(count) {\r\n                    case 1: arg1 = this.getRegisterByNumber(i); break;\r\n                    case 2: arg2 = this.getRegisterByNumber(i); break;\r\n                    case 3: arg3 = this.getRegisterByNumber(i); break;\r\n                    case 4: arg4 = this.getRegisterByNumber(i); break;\r\n                    case 5: arg5 = this.getRegisterByNumber(i); break;\r\n                    case 6: arg6 = this.getRegisterByNumber(i); break;\r\n                    default:{}\r\n                }\r\n                count++;\r\n            }\r\n        }\r\n        let pushData = {arg1: arg1, arg2: arg2, arg3: arg3, arg4: arg4, arg5: arg5, arg6: arg6};\r\n\r\n        this.props.push(pushData);\r\n    }\r\n\r\n    correctCase = (reg) => {\r\n        let lower = reg.toString().toLowerCase();\r\n        switch(lower) {\r\n            case \"r0\": return \"R0\";\r\n            case \"r1\": return \"R1\";\r\n            case \"r2\": return \"R2\";\r\n            case \"r3\": return \"R3\"\r\n            case \"r4\": return \"R4\";\r\n            case \"r5\": return \"R5\";\r\n            case \"r6\": return \"R6\";\r\n            case \"r7\": return \"R7\";\r\n            case \"r8\": return \"R8\";\r\n            case \"r9\": return \"R9\";\r\n            case \"r10\": return \"R10\";\r\n            case \"fp\": return \"fp\";\r\n            case \"r12\": return \"R12\";\r\n            case \"sp\": return \"sp\";\r\n            case \"lr\": return \"lr\";\r\n            case \"pc\": return \"pc\";\r\n            default:{return reg}\r\n        }\r\n    }\r\n\r\n    getNumberByRegister = (reg) => {\r\n        switch(reg) {\r\n            case \"R0\": return 0;\r\n            case \"R1\": return 1;\r\n            case \"R2\": return 2;\r\n            case \"R3\": return 3;\r\n            case \"R4\": return 4;\r\n            case \"R5\": return 5;\r\n            case \"R6\": return 6;\r\n            case \"R7\": return 7;\r\n            case \"R8\": return 8;\r\n            case \"R9\": return 9;\r\n            case \"R10\": return 10;\r\n            case \"fp\": return 11;\r\n            case \"R12\": return 12;\r\n            case \"sp\": return 13;\r\n            case \"lr\": return 14;\r\n            case \"pc\": return 15;\r\n            default:{}\r\n        }\r\n    }\r\n\r\n    getRegisterByNumber = (num) => {\r\n        switch(num) {\r\n            case 0: return \"R0\"; \r\n            case 1: return \"R1\"; \r\n            case 2: return \"R2\"; \r\n            case 3: return \"R3\"; \r\n            case 4: return \"R4\"; \r\n            case 5: return \"R5\"; \r\n            case 6: return \"R6\";\r\n            case 7: return \"R7\"; \r\n            case 8: return \"R8\"; \r\n            case 9: return \"R9\"; \r\n            case 10: return \"R10\";\r\n            case 11: return \"fp\";\r\n            case 12: return \"R12\"; \r\n            case 13: return \"sp\"; \r\n            case 14: return \"lr\"; \r\n            case 15: return \"pc\"; \r\n            default: {}\r\n        }\r\n    }\r\n\r\n    pop = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        let arg4 = \"\";\r\n        let arg5 = \"\";\r\n        let arg6 = \"\";\r\n        console.log(data);\r\n\r\n        for(const elem of data) {\r\n            if(typeof elem.arg1 === 'string' || data.arg1 instanceof String) {\r\n                arg1 = elem.arg1;\r\n                arg1 = arg1.replace(\"{\", \"\");\r\n                arg1 = arg1.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg2 === 'string' || data.arg1 instanceof String) {\r\n                arg2 = elem.arg2;\r\n                arg2 = arg2.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg3 === 'string' || data.arg1 instanceof String) {\r\n                arg3 = elem.arg3;\r\n                arg3 = arg3.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg4 === 'string' || data.arg1 instanceof String) {\r\n                arg4 = elem.arg4;\r\n                arg4 = arg4.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg5 === 'string' || data.arg1 instanceof String) {\r\n                arg5 = elem.arg5;\r\n                arg5 = arg5.replace(\"}\", \"\");\r\n            }\r\n            if(typeof elem.arg6 === 'string' || data.arg1 instanceof String) {\r\n                arg6 = elem.arg6;\r\n                arg6 = arg6.replace(\"}\", \"\");\r\n            }\r\n        }\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n        arg3 = this.correctCase(arg3);\r\n        arg4 = this.correctCase(arg4);\r\n        arg5 = this.correctCase(arg5);\r\n        arg6 = this.correctCase(arg6);\r\n        if(arg1.includes(\"-\")) {\r\n            let start = this.getNumberByRegister(this.correctCase(arg1.substring(0, arg1.indexOf(\"-\"))));\r\n            let end = this.getNumberByRegister(this.correctCase(arg1.substring(arg1.indexOf(\"-\") + 1, arg1.length)));\r\n            let count = 1\r\n            for(let i = start; i <= end; i++) {\r\n                switch(count) {\r\n                    case 1: arg1 = this.getRegisterByNumber(i); break;\r\n                    case 2: arg2 = this.getRegisterByNumber(i); break;\r\n                    case 3: arg3 = this.getRegisterByNumber(i); break;\r\n                    case 4: arg4 = this.getRegisterByNumber(i); break;\r\n                    case 5: arg5 = this.getRegisterByNumber(i); break;\r\n                    case 6: arg6 = this.getRegisterByNumber(i); break;\r\n                    default:{}\r\n                }\r\n                count++;\r\n            }\r\n        }\r\n\r\n        let popData = {arg1: arg1, arg2: arg2, arg3: arg3, arg4: arg4, arg5: arg5, arg6: arg6};\r\n        \r\n        this.props.pop(popData);\r\n    }\r\n\r\n    ldr = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        console.log(\"load\");\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let offset = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                offset = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg2.substring(0, 1) === \"[\") {\r\n            arg2 = arg2.substring(1, arg2.length);\r\n        }\r\n        if(arg2.substring(arg2.length - 1, arg2.length) === \"]\") {\r\n            arg2 = arg2.substring(0, arg2.length - 1);\r\n        }\r\n        if(offset.substring(offset.length - 1, offset.length) === \"]\") {\r\n            offset = offset.substring(0, offset.length - 1);\r\n        }\r\n        if(offset.substring(0, 1) === \"#\") {\r\n            if (offset.substring(1, 3) === \"0x\") {\r\n                offset = this.hexToInt(offset.substring(3, offset.length));\r\n            }\r\n            else { \r\n                offset = parseInt(offset.substring(1, offset.length));\r\n            }\r\n        }\r\n        if(arg2.substring(0, 1) === \"#\") {\r\n            if (arg2.substring(1, 3) === \"0x\") {\r\n                arg2 = this.hexToInt(arg2.substring(3, arg2.length));\r\n            }\r\n            else { \r\n                arg2 = parseInt(arg2.substring(1, arg2.length));\r\n            }\r\n        }\r\n        if(offset === \"\") {\r\n            offset = null;\r\n        }\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n        let ldrData = {arg1: arg1, arg2: arg2, arg3: offset};\r\n        this.props.ldr(ldrData);    \r\n    }\r\n\r\n    str = (data) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let offset = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                offset = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg2.substring(0, 1) === \"[\") {\r\n            arg2 = arg2.substring(1, arg2.length);\r\n        }\r\n        if(arg2.substring(arg2.length - 1, arg2.length) === \"]\") {\r\n            arg2 = arg2.substring(0, arg2.length - 1);\r\n        }\r\n        if(offset.substring(offset.length - 1, offset.length) === \"]\") {\r\n            offset = offset.substring(0, offset.length - 1);\r\n        }\r\n        if(offset.substring(0, 1) === \"#\") {\r\n            if (offset.substring(1, 3) === \"0x\") {\r\n                offset = this.hexToInt(offset.substring(3, offset.length));\r\n            }\r\n            else { \r\n                offset = parseInt(offset.substring(1, offset.length));\r\n            }\r\n        }\r\n        if(arg2.substring(0, 1) === \"#\") {\r\n            if (arg2.substring(1, 3) === \"0x\") {\r\n                arg2 = this.hexToInt(arg2.substring(3, arg2.length));\r\n            }\r\n            else { \r\n                arg2 = parseInt(arg2.substring(1, arg2.length));\r\n            }\r\n        }\r\n        if(offset === \"\") {\r\n            offset = null;\r\n        }\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n        let strData = {arg1: arg1, arg2: arg2, arg3: offset};\r\n        this.props.str(strData);        \r\n    }\r\n\r\n    bitwise = (data, func) => {\r\n        if(this.state.compile) {\r\n            return;\r\n        }\r\n        let arg1 = \"\";\r\n        let arg2 = \"\";\r\n        let arg3 = \"\";\r\n        for(const elem of data) {\r\n            if(elem.arg1 !== null) {\r\n                arg1 = elem.arg1;\r\n            }\r\n            if(elem.arg2 !== null) {\r\n                arg2 = elem.arg2;\r\n            }\r\n            if(elem.arg3 !== null) {\r\n                arg3 = elem.arg3;\r\n            }\r\n        }    \r\n        if(arg3.substring(0, 1) === \"#\") {\r\n            if (arg3.substring(1, 3) === \"0x\") {\r\n                arg3 = this.hexToInt(arg3.substring(3, arg3.length));\r\n            }\r\n            else { \r\n                arg3 = parseInt(arg3.substring(1, arg3.length));\r\n            }\r\n        }\r\n        arg1 = this.correctCase(arg1);\r\n        arg2 = this.correctCase(arg2);\r\n        arg3 = this.correctCase(arg3);\r\n        let bitData = {arg1: arg1, arg2: arg2, arg3: arg3, handleSp: false};\r\n        this.props.bitwise(bitData, func);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Grid container spacing={2} className=\"Debug\">\r\n\r\n                <Grid item>\r\n                    {this.state.step || this.state.visualize ? null: <ArmInfo/>}\r\n                </Grid>\r\n\r\n                <Grid item>\r\n\r\n                    <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                        <div className=\"ArmText\">\r\n                            {this.state.visualize || this.state.step ? \r\n                            <h3>\r\n                            <pre style={{fontSize: \"1.5vh\"}}>\r\n                                <Highlight search={this.state.nextInstruction}>{this.state.debugCode}</Highlight>\r\n                            </pre></h3>\r\n                            :\r\n                            <TextField InputProps={{\r\n                                startAdornment: <InputAdornment position=\"start\"><pre style={{fontSize: \"1.5vh\"}}>{this.listedLinesCalc(this.state.numLines).map(line=>\r\n                                <div>\r\n                                    {line === \"1  \\n\" ? <div>{\"\\n\"}</div> : null}\r\n                                    {/* {this.state.breakpoints.includes(parseInt(line)) ? \r\n                                        <Button onClick={() => this.addBreakpoint(line, false)} id={line} style={{height: \"1vh\"}}><FiberManualRecordIcon style={{fontSize: \"1.5vh\"}}></FiberManualRecordIcon></Button>:\r\n                                        <Button className=\"Hidden\" onClick={() => this.addBreakpoint(line, true)} id={line} style={{height: \"1vh\"}}><FiberManualRecordOutlinedIcon style={{fontSize: \"1.5vh\"}}></FiberManualRecordOutlinedIcon></Button>} */}\r\n                                    {line}\r\n                                </div>)} </pre></InputAdornment>, \r\n\r\n                                style: {fontSize: \"1.7vh\"}\r\n                            }} defaultValue={this.state.code} fullWidth=\"true\" id=\"code\" label=\"Insert ARM Assembly Code\" variant=\"outlined\" multiline rows={10} rowsMax={101}></TextField>}\r\n                        </div>\r\n\r\n                        {/* {this.state.error ? <h3>Compile Error: Instruction: {this.state.errorInfo.instruction}, line: {this.state.errorInfo.line}</h3> : null} */}\r\n                    </form>\r\n\r\n                </Grid>\r\n                {/* <Button onClick={this.handleCompile}>Check for Errors</Button>\r\n                {this.state.compile ? this.state.errorInfo.map(error =>\r\n                    <h4>Do not recognize: '{error.instruction}' on line: {error.line}</h4>): null}\r\n                {this.state.compile ? this.state.errorInfo.length === 0 ? <h4>No errors</h4>: null: null} */}\r\n\r\n                <RunOptions handleContinue={this.handleContinue} handleRun={this.handleRun} visualize={this.state.visualize} startVisualize={this.startVisualize} handleReset={this.handleReset} handleVisualize={this.handleVisualize} speed={this.state.speed} changeSpeed={this.changeSpeed} handleStep={this.handleStep} startStep={this.startStep} step={this.state.step}/>\r\n\r\n            </Grid>\r\n    \r\n        )\r\n    }\r\n}\r\n\r\nexport default Parser;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './../../App.css';\r\n\r\nclass PushReg extends Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  pushR0 = () => {\r\n    this.props.pushReg(\"R0\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR1 = () => {\r\n    this.props.pushReg(\"R1\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR2 = () => {\r\n    this.props.pushReg(\"R2\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR3 = () => {\r\n    this.props.pushReg(\"R3\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR4 = () => {\r\n    this.props.pushReg(\"R4\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR5 = () => {\r\n    this.props.pushReg(\"R5\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR6 = () => {\r\n    this.props.pushReg(\"R6\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR7 = () => {\r\n    this.props.pushReg(\"R7\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR8 = () => {\r\n    this.props.pushReg(\"R8\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR9 = () => {\r\n    this.props.pushReg(\"R9\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR10 = () => {\r\n    this.props.pushReg(\"R10\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushFp = () => {\r\n    this.props.pushReg(\"fp\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushR12 = () => {\r\n    this.props.pushReg(\"R12\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushSp = () => {\r\n    this.props.pushReg(\"sp\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushLr = () => {\r\n    this.props.pushReg(\"lr\");\r\n    this.props.close()\r\n  }\r\n\r\n  pushPc = () => {\r\n    this.props.pushReg(\"pc\");\r\n    this.props.close()\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <Grid container className=\"Column\">\r\n\r\n                <Grid item>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR0} size=\"large\">R0</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR1} size=\"large\">R1</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR2} size=\"large\">R2</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR3} size=\"large\">R3</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR4} size=\"large\">R4</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR5} size=\"large\">R5</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR6} size=\"large\">R6</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR7} size=\"large\">R7</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">                        \r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR8} size=\"large\">R8</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR9} size=\"large\">R9</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR10} size=\"large\">R10</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushFp} size=\"large\">fp</Button>\r\n                    </ButtonGroup>\r\n                </Grid> \r\n \r\n                <Grid item>\r\n                    <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">                        \r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushR12} size=\"large\">R12</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushSp} size=\"large\">sp</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushLr} size=\"large\">lr</Button>\r\n                        <Button style = {{fontSize: \"1.5vh\", width: \"4vw\"}} onClick={this.pushPc} size=\"large\">pc</Button>\r\n                    </ButtonGroup>\r\n                </Grid>\r\n\r\n            </Grid>\r\n        </div>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default PushReg;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './../../App.css';\r\n\r\nclass PushVar extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            variable: 0\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    pushVar = () => {\r\n        this.props.pushVar({value: this.state.variable, type: \"variable\"});\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                    <TextField id = \"variable\" label = \"Enter Variable\" variant = \"outlined\" />\r\n                    <Button onClick={this.pushVar}>Push</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PushVar;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './../../App.css';\r\n\r\nclass PushOutParam extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            parameter: 0,\r\n            arg: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    pushOutParam = () => {\r\n        this.props.pushOutParam({value: this.state.parameter, arg: this.state.arg, type: \"outParam\"});\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                    <div className=\"Column\">\r\n                        <div>\r\n                            <TextField id = \"parameter\" label = \"Enter Parameter\" variant = \"outlined\" />\r\n                        </div>                        \r\n                        <div>\r\n                            <TextField id = \"arg\" label = \"Enter Argument Number\" variant = \"outlined\" />\r\n                        </div>                        \r\n                    </div>\r\n                    <Button onClick={this.pushOutParam}>Push</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PushOutParam;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './../../App.css';\r\n\r\nclass PushInParam extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            parameter: 0,\r\n            arg: \"\",\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    pushInParam = () => {\r\n        this.props.pushInParam({value: this.state.parameter, arg: this.state.arg, type: \"inParam\"});\r\n        this.props.close();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                    <div className=\"Column\">\r\n                        <div>\r\n                            <TextField id = \"parameter\" label = \"Enter Parameter\" variant = \"outlined\" />\r\n                        </div>                        \r\n                        <div>\r\n                            <TextField id = \"arg\" label = \"Enter Argument Number\" variant = \"outlined\" />\r\n                        </div>                        \r\n                    </div>\r\n                    <Button onClick={this.pushInParam}>Push</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PushInParam;","import React, { Component } from 'react';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './../../App.css';\r\n\r\nclass PushFunc extends Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            registers: [\"fp\"],\r\n            variable1: \"\",\r\n            variable2: \"\",\r\n            variable3: \"\",\r\n            variable4: \"\",\r\n            variable5: \"\",\r\n            variable6: \"\",\r\n\r\n            parIn1: \"\",\r\n            parIn2: \"\",\r\n            parIn3: \"\",\r\n            parIn4: \"\",\r\n            parIn5: \"\",\r\n            parIn6: \"\",\r\n\r\n            parOut1: \"\",\r\n            parOut2: \"\",\r\n            parOut3: \"\",\r\n            parOut4: \"\",\r\n            parOut5: \"\",\r\n            parOut6: \"\",\r\n\r\n            numVar: 1,\r\n            numParIn: 1,\r\n            numParOut: 1,\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    incVar = () => {\r\n        let newNum = this.state.numVar;\r\n        newNum++;\r\n        this.setState({\r\n            numVar: newNum\r\n        })\r\n    }\r\n\r\n    incParIn = () => {\r\n        let newNum = this.state.numParIn;\r\n        newNum++;\r\n        this.setState({\r\n            numParIn: newNum\r\n        })\r\n    }\r\n\r\n    incParOut = () => {\r\n        let newNum = this.state.numParOut;\r\n        newNum++;\r\n        this.setState({\r\n            numParOut: newNum\r\n        })\r\n    }\r\n\r\n    pushFunc = () => {\r\n        let variables = [];\r\n        let inParams = [];\r\n        let outParams = [];\r\n\r\n        if(!(this.state.variable1 === \"\")) {\r\n            variables.push(this.state.variable1);\r\n        }\r\n        if(!(this.state.variable2 === \"\")) {\r\n            variables.push(this.state.variable2);\r\n        }\r\n        if(!(this.state.variable3 === \"\")) {\r\n            variables.push(this.state.variable3);\r\n        }\r\n        if(!(this.state.variable4 === \"\")) {\r\n            variables.push(this.state.variable4);\r\n        }\r\n        if(!(this.state.variable5 === \"\")) {\r\n            variables.push(this.state.variable5);\r\n        }\r\n        if(!(this.state.variable6 === \"\")) {\r\n            variables.push(this.state.variable6);\r\n        }\r\n\r\n        if(!(this.state.parIn1 === \"\")) {\r\n            inParams.push({arg: 4, value: this.state.parIn1});\r\n        }\r\n        if(!(this.state.parIn2 === \"\")) {\r\n            inParams.push({arg: 5, value: this.state.parIn2});\r\n        }\r\n        if(!(this.state.parIn3 === \"\")) {\r\n            inParams.push({arg: 6, value: this.state.parIn3});\r\n        }\r\n        if(!(this.state.parIn4 === \"\")) {\r\n            inParams.push({arg: 7, value: this.state.parIn4});\r\n        }\r\n        if(!(this.state.parIn5 === \"\")) {\r\n            inParams.push({arg: 8, value: this.state.parIn5});\r\n        }\r\n        if(!(this.state.parIn6 === \"\")) {\r\n            inParams.push({arg: 9, value: this.state.parIn6});\r\n        }\r\n\r\n        if(!(this.state.parOut1 === \"\")) {\r\n            outParams.push({arg: 4, value: this.state.parOut1});\r\n        }\r\n        if(!(this.state.parOut2 === \"\")) {\r\n            outParams.push({arg: 5, value: this.state.parOut2});\r\n        }\r\n        if(!(this.state.parOut3 === \"\")) {\r\n            outParams.push({arg: 6, value: this.state.parOut3});\r\n        }\r\n        if(!(this.state.parOut4 === \"\")) {\r\n            outParams.push({arg: 7, value: this.state.parOut4});\r\n        }\r\n        if(!(this.state.parOut5 === \"\")) {\r\n            outParams.push({arg: 8, value: this.state.parOut5});\r\n        }\r\n        if(!(this.state.parOut6 === \"\")) {\r\n            outParams.push({arg: 9, value: this.state.parOut6});\r\n        }\r\n        let reverseInParams = [];\r\n        let index = inParams.length - 1;\r\n        for(let i = 0; i < inParams.length; i++) {\r\n            reverseInParams[i] = inParams[index];\r\n            index--;\r\n        }\r\n        let registers = this.sortRegisters(this.state.registers);\r\n        let funcData = {registers: registers, vars: variables, inParams: reverseInParams, outParams: outParams, type: \"function\"}\r\n        this.props.pushFunc(funcData);\r\n        this.props.close();\r\n    }\r\n\r\n    sortRegisters = (registers) => {\r\n        let numReg = [];\r\n        let newReg = [];\r\n        console.log(registers);\r\n        for(const register of registers) {\r\n            switch(register) {\r\n                case \"R0\": {numReg.push(0); break;}\r\n                case \"R1\": {numReg.push(1); break;}\r\n                case \"R2\": {numReg.push(2); break;}\r\n                case \"R3\": {numReg.push(3); break;}\r\n                case \"R4\": {numReg.push(4); break;}\r\n                case \"R5\": {numReg.push(5); break;}\r\n                case \"R6\": {numReg.push(6); break;}\r\n                case \"R7\": {numReg.push(7); break;}\r\n                case \"R8\": {numReg.push(8); break;}\r\n                case \"R9\": {numReg.push(9); break;}\r\n                case \"R10\": {numReg.push(10); break;}\r\n                case \"fp\": {numReg.push(11); break;}\r\n                case \"R12\": {numReg.push(12); break;}\r\n                case \"sp\": {numReg.push(13); break;}\r\n                case \"lr\": {numReg.push(14); break;}\r\n                case \"pc\": {numReg.push(15); break;}\r\n                default: {}\r\n            }\r\n        }\r\n        console.log(numReg);\r\n        // Sort registers in reverse order\r\n        numReg.sort((a,b)=>b-a)\r\n        console.log(numReg);\r\n        for(const num of numReg) {\r\n            switch(num) {\r\n                case 0: {newReg.push(\"R0\"); break;}\r\n                case 1: {newReg.push(\"R1\"); break;}\r\n                case 2: {newReg.push(\"R2\"); break;}\r\n                case 3: {newReg.push(\"R3\"); break;}\r\n                case 4: {newReg.push(\"R4\"); break;}\r\n                case 5: {newReg.push(\"R5\"); break;}\r\n                case 6: {newReg.push(\"R6\"); break;}\r\n                case 7: {newReg.push(\"R7\"); break;}\r\n                case 8: {newReg.push(\"R8\"); break;}\r\n                case 9: {newReg.push(\"R9\"); break;}\r\n                case 10: {newReg.push(\"R10\"); break;}\r\n                case 11: {newReg.push(\"fp\"); break;}\r\n                case 12: {newReg.push(\"R12\"); break;}\r\n                case 13: {newReg.push(\"sp\"); break;}\r\n                case 14: {newReg.push(\"lr\"); break;}\r\n                case 15: {newReg.push(\"pc\"); break;}\r\n                default: {}\r\n            }\r\n        }\r\n        console.log(newReg);\r\n        return(newReg);\r\n    }\r\n\r\n    addRegister = (e) => {\r\n        let removed = false;\r\n        let newArr = this.state.registers;\r\n\r\n        if(this.state.registers.length === 0) {\r\n            let newReg = this.state.registers;\r\n            newReg.push(e.target.id);\r\n            this.setState({\r\n                registers: newReg\r\n            })\r\n        }\r\n\r\n        else {\r\n            for(const register of this.state.registers) {\r\n                if(e.target.id === register) {\r\n                    removed = true;\r\n                    let i = 0;\r\n                    while (i < newArr.length) {\r\n                        if(newArr[i] === e.target.id) {\r\n                            newArr.splice(i, 1);\r\n                        } else {\r\n                            ++i;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(!removed) {\r\n                newArr.push(e.target.id);\r\n                this.setState({\r\n                    registers: newArr,\r\n                })\r\n            }\r\n        }\r\n        console.log(this.state.registers);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                <form noValidate autoComplete = \"off\" onChange = {this.handleChange}>\r\n                    <h3>\r\n                        Select Saved Registers\r\n                    </h3>\r\n\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R0\" />} label=\"R0\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R1\" />} label=\"R1\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R2\" />} label=\"R2\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R3\" />} label=\"R3\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R4\" />} label=\"R4\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R5\" />} label=\"R5\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R6\" />} label=\"R6\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R7\" />} label=\"R7\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R8\" />} label=\"R8\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R9\" />} label=\"R9\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R10\" />} label=\"R10\" />\r\n                    <FormControlLabel control={<Checkbox checked={true} id=\"fp\" />} label=\"fp\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"R12\" />} label=\"R12\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"sp\" />} label=\"sp\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"lr\" />} label=\"lr\" />\r\n                    <FormControlLabel control={<Checkbox onClick={this.addRegister} id=\"pc\" />} label=\"pc\" />\r\n\r\n                    <h3>Add Local Variables {this.state.numVar > 5 ? <Button disabled>Add<AddIcon></AddIcon></Button> : <Button onClick={this.incVar}>Add<AddIcon></AddIcon></Button>}</h3>\r\n                   \r\n                    {this.state.numVar === 1 ?\r\n                    <Grid item>\r\n                        <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" /></Grid>\r\n                    :\r\n                    this.state.numVar === 2 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField defaultValue={this.state.variable1} id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" />  \r\n                            </Grid>\r\n                        </Grid>        \r\n                    : this.state.numVar === 3 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" />  \r\n                            </Grid>       \r\n                            <Grid item>            \r\n                                <TextField id = \"variable3\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>      \r\n                        </Grid>\r\n                    : this.state.numVar === 4 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" /> \r\n                            </Grid>                    \r\n                            <Grid item>\r\n                                <TextField id = \"variable3\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable4\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    : this.state.numVar === 5 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"variable3\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable4\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable5\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>\r\n                    : \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"variable1\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"variable2\" label = \"Enter Local Variable\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"variable3\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable4\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable5\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"variable6\" label = \"Enter Local Variable\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>}\r\n\r\n                    <h3>Add Incoming Parameters {this.state.numParIn > 5 ? <Button disabled>Add<AddIcon></AddIcon></Button> : <Button onClick={this.incParIn}>Add<AddIcon></AddIcon></Button>}</h3>\r\n                   \r\n                    {this.state.numParIn === 1 ?\r\n                        <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                    :\r\n                    this.state.numParIn === 2 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField defaultValue={this.state.parIn1} id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />  \r\n                            </Grid>\r\n                        </Grid>                   \r\n                    : this.state.numParIn === 3 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />  \r\n                            </Grid>       \r\n                            <Grid item>            \r\n                                <TextField id = \"parIn3\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>      \r\n                        </Grid>\r\n                    : this.state.numParIn === 4 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" /> \r\n                            </Grid>                    \r\n                            <Grid item>\r\n                                <TextField id = \"parIn3\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn4\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    : this.state.numParIn === 5 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"parIn3\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn4\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn5\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>\r\n                    : \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parIn1\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parIn2\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"parIn3\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn4\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn5\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parIn6\" label = \"Enter Incoming Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>}\r\n\r\n\r\n                    <h3>Add Outgoing Parameters {this.state.numParOut > 5 ? <Button disabled>Add<AddIcon></AddIcon></Button> : <Button onClick={this.incParOut}>Add<AddIcon></AddIcon></Button>}</h3>\r\n\r\n                    {this.state.numParOut === 1 ?\r\n                    <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                    :\r\n                    this.state.numParOut === 2 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField defaultValue={this.state.parOut1} id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />  \r\n                            </Grid>\r\n                        </Grid>                   \r\n                    : this.state.numParOut === 3 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />  \r\n                            </Grid>       \r\n                            <Grid item>            \r\n                                <TextField id = \"parOut3\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>      \r\n                        </Grid>\r\n                    : this.state.numParOut === 4 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" /> \r\n                            </Grid>                    \r\n                            <Grid item>\r\n                                <TextField id = \"parOut3\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut4\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                        </Grid>\r\n                    : this.state.numParOut === 5 ? \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"parOut3\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut4\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut5\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>\r\n                    : \r\n                        <Grid container class=\"Column\">\r\n                            <Grid item>\r\n                                <TextField id = \"parOut1\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <TextField id = \"parOut2\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />  \r\n                            </Grid>   \r\n                            <Grid item>             \r\n                                <TextField id = \"parOut3\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut4\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut5\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                            <Grid item>  \r\n                                <TextField id = \"parOut6\" label = \"Enter Outgoing Parameter\" variant = \"outlined\" />\r\n                            </Grid>  \r\n                        </Grid>}\r\n\r\n                    <br></br>\r\n                    <Button onClick={this.pushFunc}>Push</Button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PushFunc;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport PushReg from './PushReg';\r\nimport PushVar from './PushVar';\r\nimport PushOutParam from './PushOutParam';\r\nimport PushInParam from './PushInParam';\r\nimport PushFunc from './PushFunc';\r\nimport './../../App.css';\r\n\r\nexport default function Push(props) {\r\n  const [openRegister, setRegister] = React.useState(false);\r\n  const [openVariable, setVariable] = React.useState(false);\r\n  const [openOutParameter, setOutParameter] = React.useState(false);\r\n  const [openInParameter, setInParameter] = React.useState(false);\r\n  const [openFunction, setFunction] = React.useState(false);\r\n\r\n  const handleClose = () => {\r\n    setRegister(false);\r\n    setVariable(false);\r\n    setOutParameter(false);\r\n    setInParameter(false);\r\n    setFunction(false);\r\n    //setAnchorEl(null);\r\n  }\r\n\r\n  const handleRegister = () => {\r\n    setRegister(true);\r\n  }\r\n\r\n  const handleFunction = () => {\r\n    setFunction(true);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n  \r\n      <Grid item>\r\n        <Grid container className=\"Row\" spacing={3}>\r\n          \r\n          <Grid item>\r\n            <Button style = {{fontSize: \"1.3vh\", width: \"16vh\", height: \"5vh\"}} onClick={handleRegister} size=\"large\" variant=\"outlined\" color=\"primary\" >Push Register</Button>\r\n          </Grid>\r\n              \r\n          <Grid item>\r\n            <Button style = {{fontSize: \"1.3vh\", width: \"16vh\", height: \"5vh\"}} onClick={handleFunction} size=\"large\" variant=\"outlined\" color=\"primary\" >Push Function</Button>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Grid>\r\n\r\n\r\n\r\n\r\n      <Dialog\r\n        fullWidth={true}\r\n        open={openRegister}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"upload-dialog-title\"\r\n      >\r\n        <DialogTitle id=\"upload-dialog-title\">Push Register</DialogTitle>\r\n        <DialogContent className=\"Center\">\r\n          <PushReg close={handleClose} pushReg={props.pushReg}/>\r\n        </DialogContent>\r\n        <DialogActions>\r\n        </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={openVariable}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"upload-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"upload-dialog-title\">Push Variable</DialogTitle>\r\n            <DialogContent>\r\n              <PushVar close={handleClose} pushVar={props.pushFunc}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={openOutParameter}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"upload-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"upload-dialog-title\">Push Parameter</DialogTitle>\r\n            <DialogContent>\r\n              <PushOutParam close={handleClose} pushOutParam={props.pushFunc}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={openInParameter}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"upload-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"upload-dialog-title\">Push Parameter</DialogTitle>\r\n            <DialogContent>\r\n              <PushInParam close={handleClose} pushInParam={props.pushFunc}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n\r\n        <Dialog\r\n          fullWidth={true}\r\n          open={openFunction}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"upload-dialog-title\"\r\n        >\r\n            <DialogTitle id=\"upload-dialog-title\">Push Function</DialogTitle>\r\n            <DialogContent>\r\n              <PushFunc close={handleClose} pushFunc={props.pushFunc}/>\r\n            </DialogContent>\r\n            <DialogActions>\r\n            </DialogActions>\r\n        </Dialog>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Push from './Push Components/Push.js';\r\nimport './../App.css';\r\n\r\nclass StackOperations extends React.Component {\r\n    render() {\r\n        return(\r\n            <div>\r\n                <br></br>\r\n\r\n                <Grid container className=\"ColumnCenter\">\r\n                    <Grid item>\r\n                        <Push pushReg={this.props.pushReg} pushFunc = {this.props.pushFunc}/>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <pre>      </pre>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Grid container className=\"Row\">\r\n                            <Grid item>\r\n                                <Button style = {{fontSize: \"1.3vh\", width: \"16vh\", height: \"5vh\"}} size=\"large\" variant=\"outlined\" color=\"secondary\" onClick={this.props.pop}>Pop</Button>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <pre>      </pre>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Button style = {{fontSize: \"1.3vh\", width: \"16vh\", height: \"5vh\"}} size=\"large\" variant=\"outlined\" color=\"secondary\" onClick={this.props.clear}>Clear</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StackOperations;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Parser from './Compile Components/Parser.js'\r\nimport StackOperations from './StackOperations.js';\r\nimport './../App.css';\r\n\r\nfunction TabPanel(props) {\r\n  const { children, value, index, ...other } = props;\r\n\r\n  return (\r\n    <div\r\n      role=\"tabpanel\"\r\n      hidden={value !== index}\r\n      id={`simple-tabpanel-${index}`}\r\n      aria-labelledby={`simple-tab-${index}`}\r\n      {...other}\r\n    >\r\n      {value === index && (\r\n        <Box p={3}>\r\n          <Typography>{children}</Typography>\r\n        </Box>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nTabPanel.propTypes = {\r\n  children: PropTypes.node,\r\n  index: PropTypes.any.isRequired,\r\n  value: PropTypes.any.isRequired,\r\n};\r\n\r\nfunction a11yProps(index) {\r\n  return {\r\n    id: `simple-tab-${index}`,\r\n    'aria-controls': `simple-tabpanel-${index}`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.paper,\r\n    width: \"25vw\",\r\n  },\r\n}));\r\n\r\nexport default function SelectTab(props) {\r\n  const classes = useStyles();\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n\r\n      <AppBar position=\"static\">\r\n        <Tabs style={{minHeight: \"0vh\"}} centered value={value} onChange={handleChange} aria-label=\"simple tabs example\">\r\n          <Tab style = {{fontSize: \"1.4vh\", minHeight: \"0vh\"}} label=\"ARM Text Editor\" {...a11yProps(0)} />\r\n          <Tab style = {{fontSize: \"1.4vh\", minHeight: \"0vh\"}} label=\"Stack Visualizer\" {...a11yProps(1)} />\r\n        </Tabs>\r\n      </AppBar>\r\n\r\n      <TabPanel value={value} index={0}>\r\n        <Grid container className=\"Row\">\r\n\r\n            {/* <Grid item>\r\n              <ArmInfo/>\r\n            </Grid> */}\r\n          \r\n            <Grid item>\r\n              <Parser register={props.register} mov={props.mov} add={props.add} sub={props.sub} mult={props.mult} push={props.push} pop={props.pop} bitwise={props.bitwise} ldr={props.ldr} str={props.str} bl={props.bl} setPc={props.setPc} clear={props.clear}/>\r\n            </Grid>\r\n            \r\n            {/* <Grid item>\r\n                <Commands/>\r\n            </Grid> */}\r\n        </Grid>\r\n      </TabPanel>\r\n\r\n      <TabPanel value={value} index={1}>\r\n        <StackOperations pushReg={props.push} pushVar={props.pushFunction} pushOutParam={props.pushFunction} pushFunc={props.pushFunction} pushInParam={props.pushFunction} pop={props.pop} clear={props.clear}/>\r\n      </TabPanel>\r\n\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport './../App.css';\r\nimport './../styles/Frames.css';\r\n\r\nclass Frame extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            address: props.params.address,\r\n            data: {\r\n                type: props.params.data.type,\r\n                reg: props.params.data.reg,\r\n                value: props.params.data.value,\r\n                arg: props.params.data.arg,\r\n                pos: props.params.data.pos,\r\n            },\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div>\r\n                {(this.props.params.data.type === \"reg\") ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container className=\"Text\">\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"RegisterOutline\" : \"Register\"}>\r\n                                <h2 className=\"Text\">Register: {this.props.params.data.reg} = {this.props.params.data.value} </h2>\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                :\r\n                this.props.params.data.type === \"var\" ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"VariableOutline\" : \"Variable\"}>\r\n                                {this.props.params.address - this.props.register.fp > 0 ? \r\n                                <h2 className=\"Text\"> Local Variable: (fp + {this.props.params.address - this.props.register.fp}) &nbsp; value: {this.props.params.data.value} </h2> \r\n                                : \r\n                                <h2 className=\"Text\"> Local Variable: (fp - {Math.abs(this.props.params.address - this.props.register.fp)}) &nbsp; value: {this.props.params.data.value} </h2>}\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                :\r\n                this.props.params.data.type === \"outParam\" ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"OutParameterOutline\" : \"OutParameter\"}>\r\n                                {this.props.params.address - this.props.register.fp > 0 ? \r\n                                    <h2 className=\"Text\"> Outgoing Parameter: (arg {this.props.params.data.arg}) &nbsp; (fp + {this.props.params.address - this.props.register.fp}) &nbsp; value: {this.props.params.data.value} </h2> \r\n                                    : \r\n                                    <h2 className=\"Text\"> Outgoing Parameter: (arg {this.props.params.data.arg}) &nbsp; (fp - {Math.abs(this.props.params.address - this.props.register.fp)}) &nbsp; value: {this.props.params.data.value} </h2>}\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                : \r\n                this.props.params.data.type === \"empty\" ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"EmptyOutline\" : \"Empty\"}>\r\n                                {this.props.params.address - this.props.register.fp > 0 ? \r\n                                    <h2 className=\"Text\"> (fp + {this.props.params.address - this.props.register.fp}) &nbsp; value: {this.props.params.data.value} </h2> \r\n                                    : \r\n                                    <h2 className=\"Text\"> (fp - {Math.abs(this.props.params.address - this.props.register.fp)}) &nbsp; value: {this.props.params.data.value} </h2>}\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                :\r\n                this.props.params.data.type === \"inParam\" ?\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"InParameterOutline\" : \"InParameter\"}>\r\n                                {this.props.params.address - this.props.register.fp > 0 ? \r\n                                    <h2 className=\"Text\"> Incoming Parameter: (arg {this.props.params.data.arg}) &nbsp; (fp + {this.props.params.address - this.props.register.fp}) &nbsp; value: {this.props.params.data.value} </h2> \r\n                                    : \r\n                                    <h2 className=\"Text\"> Incoming Parameter: (arg {this.props.params.data.arg}) &nbsp; (fp - {Math.abs(this.props.params.address - this.props.register.fp)}) &nbsp; value: {this.props.params.data.value} </h2>}\r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                :\r\n                    <Grid item className=\"StackItem\">\r\n                        <Container>\r\n                            <Typography className={this.props.params.address <= this.props.register.fp ? \"TopOutline\" : \"Top\"}>\r\n                                    <h2 className=\"Text\">Bottom of Stack</h2> \r\n                            </Typography>\r\n                        </Container>\r\n                    </Grid>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Frame;","import React from 'react'\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport ArrowRightAltIcon from '@material-ui/icons/ArrowRightAlt';\r\nimport Frame from './Frame.js'\r\nimport './../App.css'\r\n\r\nclass Stack extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            frames: [{\r\n                address: 4096, \r\n                data: {\r\n                    type: \"top\",\r\n                }\r\n            }],\r\n            register: {\r\n                R0: props.register.R0,\r\n                R1: props.register.R1,\r\n                R2: props.register.R2,\r\n                R3: props.register.R3,\r\n                R4: props.register.R4,\r\n                R5: props.register.R5,\r\n                R6: props.register.R6,\r\n                R7: props.register.R7,\r\n                R8: props.register.R8,\r\n                R9: props.register.R9,\r\n                R10: props.register.R10,\r\n                fp: props.register.fp,\r\n                R12: props.register.R12,\r\n                sp: props.register.sp,\r\n                lr: props.register.lr,\r\n                pc: props.register.pc\r\n            },\r\n        }\r\n        this.pushByReg = this.pushByReg.bind(this);\r\n        this.pushByVar = this.pushByVar.bind(this);\r\n        this.pushByOutParam = this.pushByOutParam.bind(this);\r\n        this.pushByInParam = this.pushByInParam.bind(this);\r\n        this.pushFunc = this.pushFunc.bind(this);\r\n        this.push = this.push.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.setPush(this.pushByReg);\r\n        this.props.setPopReg(this.popRegister);\r\n        this.props.setPop(this.pop);\r\n        this.props.setLdr(this.loadByAddress);\r\n        this.props.setStr(this.storeByAddress);\r\n        this.props.setSp(this.setFrames);\r\n        this.props.setFunction(this.handleFuction);\r\n        this.props.setClear(this.clear);\r\n        this.props.setRemoveFrames(this.removeFrames);\r\n        //this.scrollToBottom();\r\n     }\r\n\r\n    // scrollToBottom = () => {\r\n    //     this.messagesEnd.scrollIntoView({ behavior: \"auto\" });\r\n    // }\r\n      \r\n    // componentDidUpdate() {\r\n    //     this.scrollToBottom();\r\n    // }\r\n\r\n    decimalToHex = (decimalNumber) => {\r\n        let hexNum = [];\r\n    \r\n        while(decimalNumber!==0) {\r\n            let temp  = 0; \r\n            temp = decimalNumber % 16; \r\n           \r\n            if(temp < 10) {\r\n                hexNum.push(String.fromCharCode(temp + 48)); \r\n            } \r\n            else {\r\n                hexNum.push(String.fromCharCode(temp + 55)); \r\n            } \r\n            decimalNumber = decimalNumber/16; \r\n        } \r\n\r\n        let reverse = []\r\n        let j = 2;\r\n        for(let i = 3; i >= 0; i--) {\r\n            reverse[j] = hexNum[i];\r\n            j++;\r\n        }\r\n        reverse[0] = '0';\r\n        reverse[1] = 'x';\r\n        return(reverse);\r\n    }\r\n\r\n    setFrames = (sp) => {\r\n        // If the sp is moved down, fill space with empty frames\r\n        let lowAddress = this.state.frames[this.state.frames.length - 1].address;\r\n        console.log(\"low address: \" + lowAddress);\r\n        while(sp < lowAddress) {\r\n            lowAddress -= 4;\r\n            this.pushEmpty(lowAddress);\r\n        }\r\n    }\r\n\r\n    loadByAddress = (data) => {\r\n        let newFrames = this.state.frames;\r\n        for(const frame of newFrames) {\r\n            if(frame.address === data.address) {\r\n                console.log(frame);\r\n                console.log(frame.data.value);\r\n                this.props.setReg({reg: data.reg, value: frame.data.value});\r\n            }\r\n        }\r\n    }\r\n\r\n    storeByAddress = (data) => {\r\n        let newFrames = this.state.frames;\r\n        for(const frame of newFrames) {\r\n            if(frame.address === data.address) {\r\n                frame.data.value = data.value;\r\n            }\r\n        }\r\n        this.setState({\r\n            frames: newFrames\r\n        })\r\n    }\r\n\r\n    handleFuction = (data) => {\r\n        if(data.type === \"function\") {\r\n            this.pushFunc(data);\r\n        }\r\n        if(data.type === \"inParam\") {\r\n            this.pushByInParam(data);\r\n        }\r\n        if(data.type === \"outParam\") {\r\n            this.pushByOutParam(data);\r\n        }\r\n        if(data.type === \"variable\") {\r\n            this.pushByVar(data);\r\n        }\r\n        \r\n    }\r\n\r\n    pushFunc = (data) => {\r\n        for(const inParam of data.inParams) {\r\n            this.pushByInParam(inParam);\r\n        }\r\n        for(const reg of data.registers) {\r\n            this.pushByReg(reg);\r\n        }\r\n        for(const variable of data.vars) {\r\n            this.pushByVar(variable);\r\n        }\r\n        for(const outParam of data.outParams) {\r\n            this.pushByOutParam(outParam);\r\n        }\r\n\r\n        let newFp = this.state.register;\r\n        newFp.fp = this.state.register.sp - 4;\r\n\r\n        for(let i = 0; i < data.outParams.length; i++) {\r\n            newFp.fp += 4;\r\n        }\r\n        for(let i = 0; i < data.registers.length; i++) {\r\n            newFp.fp += 4;\r\n        }\r\n        for(let i = 0; i < data.vars.length; i++) {\r\n            newFp.fp += 4;\r\n        }\r\n        this.setState({\r\n            register: newFp\r\n        })\r\n        this.props.setReg({reg: \"fp\", value: this.state.register.fp});\r\n    }\r\n\r\n    pushByReg = (reg) => {\r\n        console.log(reg);\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        switch(reg) {\r\n            case \"R0\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R0\", value: this.props.register.R0, arg: null}}); break;}\r\n            case \"R1\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R1\", value: this.props.register.R1, arg: null}}); break;}\r\n            case \"R2\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R2\", value: this.props.register.R2, arg: null}}); break;}\r\n            case \"R3\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R3\", value: this.props.register.R2, arg: null}}); break;}\r\n            case \"R4\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R4\", value: this.props.register.R4, arg: null}}); break;}\r\n            case \"R5\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R5\", value: this.props.register.R5, arg: null}}); break;}\r\n            case \"R6\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R6\", value: this.props.register.R6, arg: null}}); break;}\r\n            case \"R7\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R7\", value: this.props.register.R7, arg: null}}); break;}\r\n            case \"R8\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R8\", value: this.props.register.R8, arg: null}}); break;}\r\n            case \"R9\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R9\", value: this.props.register.R9, arg: null}}); break;}\r\n            case \"R10\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R10\", value: this.props.register.R10, arg: null}}); break;}\r\n            case \"fp\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"fp\", value: this.props.register.fp, arg: null}}); break;}\r\n            case \"R12\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"R12\", value: this.props.register.R12, arg: null}}); break;}\r\n            case \"sp\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"sp\", value: this.props.register.sp, arg: null}}); break;}\r\n            case \"lr\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"lr\", value: this.props.register.lr, arg: null}}); break;}\r\n            case \"pc\": {this.push({address: this.state.register.sp, data: {type: \"reg\", reg: \"pc\", value: this.props.register.pc, arg: null}}); break;}\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    pushByVar = (variable) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        this.push({address: this.state.register.sp, data: {type: \"var\", value: variable, arg: null}});\r\n    }\r\n\r\n    pushEmpty = (address) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        let newFrames = this.state.frames;\r\n        newFrames.push({address: address, data: {type: \"empty\", value: 0, arg: null}});\r\n\r\n        this.setState({\r\n            frames: newFrames,\r\n        }) \r\n    }\r\n\r\n    pushByOutParam = (parameter) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        this.push({address: this.state.register.sp, data: {type: \"outParam\", value: parameter.value, arg: parameter.arg}});\r\n    }\r\n\r\n    pushByInParam = (parameter) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp -= 4;\r\n\r\n        this.setState({\r\n            register: newSp\r\n        })\r\n\r\n        this.push({address: this.state.register.sp, data: {type: \"inParam\", value: parameter.value, arg: parameter.arg}});\r\n    }\r\n\r\n    push = (data) => {\r\n        let newFrames = this.state.frames;\r\n        newFrames.push(data);\r\n\r\n        this.setState({\r\n            frames: newFrames,\r\n        }) \r\n        this.props.decSp();\r\n        console.log(this.state.frames);\r\n    }\r\n\r\n    pop = () => {\r\n        if(this.state.frames.length < 2) {\r\n            alert(\"Cannot pop an empty stack\");\r\n            return;\r\n        }\r\n\r\n        let newSp = this.state.register;\r\n        newSp.sp += 4;\r\n\r\n        let curFrames = this.state.frames;\r\n        let frame = curFrames.pop();\r\n        if(frame.data.type === \"reg\") {\r\n            switch(frame.data.reg) {\r\n                case \"R0\": {let newReg = this.state.register; newReg.R0 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R0\", value: newReg.R0}); break;}\r\n                case \"R1\": {let newReg = this.state.register; newReg.R1 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R1\", value: newReg.R1}); break;}\r\n                case \"R2\": {let newReg = this.state.register; newReg.R3 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R3\", value: newReg.R3}); break;}\r\n                case \"R4\": {let newReg = this.state.register; newReg.R4 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R4\", value: newReg.R4}); break;}\r\n                case \"R5\": {let newReg = this.state.register; newReg.R5 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R5\", value: newReg.R5}); break;}\r\n                case \"R6\": {let newReg = this.state.register; newReg.R6 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R6\", value: newReg.R6}); break;}\r\n                case \"R7\": {let newReg = this.state.register; newReg.R7 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R7\", value: newReg.R7}); break;}\r\n                case \"R8\": {let newReg = this.state.register; newReg.R8 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R8\", value: newReg.R8}); break;}\r\n                case \"R9\": {let newReg = this.state.register; newReg.R9 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R9\", value: newReg.R9}); break;}\r\n                case \"R10\": {let newReg = this.state.register; newReg.R10 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R10\", value: newReg.R10}); break;}\r\n                case \"fp\": {let newReg = this.state.register; newReg.fp = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"fp\", value: newReg.fp}); break;}\r\n                case \"R12\": {let newReg = this.state.register; newReg.R12 = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"R12\", value: newReg.R12}); break;}\r\n                case \"sp\": {let newReg = this.state.register; newReg.sp = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"sp\", value: newReg.sp}); break;}\r\n                case \"lr\": {let newReg = this.state.register; newReg.lr = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"lr\", value: newReg.lr}); break;}\r\n                case \"pc\": {let newReg = this.state.register; newReg.pc = frame.data.value; this.setState({register: newReg}); this.props.setReg({reg: \"pc\", value: newReg.pc}); break;}\r\n                default: {}\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            frames: curFrames,\r\n            register: newSp,\r\n        })\r\n        if(frame.data.reg !== \"sp\") {\r\n            this.props.incSp();\r\n        }\r\n    }\r\n\r\n    popRegister = (reg) => {\r\n        let newSp = this.state.register;\r\n        newSp.sp += 4;\r\n\r\n        console.log(\"reg: \" + reg);\r\n\r\n        let curFrames = this.state.frames;\r\n        let frame = curFrames.pop();\r\n\r\n        console.log(\"DATA: \" + frame.data.value);\r\n\r\n        switch(reg) {\r\n            case \"R0\": {this.props.setReg({reg: \"R0\", value: frame.data.value}); break;}\r\n            case \"R1\": {this.props.setReg({reg: \"R1\", value: frame.data.value}); break;}\r\n            case \"R2\": {this.props.setReg({reg: \"R3\", value: frame.data.value}); break;}\r\n            case \"R4\": {this.props.setReg({reg: \"R4\", value: frame.data.value}); break;}\r\n            case \"R5\": {this.props.setReg({reg: \"R5\", value: frame.data.value}); break;}\r\n            case \"R6\": {this.props.setReg({reg: \"R6\", value: frame.data.value}); break;}\r\n            case \"R7\": {this.props.setReg({reg: \"R7\", value: frame.data.value}); break;}\r\n            case \"R8\": {this.props.setReg({reg: \"R8\", value: frame.data.value}); break;}\r\n            case \"R9\": {this.props.setReg({reg: \"R9\", value: frame.data.value}); break;}\r\n            case \"R10\": {this.props.setReg({reg: \"R10\", value: frame.data.value}); break;}\r\n            case \"fp\": {this.props.setReg({reg: \"fp\", value: frame.data.value}); break;}\r\n            case \"R12\": {this.props.setReg({reg: \"R12\", value: frame.data.value}); break;}\r\n            case \"sp\": {this.props.setReg({reg: \"sp\", value: frame.data.value}); break;}\r\n            case \"lr\": {this.props.setReg({reg: \"lr\", value: frame.data.value}); break;}\r\n            case \"pc\": {this.props.setReg({reg: \"pc\", value: frame.data.value}); break;}\r\n            default: {}\r\n        }\r\n\r\n        this.setState({\r\n            frames: curFrames,\r\n            register: newSp,\r\n        })\r\n        this.props.incSp();\r\n    }\r\n\r\n    removeFrames = () => {\r\n        let newFrames = this.state.frames;\r\n        let newRegister = this.state.register;\r\n        for(let i = newFrames.length - 1; i >= 0; i--) {\r\n            let frame = newFrames[i];\r\n            if(frame.address < this.props.register.sp) {\r\n                newFrames.pop();\r\n                newRegister.sp += 4;\r\n            }\r\n        }\r\n        this.setState({\r\n            frames: newFrames,\r\n            register: newRegister\r\n        })\r\n    }\r\n\r\n    clear = () => {\r\n        let clearFrames = [{address: 4096, data: {type: \"top\"}}];\r\n        let clearRegister = this.state.register;\r\n        clearRegister.fp = 4096;\r\n        clearRegister.sp = 4096;\r\n        this.setState({\r\n            frames: clearFrames,\r\n            register: clearRegister\r\n        })\r\n        this.props.setReg({reg: \"fp\", value: 4096});\r\n        this.props.setReg({reg: \"sp\", value: 4096});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"Stack\">\r\n\r\n                <Grid container className=\"StackHeader\">\r\n\r\n                    <Grid item>\r\n                        {this.state.frames.length === 1 ? <h2>Stack ({this.state.frames.length} frame)</h2> :<h2>Stack ({this.state.frames.length} frames)</h2>} \r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <pre>     </pre>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Button style = {{fontSize: \"1.7vh\", width: \"8vh\", height: \"4vh\"}} variant=\"outlined\" color=\"secondary\" onClick={this.clear}>Clear</Button>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n                <br></br>\r\n\r\n                {\r\n                    this.state.frames.map(frame =>\r\n                        <div>\r\n                            <Grid container className=\"Container\"> \r\n                                {(this.props.register.sp === frame.address && this.props.register.fp === frame.address) ? \r\n                                    <div>\r\n                                        <Grid item>\r\n                                            {this.decimalToHex(frame.address).map(char => char)}\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            fp <ArrowRightAltIcon style = {{fontSize: \"2vh\"}}></ArrowRightAltIcon>\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            sp <ArrowRightAltIcon style = {{fontSize: \"2vh\"}}></ArrowRightAltIcon>\r\n                                        </Grid>\r\n                                    </div>\r\n                                :    \r\n                                this.props.register.sp === frame.address ?\r\n                                    <div>\r\n                                        <Grid item>\r\n                                            {this.decimalToHex(frame.address).map(char => char)}\r\n                                        </Grid>\r\n                                        <Grid item>\r\n                                            sp <ArrowRightAltIcon style = {{fontSize: \"2vh\"}}></ArrowRightAltIcon>\r\n                                        </Grid>\r\n                                    </div>\r\n                                :      \r\n                                this.props.register.fp === frame.address ?\r\n                                <div>\r\n                                    <Grid item>\r\n                                        {this.decimalToHex(frame.address).map(char => char)}\r\n                                    </Grid>\r\n                                    <Grid item>\r\n                                        fp <ArrowRightAltIcon style = {{fontSize: \"2vh\"}}></ArrowRightAltIcon>\r\n                                    </Grid>\r\n                                </div>\r\n                                : \r\n                                <Grid>\r\n                                    {this.decimalToHex(frame.address).map(char => char)}\r\n                                </Grid>}\r\n                                \r\n                                <Frame params={frame} register={this.props.register}></Frame>\r\n\r\n                            </Grid>\r\n\r\n                            <div style={{ float:\"left\", clear: \"both\" }}\r\n                                ref={(el) => { this.messagesEnd = el; }}>\r\n                            </div>\r\n\r\n                        </div>\r\n                    )   \r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Stack;","import React from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nclass RegisterFileConfig extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        // this.state = {\r\n        //     register: {\r\n        //         r0: props.register.r0,\r\n        //         r1: props.register.r1,\r\n        //         r2: props.register.r2,\r\n        //         r3: props.register.r3,\r\n        //         r4: props.register.r4,\r\n        //         r5: props.register.r5,\r\n        //         r6: props.register.r6,\r\n        //         r7: props.register.r7,\r\n        //         r8: props.register.r8,\r\n        //         r9: props.register.r9,\r\n        //         r10: props.register.r10,\r\n        //         fp: props.register.fp,\r\n        //         r12: props.register.r12,\r\n        //         sp: props.register.sp,\r\n        //         lr: props.register.lr,\r\n        //         pc: props.register.pc\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    decimalToHex = (number) => {\r\n        if (number < 0) {\r\n            number = 0xFFFFFFFF + number + 1;\r\n        }\r\n        let hexNum = number.toString(16).toUpperCase();\r\n        while(hexNum.length < 8) {\r\n            hexNum = 0 + hexNum;\r\n        }\r\n\r\n        return \"0x\" + hexNum;\r\n    }\r\n\r\n    // decimalToHex = (decimalNumber) => {\r\n    //     let hexNum = [];\r\n    \r\n    //     while(decimalNumber!==0) {\r\n    //         let temp  = 0; \r\n    //         temp = decimalNumber % 16; \r\n           \r\n    //         if(temp < 10) {\r\n    //             hexNum.push(String.fromCharCode(temp + 48)); \r\n    //         } \r\n    //         else {\r\n    //             hexNum.push(String.fromCharCode(temp + 55)); \r\n    //         } \r\n    //         decimalNumber = decimalNumber/16; \r\n    //     } \r\n\r\n    //     if(decimalNumber === 0) {\r\n    //         for(let i = 0; i < 8; i++) {\r\n    //             hexNum.push(0);\r\n    //         }\r\n    //     }\r\n\r\n    //     let reverse = []\r\n    //     let j = 2;\r\n    //     for(let i = 7; i >= 0; i--) {\r\n    //         reverse[j] = hexNum[i];\r\n    //         j++;\r\n    //     }\r\n    //     reverse[0] = '0';\r\n    //     reverse[1] = 'x';\r\n    //     return(reverse);\r\n    // }\r\n\r\n    render() {\r\n        return (\r\n            <Grid item>\r\n\r\n                <Grid container className=\"Row\">\r\n\r\n                    <Grid item>\r\n                        <Grid container className=\"Column\">\r\n                            <Grid item>\r\n                                <h2>R0: {this.props.decimal ? this.props.register.R0: this.decimalToHex(this.props.register.R0)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R1: {this.props.decimal ? this.props.register.R1: this.decimalToHex(this.props.register.R1)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R2: {this.props.decimal ? this.props.register.R2: this.decimalToHex(this.props.register.R2)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R3: {this.props.decimal ? this.props.register.R3: this.decimalToHex(this.props.register.R3)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R4: {this.props.decimal ? this.props.register.R4: this.decimalToHex(this.props.register.R4)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R5: {this.props.decimal ? this.props.register.R5: this.decimalToHex(this.props.register.R5)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R6: {this.props.decimal ? this.props.register.R6: this.decimalToHex(this.props.register.R6)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R7: {this.props.decimal ? this.props.register.R7: this.decimalToHex(this.props.register.R7)}</h2> \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n                    \r\n                    <Grid item>\r\n                        <pre>      </pre>\r\n                    </Grid>\r\n                    \r\n                    <Grid item>\r\n                        <Grid container className=\"Column\">\r\n                            <Grid item>\r\n                                <h2>R8: {this.props.decimal ? this.props.register.R8: this.decimalToHex(this.props.register.R8)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R9: {this.props.decimal ? this.props.register.R9: this.decimalToHex(this.props.register.R9)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R10: {this.props.decimal ? this.props.register.R10: this.decimalToHex(this.props.register.R10)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>fp: {this.props.decimal ? this.props.register.fp: this.decimalToHex(this.props.register.fp)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>R12: {this.props.decimal ? this.props.register.R12: this.decimalToHex(this.props.register.R12)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>sp: {this.props.decimal ? this.props.register.sp: this.decimalToHex(this.props.register.sp)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>lr: {this.props.decimal ? this.props.register.lr: this.decimalToHex(this.props.register.lr)}</h2> \r\n                            </Grid><Grid item>\r\n                                <h2>pc: {this.props.decimal ? this.props.register.pc: this.decimalToHex(this.props.register.pc)}</h2> \r\n                            </Grid>\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n\r\n            </Grid>\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterFileConfig;","import React from 'react'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Tab from './Tab.js';\r\nimport Stack from './Stack';\r\nimport RegisterFileConfig from './RegisterFileConfig.js';\r\nimport './../App.css';\r\n\r\nclass RegisterFile extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            register: {\r\n                R0: 0,\r\n                R1: 1,\r\n                R2: 2,\r\n                R3: 3,\r\n                R4: 4,\r\n                R5: 5,\r\n                R6: 6,\r\n                R7: 7,\r\n                R8: 8,\r\n                R9: 9,\r\n                R10: 10,\r\n                fp: 4096,\r\n                R12: 12,\r\n                sp: 4096,\r\n                lr: 1,\r\n                pc: 0\r\n            },\r\n            decimal: true,\r\n            operation: \"\",\r\n            destination: \"\",\r\n            src1: \"\",\r\n            src2: \"\",\r\n            immediate: 0,\r\n        }\r\n        this.incSp = this.incSp.bind(this);\r\n        this.decSp = this.decSp.bind(this);\r\n        this.setReg = this.setReg.bind(this);\r\n        this.push = this.push.bind(this);\r\n        this.pop = this.pop.bind(this);\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    incSp = () => {\r\n        let newReg = this.state.register;\r\n        newReg.sp += 4;\r\n        this.setState({\r\n            register: newReg\r\n        })\r\n    }\r\n\r\n    decSp = () => {\r\n        let newReg = this.state.register;\r\n        newReg.sp -= 4;\r\n        this.setState({\r\n            register: newReg\r\n        })\r\n    }\r\n\r\n    toggleHex = () => {\r\n        this.setState({\r\n            decimal: !(this.state.decimal)\r\n        })\r\n    }\r\n\r\n    getRegister = (reg) => {\r\n        switch(reg) {\r\n            case \"R0\": {return(this.state.register.R0);}\r\n            case \"R1\": {return(this.state.register.R1);}\r\n            case \"R2\": {return(this.state.register.R2);}\r\n            case \"R3\": {return(this.state.register.R3);}\r\n            case \"R4\": {return(this.state.register.R4);}\r\n            case \"R5\": {return(this.state.register.R5);}\r\n            case \"R6\": {return(this.state.register.R6);}\r\n            case \"R7\": {return(this.state.register.R7);}\r\n            case \"R8\": {return(this.state.register.R8);}\r\n            case \"R9\": {return(this.state.register.R9);}\r\n            case \"R10\": {return(this.state.register.R10);}\r\n            case \"fp\": {return(this.state.register.fp);}\r\n            case \"R12\": {return(this.state.register.R12);}\r\n            case \"sp\": {return(this.state.register.sp);}\r\n            case \"lr\": {return(this.state.register.lr);}\r\n            case \"pc\": {return(this.state.register.pc);}\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    setRegister = (reg, data, newReg) => {\r\n        switch(reg) {\r\n            case \"R0\": {newReg.R0 = data; break;}\r\n            case \"R1\": {newReg.R1 = data; break;}\r\n            case \"R2\": {newReg.R2 = data; break;}\r\n            case \"R3\": {newReg.R3 = data; break;}\r\n            case \"R4\": {newReg.R4 = data; break;}\r\n            case \"R5\": {newReg.R5 = data; break;}\r\n            case \"R6\": {newReg.R6 = data; break;}\r\n            case \"R7\": {newReg.R7 = data; break;}\r\n            case \"R8\": {newReg.R8 = data; break;}\r\n            case \"R9\": {newReg.R9 = data; break;}\r\n            case \"R10\": {newReg.R10 = data; break;}\r\n            case \"fp\": {newReg.fp = data; break;}\r\n            case \"R12\": {newReg.R12 = data; break;}\r\n            case \"sp\": {newReg.sp = data; break;}\r\n            case \"lr\": {newReg.lr = data; break;}\r\n            case \"pc\": {newReg.pc = data; break;}\r\n            default: {}\r\n        }\r\n    }\r\n\r\n    setPc = (line) => {\r\n        let newPc = this.state.register;\r\n        newPc.pc = line;\r\n        this.setState({\r\n            register: newPc\r\n        })\r\n    }\r\n\r\n    mov = (data) => {\r\n        let arg2 = data.arg2;\r\n        if(typeof data.arg2 === 'string' || data.arg2 instanceof String) {\r\n            arg2 = this.getRegister(data.arg2);\r\n        }\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, arg2, newReg);\r\n       \r\n        this.setState({register: newReg});\r\n\r\n        if(data.handleSp) {\r\n            this.handleSpChild(this.state.register.sp);\r\n        }\r\n\r\n        this.removeFramesChild();\r\n        console.log(this.state.register);\r\n    }\r\n\r\n    add = (data) => {\r\n        console.log(data);\r\n        let arg2 = this.getRegister(data.arg2);\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }      \r\n\r\n        console.log(this.state.register);\r\n\r\n        console.log(arg2);\r\n        console.log(arg3);\r\n\r\n        let sum = arg2+arg3;\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, sum, newReg);\r\n\r\n        if(data.handleSp) {\r\n            this.handleSpChild(this.state.register.sp);\r\n        }\r\n        this.setState({register: newReg});\r\n\r\n        this.removeFramesChild();\r\n    }\r\n\r\n    sub = (data) => {\r\n        let arg2 = this.getRegister(data.arg2);\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }   \r\n\r\n        let difference = arg2-arg3;\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, difference, newReg);\r\n\r\n        if(data.handleSp) {\r\n            this.handleSpChild(this.state.register.sp);\r\n        }\r\n        this.setState({register: newReg});\r\n\r\n        this.removeFramesChild();\r\n    }\r\n\r\n    mult = (data) => {\r\n        let arg2 = this.getRegister(data.arg2);\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }   \r\n        let product = arg2*arg3;\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, product, newReg);\r\n\r\n        if(data.handleSp) {\r\n            this.handleSpChild(this.state.register.sp);\r\n        }\r\n        this.setState({register: newReg});\r\n\r\n        this.removeFramesChild();\r\n    }\r\n\r\n    ldr = (data) => {\r\n        let arg2 = data.arg2;\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg2 === 'string' || data.arg2 instanceof String) {\r\n            console.log(\"getting value\");\r\n            arg2 = this.getRegister(data.arg2);\r\n        }  \r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            console.log(\"getting value\");\r\n            arg3 = this.getRegister(data.arg3);\r\n        }   \r\n\r\n        let address;\r\n        if(arg3 === null) {\r\n            address = arg2;\r\n        }\r\n        else {\r\n            address = arg2 + arg3;\r\n        }\r\n        this.ldrChild({address: address, reg: data.arg1})\r\n    }\r\n\r\n    str = (data) => {\r\n        let arg1 = this.getRegister(data.arg1);\r\n        let arg2 = data.arg2;\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg2 === 'string' || data.arg2 instanceof String) {\r\n            arg2 = this.getRegister(data.arg2);\r\n        }  \r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }   \r\n        let address;\r\n        if(arg3 === null) {\r\n            address = arg2;\r\n        }\r\n        else {\r\n            address = arg2 + arg3;\r\n        }\r\n        this.strChild({address: address, value: arg1})\r\n    }\r\n\r\n    bl = (line) => {\r\n        let newRegister = this.state.register;\r\n        newRegister.lr = line;\r\n        this.setRegister(\"lr\", line, newRegister);\r\n    }\r\n\r\n    push = (data) => {\r\n        if(typeof data === 'string' || data instanceof String) {\r\n            this.pushChild(data);\r\n        }\r\n        else {\r\n            let pushArray = [];\r\n            if(data.arg1 !== \"\") {\r\n                pushArray.push(data.arg1);\r\n            }\r\n            if(data.arg2 !== \"\") {\r\n                pushArray.push(data.arg2);\r\n            }\r\n            if(data.arg3 !== \"\") {\r\n                pushArray.push(data.arg3);\r\n            }\r\n            if(data.arg4 !== \"\") {\r\n                pushArray.push(data.arg4);\r\n            }\r\n            if(data.arg5 !== \"\") {\r\n                pushArray.push(data.arg5);\r\n            }\r\n            if(data.arg6 !== \"\") {\r\n                pushArray.push(data.arg6);\r\n            }\r\n            pushArray = this.sort(pushArray, true);\r\n            for(const register of pushArray) {\r\n                this.pushChild(register);\r\n            }\r\n        }\r\n    }\r\n\r\n    pushFunction = (data) => {\r\n        this.functionChild(data);\r\n    }\r\n\r\n    clearStack = () => {\r\n        this.clearChild();\r\n    }\r\n    \r\n    pop = (data) => {\r\n        if(!(typeof data.arg1 === 'string' || data.arg1 instanceof String)) {\r\n            this.popChild();\r\n        }\r\n        else {\r\n            let popArray = [];\r\n            if(data.arg1 !== \"\") {\r\n                popArray.push(data.arg1);\r\n            }\r\n            if(data.arg2 !== \"\") {\r\n                popArray.push(data.arg2);\r\n            }\r\n            if(data.arg3 !== \"\") {\r\n                popArray.push(data.arg3);\r\n            }\r\n            if(data.arg4 !== \"\") {\r\n                popArray.push(data.arg4);\r\n            }\r\n            if(data.arg5 !== \"\") {\r\n                popArray.push(data.arg5);\r\n            }\r\n            if(data.arg6 !== \"\") {\r\n                popArray.push(data.arg6);\r\n            }\r\n            popArray = this.sort(popArray, false);\r\n            for(const register of popArray) {\r\n                this.popRegChild(register);\r\n            }\r\n        }\r\n    }\r\n\r\n    bitwise = (data, func) => {\r\n        let arg2 = this.getRegister(data.arg2);\r\n        let arg3 = data.arg3;\r\n        if(typeof data.arg3 === 'string' || data.arg3 instanceof String) {\r\n            arg3 = this.getRegister(data.arg3);\r\n        }      \r\n\r\n        console.log(this.state.register);\r\n\r\n        console.log(arg2);\r\n        console.log(arg3);\r\n        console.log((arg2 >>> 0).toString(2));\r\n        console.log((arg3 >>> 0).toString(2));\r\n        console.log(func);\r\n        let result;\r\n        switch(func) {\r\n            case \"AND\": {result = arg2&arg3; break}\r\n            case \"ORR\": {result = arg2|arg3; break}\r\n            case \"EOR\": {result = arg2^arg3; break}\r\n            case \"ASR\": {result = arg2>>arg3; break}\r\n            case \"LSR\": {result = arg2>>>arg3; break}\r\n            case \"LSL\": {result = arg2<<arg3; break}\r\n            default: {}\r\n        }\r\n        console.log(result);\r\n        console.log((result >>> 0).toString(2));\r\n\r\n\r\n        let newReg = this.state.register;\r\n        this.setRegister(data.arg1, result, newReg);\r\n\r\n        this.setState({register: newReg});\r\n\r\n        this.removeFramesChild();\r\n    }\r\n\r\n    setReg = (data) => {\r\n        let newReg = this.state.register;\r\n        console.log(data);\r\n        \r\n        switch(data.reg) {\r\n            case \"R0\": {newReg.R0 = data.value; break;}\r\n            case \"R1\": {newReg.R1 = data.value; break;}\r\n            case \"R2\": {newReg.R2 = data.value; break;}\r\n            case \"R3\": {newReg.R3 = data.value; break;}\r\n            case \"R4\": {newReg.R4 = data.value; break;}\r\n            case \"R5\": {newReg.R5 = data.value; break;}\r\n            case \"R6\": {newReg.R6 = data.value; break;}\r\n            case \"R7\": {newReg.R7 = data.value; break;}\r\n            case \"R8\": {newReg.R8 = data.value; break;}\r\n            case \"R9\": {newReg.R9 = data.value; break;}\r\n            case \"R10\": {newReg.R10 = data.value; break;}\r\n            case \"fp\": {newReg.fp = data.value; break;}\r\n            case \"R12\": {newReg.R12 = data.value; break;}\r\n            case \"sp\": {newReg.sp = data.value; break;}\r\n            case \"lr\": {newReg.lr = data.value; break;}\r\n            case \"pc\": {newReg.pc = data.value; break;}\r\n            default: {}\r\n        }\r\n\r\n        this.setState({\r\n            register: newReg\r\n        })\r\n        console.log(this.state.register);\r\n    }\r\n\r\n    sort = (registers, backwards) => {\r\n        let numReg = [];\r\n        let newReg = [];\r\n        console.log(registers);\r\n        for(const register of registers) {\r\n            switch(register) {\r\n                case \"R0\": {numReg.push(0); break;}\r\n                case \"R1\": {numReg.push(1); break;}\r\n                case \"R2\": {numReg.push(2); break;}\r\n                case \"R3\": {numReg.push(3); break;}\r\n                case \"R4\": {numReg.push(4); break;}\r\n                case \"R5\": {numReg.push(5); break;}\r\n                case \"R6\": {numReg.push(6); break;}\r\n                case \"R7\": {numReg.push(7); break;}\r\n                case \"R8\": {numReg.push(8); break;}\r\n                case \"R9\": {numReg.push(9); break;}\r\n                case \"R10\": {numReg.push(10); break;}\r\n                case \"fp\": {numReg.push(11); break;}\r\n                case \"R12\": {numReg.push(12); break;}\r\n                case \"sp\": {numReg.push(13); break;}\r\n                case \"lr\": {numReg.push(14); break;}\r\n                case \"pc\": {numReg.push(15); break;}\r\n                default: {}\r\n            }\r\n        }\r\n        console.log(numReg);\r\n        if(backwards) {\r\n            numReg.sort((a,b)=>b-a);\r\n        }\r\n        else {\r\n            numReg.sort((a,b)=>a-b);\r\n        }\r\n\r\n        console.log(numReg);\r\n        for(const num of numReg) {\r\n            switch(num) {\r\n                case 0: {newReg.push(\"R0\"); break;}\r\n                case 1: {newReg.push(\"R1\"); break;}\r\n                case 2: {newReg.push(\"R2\"); break;}\r\n                case 3: {newReg.push(\"R3\"); break;}\r\n                case 4: {newReg.push(\"R4\"); break;}\r\n                case 5: {newReg.push(\"R5\"); break;}\r\n                case 6: {newReg.push(\"R6\"); break;}\r\n                case 7: {newReg.push(\"R7\"); break;}\r\n                case 8: {newReg.push(\"R8\"); break;}\r\n                case 9: {newReg.push(\"R9\"); break;}\r\n                case 10: {newReg.push(\"R10\"); break;}\r\n                case 11: {newReg.push(\"fp\"); break;}\r\n                case 12: {newReg.push(\"R12\"); break;}\r\n                case 13: {newReg.push(\"sp\"); break;}\r\n                case 14: {newReg.push(\"lr\"); break;}\r\n                case 15: {newReg.push(\"pc\"); break;}\r\n                default: {}\r\n            }\r\n        }\r\n        console.log(newReg);\r\n        return(newReg);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Grid container style = {{justifyContent: \"space-between\"}} className=\"AppComponents\">\r\n                \r\n                    <Grid item>\r\n                        <Stack setPush={push => this.pushChild = push} setPop={pop => this.popChild = pop} setPopReg={pop => this.popRegChild = pop} setLdr={ldr => this.ldrChild = ldr} setStr={str => this.strChild = str} setSp={sp => this.handleSpChild = sp} setFunction={func => this.functionChild = func} setClear={clear => this.clearChild = clear} register={this.state.register} setRemoveFrames={frames => this.removeFramesChild = frames} incSp={this.incSp} decSp={this.decSp} setReg={this.setReg} setRegister={this.setRegister}/>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Grid container className=\"RegisterFile\">\r\n\r\n                            <Grid item className=\"Center\">\r\n                                <h1>\r\n                                    Register File\r\n                                </h1>\r\n                            </Grid>\r\n\r\n                            <Grid item className=\"Center\">\r\n                                <Button style = {{fontSize: \"1.3vh\", width: \"10vh\", height: \"4vh\"}} variant=\"outlined\" color=\"primary\" onClick={this.toggleHex}>{this.state.decimal ? <h3>Hex</h3> : <h3>Dec</h3>}</Button>\r\n                            </Grid>\r\n\r\n                            <Grid item className=\"RegisterFileContainer\">\r\n                                <Grid container className=\"RegisterFileContainer\">\r\n                                    <Grid item>\r\n                                        <RegisterFileConfig register={this.state.register} decimal={this.state.decimal}/>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </Grid>\r\n\r\n                        </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item>\r\n                        <Tab register={this.state.register} mov={this.mov} add={this.add} sub={this.sub} mult={this.mult} push={this.push} pop={this.pop} ldr={this.ldr} str={this.str} bl={this.bl} setPc={this.setPc}  bitwise={this.bitwise} pushFunction={this.pushFunction} clear={this.clearStack}/>\r\n                    </Grid>\r\n\r\n                </Grid>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default RegisterFile;","import React from 'react';\nimport RegisterFile from './Components/RegisterFile';\nimport Grid from '@material-ui/core/Grid';\nimport AppBar from '@material-ui/core/AppBar';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div>\n      <div className=\"App\">\n        <h1>\n          <AppBar>Stack Visualizer</AppBar>\n        </h1>\n      </div>\n\n      <br></br>\n      <br></br>\n      <br></br>\n\n      <Grid container className=\"AppContainer\">\n        <Grid item>\n          <RegisterFile/>\n        </Grid>\n\n      </Grid>\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}